









<!DOCTYPE html>



<html lang="en">
<head>
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta charset="utf-8">
  <title>Hue 
 
    - 500 - Server error
</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" type="image/x-icon" href="/static/desktop/art/favicon.2351422f4956.ico" />
  <meta name="description" content="">
  <meta name="author" content="">

  <link href="/static/desktop/css/roboto.91c15bd9ce7b.css" rel="stylesheet">
  <link href="/static/desktop/ext/css/cui/cui.e262bc7373e8.css" rel="stylesheet">
  <link href="/static/desktop/ext/css/cui/bootstrap2.e00488d49047.css" rel="stylesheet">
  <link href="/static/desktop/ext/css/cui/bootstrap-responsive2.e47b2a557fdc.css" rel="stylesheet">

  <link href="/static/desktop/ext/css/font-awesome.min.269550530cc1.css" rel="stylesheet">
  <link href="/static/desktop/css/hue3.5cce20b01e8c.css" rel="stylesheet">
  <link href="/static/desktop/css/hue3-extra.2dbd05be95ed.css" rel="stylesheet">

  <style type="text/css">
      body {
        display: none;
        visibility: hidden;
        padding-top: 120px;
      }
      .banner {
        height: 30px;
        width: 100%;
        padding: 0;
        position: fixed;
        top: 0;
        background-color: #F9F9F9;
        z-index: 1033;
      }
      .main-content {
        top: 106px!important;
      }
      .navigator {
        top: 30px!important;
      }
      .hue-title-bar {
        top: 58px!important;
      }


  </style>

  <script type="text/javascript">
    var IS_HUE_4 = false;
  </script>

  
  <script type="text/javascript">

    var LOGGED_USERNAME = 'vega';
    var IS_S3_ENABLED = 'False' === 'True';
    var HAS_OPTIMIZER = 'False' === 'True';
    var IS_NEW_INDEXER_ENABLED = true;

    window.CSRF_TOKEN = '959SrJj0dhX3hXvU9BE1GuGFmPfFldfo';

    var BOOTSTRAP_RATIOS = {
      SPAN3: function () {
        var _w = $(window).width();
        if (_w >= 1200) {
          return 23.07692308;
        }
        else if (_w >= 768 && _w <= 979) {
          return 22.9281768;
        }
        else {
          return 23.17073171;
        }
      },
      SPAN9: function () {
        var _w = $(window).width();
        if (_w >= 1200) {
          return 74.35897436;
        }
        else if (_w >= 768 && _w <= 979) {
          return 74.30939227;
        }
        else {
          return 74.3902439;
        }
      },
      MARGIN: function () {
        return 2.56410256;
      }
    };

    var CACHEABLE_TTL = {
      default: 86400000,
      optimizer: 604800000
    };

    var AUTOCOMPLETE_TIMEOUT = 30000;

    var ENABLE_SQL_SYNTAX_CHECK = 'True' === 'True';


    window.SQL_COLUMNS_KNOWN_FACET_VALUES = {
      'type': {'array': -1, 'boolean': -1, 'bigint': -1, 'binary': -1, 'char': -1, 'date': -1, 'double': -1, 'decimal': -1, 'float': -1, 'int': -1, 'map': -1, 'real': -1, 'smallint': -1, 'string': -1, 'struct': -1, 'timestamp': -1, 'tinyint': -1, 'varchar': -1 }
    };

    var DocumentTypeGlobals = {
      'all': 'All',
      'directory': 'Directory',
      'link-pigscript': 'Pig Design',
      'link-workflow': 'Job Design',
      'notebook': 'Notebook',
      'oozie-bundle2': 'Oozie Bundle',
      'oozie-coordinator2': (IS_HUE_4 ? 'Oozie Schedule' : 'Oozie Coordinator'),
      'oozie-workflow2': 'Oozie Workflow',
      'query-hive': 'Hive Query',
      'query-impala': 'Impala Query',
      'search-dashboard': 'Search Dashboard',
      'query-mapreduce': 'MapReduce Job',
      'query-sqoop1': 'Import Job',
      'query-spark2': 'Spark Job',
      'query-java': 'Java Job',
      'query-pig': 'Pig Script',
      'query-shell': 'Shell Script',
      'query-distcp': 'DistCp Job'
    };

    var SyntaxCheckerGlobals = {
      i18n: {
        didYouMean: 'Did you mean',
        expectedStatementEnd: 'Expected end of statement',
        suppressError: 'Ignore this type of error',
        couldNotFind: 'Could not find'
      }
    };

    // jHue plugins global configuration
    var jHueFileChooserGlobals = {
      labels: {
        BACK: "Back",
        SELECT_FOLDER: "Select this folder",
        CREATE_FOLDER: "Create folder",
        FOLDER_NAME: "Folder name",
        CANCEL: "Cancel",
        FILE_NOT_FOUND: "The file has not been found",
        UPLOAD_FILE: "Upload a file",
        FAILED: "Failed"
      },
      user: "vega"
    };

    var jHueHdfsTreeGlobals = {
      labels: {
        CREATE_FOLDER: "Create folder",
        FOLDER_NAME: "Folder name",
        CANCEL: "Cancel"
      }
    };

    var jHueTableExtenderGlobals = {
      labels: {
        GO_TO_COLUMN: "Go to column:",
        PLACEHOLDER: "column name...",
        LOCK: "Lock this row",
        UNLOCK: "Unlock this row",
        ROW_DETAILS: "Show row details"
      }
    };

    var LeafletGlobals = {
      layer: 'http://{s}.tile.osm.org/{z}/{x}/{y}.png',
      attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors',
      mapOptions: JSON.parse('{}'),
      layerOptions: JSON.parse('{}')
    };

    var ApiHelperGlobals = {
      i18n: {
        errorLoadingDatabases: 'There was a problem loading the databases',
        errorLoadingTablePreview: 'There was a problem loading the preview'
      },
      user: 'vega'
    };

    var DropzoneGlobals = {
      homeDir: '/user/vega',
      i18n: {
        cancelUpload: 'Cancel upload',
        uploadCanceled: 'The upload has been canceled',
        uploadSucceeded: 'uploaded successfully'
      }
    };

    var MetastoreGlobals = {
      partitionsLimit: 1000,
      i18n: {
        errorRefreshingTableStats: 'An error occurred refreshing the table stats. Please try again.',
        errorLoadingDatabases: 'There was a problem loading the databases. Please try again.',
        errorLoadingTablePreview: 'There was a problem loading the table preview. Please try again.'
      }
    };

    var AutocompleterGlobals = {
      i18n: {
        category: {
          all: 'All',
          column: 'Columns',
          cte: 'CTEs',
          database: 'Databases',
          field: 'Field',
          function: 'Functions',
          identifier: 'Identifiers',
          keyword: 'Keywords',
          popular: 'Popular',
          sample: 'Samples',
          table: 'Tables',
          udf: 'UDFs',
          option: 'Options',
          variable: 'Variables'
        },
        meta: {
          aggregateFunction: 'aggregate',
          alias: 'alias',
          commonTableExpression: 'cte',
          database: 'database',
          filter: 'filter',
          groupBy: 'group by',
          join: 'join',
          joinCondition: 'condition',
          keyword: 'keyword',
          orderBy: 'order by',
          table: 'table',
          sample: 'sample',
          variable: 'variable',
          view: 'view',
          virtual: 'virtual'
        }
      }
    };

    var QueryBuilderGlobals = {
      i18n: {
        INSERT_VALUE_HERE: "Insert value here",
        QUERY_REQUIRE: "Query requires a select or aggregate."
      }
    }

    var CopyToClipboardGlobals = {
      i18n: {
        ERROR: "Error while copying results.",
        SUCCESS: "result(s) copied to the clipboard",
      }
    }

    var SelectizeGlobals = {
      i18n: {
        CHOOSE: "Choose..."
      }
    }
  </script>

  <!--[if lt IE 9]>
  <script type="text/javascript">
    if (document.documentMode && document.documentMode < 9){
      location.href = "/boohoo";
    }
  </script>
  <![endif]-->


  <script type="text/javascript">
    // check if it's a Firefox < 7
    var _UA = navigator.userAgent.toLowerCase();
    for (var i = 1; i < 7; i++) {
      if (_UA.indexOf("firefox/" + i + ".") > -1) {
        location.href = "/boohoo";
      }
    }

    // check for IE document modes
    if (document.documentMode && document.documentMode < 9){
      location.href = "/boohoo";
    }

    // sets a global variable to see if it's IE11 or not
    var isIE11 = !!window.MSInputMethodContext && !!document.documentMode;
  </script>


  <script src="/static/desktop/js/hue.errorcatcher.34bb8f5ecd32.js"></script>

  <script src="/static/desktop/js/hue.utils.3231237da04f.js"></script>
  <script src="/static/desktop/ext/js/jquery/jquery-2.2.4.min.2f6b11a7e914.js"></script>
  <script src="/static/desktop/js/jquery.migration.510fe01b6433.js"></script>
  <script src="/static/desktop/js/jquery.hiveautocomplete.d55f39eed164.js"></script>
  <script src="/static/desktop/js/jquery.hdfsautocomplete.fe59d3864c38.js"></script>
  <script src="/static/desktop/js/jquery.filechooser.ee386fe4c4d3.js"></script>
  <script src="/static/desktop/js/jquery.selector.edb65b852780.js"></script>
  <script src="/static/desktop/js/jquery.delayedinput.c01289581785.js"></script>
  <script src="/static/desktop/js/jquery.rowselector.a04240f7cc48.js"></script>
  <script src="/static/desktop/js/jquery.notify.a16e01031fe2.js"></script>
  <script src="/static/desktop/js/jquery.titleupdater.50f1bbe052ed.js"></script>
  <script src="/static/desktop/js/jquery.horizontalscrollbar.9cafee9292a0.js"></script>
  <script src="/static/desktop/js/jquery.tablescroller.32d974b16175.js"></script>
  <script src="/static/desktop/js/jquery.tableextender.b41ee1d1b2b4.js"></script>
  <script src="/static/desktop/js/jquery.tableextender2.8c11332f7b01.js"></script>
  <script src="/static/desktop/js/jquery.scrollleft.a48543b6d23e.js"></script>
  <script src="/static/desktop/js/jquery.scrollup.30f2ad4030e5.js"></script>
  <script src="/static/desktop/ext/js/jquery/plugins/jquery.cookie.3291194034b4.js"></script>
  <script src="/static/desktop/ext/js/jquery/plugins/jquery.total-storage.min.0293cd606e3a.js"></script>
  <script src="/static/desktop/ext/js/jquery/plugins/jquery.dataTables.1.8.2.min.70a95c5014fc.js"></script>
  <script src="/static/desktop/ext/js/jquery/plugins/jquery.form.08a24670beb2.js"></script>
  <script src="/static/desktop/js/jquery.huedatatable.1c3595f47ee1.js"></script>
  <script src="/static/desktop/js/jquery.nicescroll.7958d4c833ae.js"></script>
  <script src="/static/desktop/js/jquery.datatables.sorting.220d894311d5.js"></script>
  <script src="/static/desktop/ext/js/d3.v3.3441354a71fd.js"></script>
  <script src="/static/desktop/ext/js/d3.v4.ed085ba79e4b.js"></script>
  <script src="/static/desktop/ext/js/bootstrap.min.41e29a3120a3.js"></script>
  <script src="/static/desktop/js/bootstrap-tooltip.261b2037a7e2.js"></script>
  <script src="/static/desktop/js/bootstrap-typeahead-touchscreen.cae1442a99be.js"></script>
  <script src="/static/desktop/ext/js/bootstrap-better-typeahead.min.0f8beff3bf3c.js"></script>
  <script src="/static/desktop/js/hue.colors.9c2535720d8a.js"></script>
  <script src="/static/desktop/ext/js/fileuploader.edbfd3122aa9.js"></script>
  <script src="/static/desktop/ext/js/filesize.min.ad00d8c36fc7.js"></script>
  <script src="/static/desktop/js/popover-extra-placements.b89dd43e6070.js"></script>
  <script src="/static/desktop/ext/js/moment-with-locales.min.02b7d6129313.js"></script>
  <script src="/static/desktop/ext/js/moment-timezone-with-data.min.049191c54143.js" type="text/javascript" charset="utf-8"></script>
  <script src="/static/desktop/ext/js/tzdetect.ef3b0cc75b84.js" type="text/javascript" charset="utf-8"></script>
  <script src="/static/desktop/ext/js/knockout.min.e956a74c005b.js"></script>
  <script src="/static/desktop/ext/js/knockout-mapping.min.0a8e273ea723.js"></script>
  <script src="/static/desktop/ext/js/knockout.validation.min.639cb56539f9.js"></script>
  <script src="/static/desktop/js/ko.switch-case.97e2f05454c0.js"></script>
  <script src="/static/desktop/js/ko.hue-bindings.b3ec20df84c3.js"></script>
  <script src="/static/desktop/js/sqlUtils.1112c302ed9a.js"></script>
  <script src="/static/desktop/ext/js/dropzone.min.f9b915337650.js"></script>
  <script src="/static/desktop/js/ace/ace.f9cb7bd9944d.js"></script>
  <script src="/static/desktop/js/ace/mode-impala.7a119c45a63d.js"></script>
  <script src="/static/desktop/js/ace/mode-hive.aa39b2e1f033.js"></script>
  <script src="/static/desktop/js/ace/ext-language_tools.1effa172ad3e.js"></script>
  <script src="/static/desktop/js/ace.extended.d10952b6a182.js"></script>
  <script src="/static/desktop/js/autocomplete/sqlParseSupport.7f4a8bbc52b6.js"></script>
  <script src="/static/desktop/js/autocomplete/sqlStatementsParser.b63a84ba8954.js"></script>
  <script src="/static/desktop/js/autocomplete/sqlAutocompleteParser.424d17d8d705.js"></script>
  <script src="/static/desktop/js/autocomplete/solrQueryParser.d969b04cd765.js"></script>
  <script src="/static/desktop/js/autocomplete/solrFormulaParser.2fc78c772f33.js"></script>
  <script src="/static/desktop/js/autocomplete/globalSearchParser.c0cf9556648e.js"></script>
  <script src="/static/desktop/js/sqlAutocompleter.77db8a970804.js"></script>
  <script src="/static/desktop/js/sqlAutocompleter2.107f5269881b.js"></script>
  <script src="/static/desktop/js/sqlAutocompleter3.6ced116d3727.js"></script>
  <script src="/static/desktop/js/hdfsAutocompleter.981b171f9f38.js"></script>
  <script src="/static/desktop/js/autocompleter.43a151553b9d.js"></script>


  <script>
    ace.config.set("basePath", "/static/desktop/js/ace");
  </script>

  <script src="/static/metastore/js/metastore.model.e69246778aa2.js"></script>

  
  
  <link rel="stylesheet" href="/static/desktop/ext/css/hue-charts.99eed9d7f14f.css">
  <link rel="stylesheet" href="/static/desktop/ext/css/leaflet.c7b98a02408a.css">
  <link rel="stylesheet" href="/static/desktop/ext/css/leaflet.markercluster.2121bb8ca1b3.css">
  <link rel="stylesheet" href="/static/desktop/ext/css/leaflet.zoombox.310f2eeeca16.css">

  <script src="/static/desktop/js/hue.geo.08098609a785.js"></script>

  <script src="/static/desktop/ext/js/leaflet/leaflet.2f24711d447a.js"></script>
  <script src="/static/desktop/ext/js/leaflet/leaflet.markercluster.ad03711de4fd.js"></script>
  <script src="/static/desktop/ext/js/leaflet/leaflet.zoombox.7f876eb455c6.js"></script>
  <script src="/static/desktop/ext/js/leaflet/leaflet.heat.7c49f3d195e1.js"></script>

  <link rel="stylesheet" href="/static/desktop/ext/css/nv.d3.min.5d7c18d194bf.css">
  <link rel="stylesheet" href="/static/desktop/css/nv.d3.48ffbce95980.css">

  <script src="/static/desktop/ext/js/d3.v3.3441354a71fd.js"></script>
  <script src="/static/desktop/ext/js/d3.v4.ed085ba79e4b.js"></script>
  <script src="/static/desktop/js/nv.d3.23c252cf2a1f.js"></script>
  <script src="/static/desktop/ext/js/topojson.v1.min.ff875b32f0f6.js"></script>
  <script src="/static/desktop/ext/js/topo/world.topo.89a1efa11980.js"></script>
  <script src="/static/desktop/ext/js/topo/usa.topo.54bd001d0b56.js"></script>
  <script src="/static/desktop/ext/js/topo/chn.topo.905a46c54342.js"></script>
  <script src="/static/desktop/ext/js/topo/bra.topo.705f3d62b011.js"></script>
  <script src="/static/desktop/ext/js/topo/can.topo.c7cb552215c2.js"></script>
  <script src="/static/desktop/ext/js/topo/ind.topo.424ed561313f.js"></script>
  <script src="/static/desktop/ext/js/topo/gbr.topo.8fada2611534.js"></script>
  <script src="/static/desktop/ext/js/topo/ita.topo.5aad1b95228c.js"></script>
  <script src="/static/desktop/ext/js/topo/fra.topo.94fdcb6c37bd.js"></script>
  <script src="/static/desktop/ext/js/topo/deu.topo.4f1b97aa69ad.js"></script>
  <script src="/static/desktop/ext/js/topo/jpn.topo.dc2f69965277.js"></script>
  <script src="/static/desktop/ext/js/topo/aus.topo.f26c85a0932a.js"></script>

  <script src="/static/desktop/js/nv.d3.datamaps.dd1e95c77213.js"></script>
  <script src="/static/desktop/js/nv.d3.legend.c0837fa3b82b.js"></script>
  <script src="/static/desktop/js/nv.d3.multiBarWithBrushChart.29448472a0d6.js"></script>
  <script src="/static/desktop/js/nv.d3.lineWithBrushChart.1cb1451ce348.js"></script>
  <script src="/static/desktop/js/nv.d3.growingDiscreteBar.8c6ec37fc048.js"></script>
  <script src="/static/desktop/js/nv.d3.growingDiscreteBarChart.cdb492163a35.js"></script>
  <script src="/static/desktop/js/nv.d3.growingMultiBar.77b63fd6d2c9.js"></script>
  <script src="/static/desktop/js/nv.d3.growingMultiBarChart.0a7412e17c16.js"></script>
  <script src="/static/desktop/js/nv.d3.growingPie.a690eccb9376.js"></script>
  <script src="/static/desktop/js/nv.d3.growingPieChart.86993611dd04.js"></script>
  <script src="/static/desktop/js/ko.charts.2649b703dafa.js"></script>
  <script src="/static/desktop/js/ko.charts.leaflet.6ea1c218f923.js"></script>



  
  

  <script type="text/html" id="breadcrumbs-template">
    <div class="hue-breadcrumb-container">
      <!-- ko if: hiddenBreadcrumbs().length > 0 -->
      ...
      <!-- ko component: { name: 'hue-drop-down', params: { entries: hiddenBreadcrumbs, noLabel: true, searchable: false, value: hiddenValue } } --><!-- /ko -->
      <div class="hue-breadcrumb-divider" data-bind="text: divider"></div>
      <!-- /ko -->
      <!-- ko foreach: lastTwoBreadcrumbs -->
      <!-- ko if: $index() < $parent.lastTwoBreadcrumbs().length - 1 -->
      <div class="hue-breadcrumb pointer" data-bind="text: $data.label || $data, click: $parent.onSelect"></div>
      <div class="hue-breadcrumb-divider" data-bind="text: $parent.divider"></div>
      <!-- /ko -->
      <!-- ko if: $index() === $parent.lastTwoBreadcrumbs().length - 1 -->
      <div class="hue-breadcrumb pointer" data-bind="text: $data.label || $data"></div>
      <!-- /ko -->
      <!-- /ko -->
    </div>
  </script>

  <script type="text/javascript">
    (function () {
      function BreadcrumbViewModel(params) {
        var self = this;
        self.hiddenValue = ko.observable();
        self.onSelect = params.onSelect || function () {};
        self.hiddenValue.subscribe(function (newValue) {
          if (newValue) {
            self.onSelect(newValue);
          }
        });
        self.hiddenBreadcrumbs = ko.pureComputed(function () {
          if (params.breadcrumbs().length > 2) {
            return params.breadcrumbs().slice(0, params.breadcrumbs().length - 2);
          }
          return [];
        });
        self.lastTwoBreadcrumbs = ko.pureComputed(function () {
          return params.breadcrumbs().slice(params.breadcrumbs().length - 2, params.breadcrumbs().length);
        });
        self.divider  = params.divider || '>';
      }

      ko.components.register('hue-breadcrumbs', {
        viewModel: BreadcrumbViewModel,
        template: { element: 'breadcrumbs-template' }
      });
    })();
  </script>


  
  <script type="text/html" id="context-popover-footer">
    <div class="context-popover-flex-bottom-links">
      <div class="context-popover-link-row">
        <a class="inactive-action pointer" data-bind="visible: showInAssistEnabled, click: function() { huePubSub.publish('context.popover.show.in.assist') }">
          <i style="font-size: 11px;" title="Show in Assist..." class="fa fa-search"></i> Assist
        </a>
        <!-- ko if: typeof sourceType === 'undefined' || sourceType !== 'solr' -->
        <a class="inactive-action pointer" data-bind="visible: openInTableBrowserEnabled, click: function() { huePubSub.publish('context.popover.open.in.metastore', isTable || isView ? 'table' : 'db') }">
          <i style="font-size: 11px;" title="Open in Table Browser..." class="fa fa-external-link"></i> Table Browser
        </a>
        <!-- /ko -->
        <a class="inactive-action pointer" data-bind="visible: replaceEditorContentEnabled, click: function() { huePubSub.publish('context.popover.replace.in.editor') }">
          <i style="font-size: 11px;" title="Replace the editor content..." class="fa fa-pencil"></i> Insert in the editor
        </a>
        <a class="inactive-action pointer" data-bind="visible: openInFileBrowserEnabled, click: function() { huePubSub.publish('context.popover.open.in.file.browser') }">
          <i style="font-size: 11px;" title="Open in File Browser..." class="fa fa-external-link"></i> File Browser
        </a>
        <!-- ko if: expandColumnsEnabled -->
        <!-- ko with: contents.data -->
        <!-- ko if: selectedColumns().length > 0 -->
        <a class="inactive-action pointer" data-bind="click: expand">Expand to selected columns</a>
        <!-- /ko -->
        <!-- ko if: selectedColumns().length === 0 -->
        <a class="inactive-action pointer" data-bind="click: expand">Expand to all columns</a>
        <!-- /ko -->
        <!-- /ko -->
        <!-- /ko -->
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-columns">
    <div class="context-popover-flex-fill" data-bind="with: fetchedData">
      <!-- ko component: { name: 'sql-columns-table', params: { columns: extended_columns } } --><!-- /ko -->
    </div>
  </script>

  <script type="text/html" id="context-popover-table-details">
    <!-- ko with: fetchedData -->
    <div class="context-popover-table-details">
      <!-- ko if: details && details.properties -->
      <div class="context-popover-header">Properties</div>
      <div class="context-popover-section">
        <span style="margin-right: 5px;" title="Owner">
          <i class="fa fa-fw fa-user muted"></i> <span data-bind="text: details.properties.owner"></span>
        </span>
        <span style="margin-right: 5px;" title="Created">
          <i class="fa fa-fw fa-clock-o muted"></i> <span data-bind="text: localeFormat(details.properties.create_time)"></span>
        </span>
        <span style="margin-right: 5px;" title="Format">
          <i class="fa fa-fw fa-file-o muted"></i> <span data-bind="text: details.properties.format"></span>
        </span>
        <span style="margin-right: 5px; white-space: nowrap" title="Type">
          <i class="fa fa-fw fa-archive muted"></i> <span data-bind="visible: details.properties.table_type === 'MANAGED_TABLE'" style="display:none;">Managed</span><span data-bind="visible: !details.stats.table_type === 'EXTERNAL_TABLE'" style="display:none;">External</span>
        </span>
      </div>
      <!-- /ko -->
      <!-- ko if: typeof comment !== 'undefined' && comment !== '' && comment !== null -->
      <div class="context-popover-header">Comment</div>
      <div class="context-popover-section" style="font-style: italic;" data-bind="text: comment"></div>
      <!-- /ko -->
      <!-- ko if: typeof viewSql !== 'undefined' -->
      <div class="context-popover-header">View SQL</div>
      <!-- ko hueSpinner: { spin: loadingViewSql, center: true, size: 'large' } --><!-- /ko -->
      <!-- ko ifnot: loadingViewSql -->
      <div class="context-popover-section" class="pointer" title="Click to copy" data-bind="tooltip: { placement: 'bottom' }, clickToCopy: viewSql, click: function () { huePubSub.publish('context.popover.hide'); }, highlight: { value: viewSql, formatted: true, dialect: $parent.sourceType }"></div>
      <!-- /ko -->
      <!-- /ko -->
    </div>
    <!-- /ko -->
  </script>

  <script type="text/html" id="context-popover-column-details">
    <div class="context-popover-flex-fill" data-bind="with: fetchedData, nicescroll">
      <div>
        <div style="margin: 0 0 5px 10px;"><a class="pointer" data-bind="text: name, attr: { title: name }, click: function() { huePubSub.publish('context.popover.scroll.to.column', name); }"></a> <!-- ko if: typeof type !== 'undefined' -->(<span data-bind="text: type.indexOf('<') !== -1 ? type.substring(0, type.indexOf('<')) : type, attr: { title: type }"></span>)<!-- /ko --></div>
        <!-- ko if: typeof comment !== 'undefined' && comment !== '' && comment !== null -->
        <div class="context-popover-header">Comment</div>
        <div class="context-popover-section" data-bind="text: comment"></div>
        <!-- /ko -->
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-complex-details">
    <div class="context-popover-flex-fill" data-bind="with: fetchedData, nicescroll">
      <div style="margin: 15px;">
        <a class="pointer" data-bind="visible: typeof sample !== 'undefined', text: name || $parents[2].title, attr: { title: name || $parents[2].title }, click: function() { huePubSub.publish('context.popover.scroll.to.column', name || $parents[2].title); }"></a>
        <span data-bind="visible: typeof sample === 'undefined', text: name || $parents[2].title, attr: { title: name || $parents[2].title }"></span> <!-- ko if: typeof type !== 'undefined' -->(<span data-bind="text: type.indexOf('<') !== -1 ? type.substring(0, type.indexOf('<')) : type, attr: { title: type }"></span>)<!-- /ko -->
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-table-and-column-unknown">
    <div class="context-popover-flex-fill">
      <div style="margin: 15px;">
        <div class="alert" data-bind="text: message"></div>
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-table-and-column-sample">
    <div class="context-popover-flex-fill context-popover-sample-container" data-bind="with: fetchedData">
      <div class="context-popover-sample sample-scroll">
        <!-- ko if: rows.length == 0 -->
        <div class="alert">The selected table has no data.</div>
        <!-- /ko -->
        <!-- ko if: rows.length > 0 -->
        <table id="samples-table" class="samples-table table table-condensed">
          <thead>
          <tr>
            <th style="width: 10px">&nbsp;</th>
            <!-- ko foreach: headers -->
            <th data-bind="text: $data"></th>
            <!-- /ko -->
          </tr>
          </thead>
          <tbody>
          </tbody>
        </table>
        <!-- /ko -->
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-table-analysis">
    <div class="context-popover-flex-fill" data-bind="with: fetchedData, niceScroll">
      <!-- ko if: stats.length > 0 -->
        <table class="table table-condensed">
          <tbody data-bind="foreach: stats">
            <tr>
              <td><strong data-bind="text: data_type"></strong></td>
              <td data-bind="text: $parents[1].formatAnalysisValue(data_type, comment)"></td>
            </tr>
          </tbody>
        </table>
      <!-- /ko -->
    </div>
  </script>

  <script type="text/html" id="context-popover-column-analysis">
    <div class="context-popover-flex-fill" data-bind="with: fetchedData, niceScroll">
      <table class="table table-condensed">
        <tbody data-bind="foreach: stats">
          <tr>
            <td><strong data-bind="text: Object.keys($data)[0]"></strong></td>
            <td data-bind="text: $data[Object.keys($data)[0]]"></td>
          </tr>
        </tbody>
      </table>
    </div>
  </script>

  <script type="text/html" id="context-popover-database-details">
    <div class="context-popover-flex-fill">
      <div class="context-popover-flex">
        <div data-bind="if: $parent.comment">
          <div class="context-popover-header">Comment</div>
          <div class="context-popover-section" style="font-style: italic;" data-bind="text: $parent.comment"></div>
        </div>
        <div class="context-popover-header">Tags</div>
        <div class="context-popover-flex-fill sql-columns-table" style="position:relative; height: 100%; overflow-y: auto;">
          <div data-bind="component: { name: 'nav-tags', params: $data } "></div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-hdfs-details">
    <div class="context-popover-flex-fill" data-bind="with: details, niceScroll">
      <div style="padding: 8px">
        <div style="margin: 10px 10px 18px 10px;">
          <div data-bind="hdfsTree: { isS3: $data.path.indexOf('s3a://') === 0, path: $data.path, selectedPath: $parent.selectedPath }"></div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-collection-stats-details">
    <div class="context-popover-flex-fill" data-bind="niceScroll">
      <div style="padding: 8px">
        <div data-bind="with: stats">
        <!-- ko hueSpinner: { spin:  $parent.loadingStats, center: true, size: 'large' } --><!-- /ko -->
        <div class="alert" data-bind="visible: !$parent.loadingStats() && !$parent.statsSupported()">This field does not support stats</div>
        <div class="alert" data-bind="visible: !$parent.loadingStats() && $data.data().length == 0">There are no stats to be shown</div>
        <table style="width: 100%" data-bind="visible: !$parent.loadingStats() && $data.data().length > 0" class="table table-condensed">
          <tbody data-bind="foreach: $data.data">
          <tr>
            <td style="vertical-align: top"><strong data-bind="text: key"></strong></td>
            <!-- ko if: key == 'facets' -->
            <td>
              <!-- ko if: val[Object.keys(val)[0]] != null -->
              <table>
                <tbody data-bind="foreach: Object.keys(val[Object.keys(val)[0]])">
                  <tr>
                    <td style="vertical-align: top; padding-left: 4px; padding-right: 4px"><strong data-bind="text: $data"></strong></td>
                    <td data-bind="template: 'context-popover-collection-stats-facets'"></td>
                  </tr>
                </tbody>
              </table>
              <!-- /ko -->
              <!-- ko ifnot: val[Object.keys(val)[0]] != null -->
              Not available
              <!-- /ko -->
            </td>
            <!-- /ko -->
            <!-- ko ifnot: key == 'facets' -->
            <td data-bind="text: val"></td>
            <!-- /ko -->
          </tr>
          </tbody>
        </table>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-collection-stats-facets">
    <table style="width: 100%">
      <tbody data-bind="foreach: Object.keys($parent.val[Object.keys($parent.val)[0]][$data])">
        <tr>
          <td style="vertical-align: top; padding-left: 4px; padding-right: 4px"><strong data-bind="text: $data"></strong></td>
          <!-- ko ifnot: $data == 'facets' -->
          <td style="vertical-align: top" data-bind="text: $parents[1].val[Object.keys($parents[1].val)[0]][$parent][$data]"></td>
          <!-- /ko -->
        </tr>
      </tbody>
    </table>
  </script>


  <script type="text/html" id="context-popover-collection-terms-details">
    <div class="context-popover-flex-fill" data-bind="niceScroll">
      <input type="text" data-bind="value: terms.prefix, clearable: terms.prefix, valueUpdate:'afterkeydown'" placeholder="Filter..." class="pull-right">
      <div data-bind="with: terms">
        <!-- ko hueSpinner: { spin:  $parent.loadingTerms, center: true, size: 'large' } --><!-- /ko -->
        <div class="clearfix"></div>
        <div class="alert" data-bind="visible: !$parent.loadingTerms() && $data.data().length == 0">There are no terms to be shown</div>
        <table style="width: 100%" data-bind="visible: !$parent.loadingTerms() && $data.data().length > 0" class="table table-condensed">
          <tbody data-bind="foreach: $data.data">
          <tr>
            <td data-bind="text: val.value"></td>
            <td style="width: 40px">
              <div class="progress">
                <div class="bar-label" data-bind="text:val.count"></div>
                <div class="bar bar-info" style="margin-top:-20px;" data-bind="style: {'width': ((val.count / $parent.data()[0].val.count) * 100) + '%'}"></div>
              </div>
            </td>
          </tr>
          </tbody>
        </table>
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-asterisk-details">
    <div class="context-popover-flex-fill">
      <!-- ko component: { name: 'sql-columns-table', params: { columns: columns, scrollToColumns: false } } --><!-- /ko -->
    </div>
  </script>

  <script type="text/html" id="context-popover-function-details">
    <!-- ko if: typeof details === 'undefined' -->
    <div class="context-popover-flex-fill">
      <div class="alert">Could not find details for the function <span data-bind="text: $parents[2].title"></span>()</div>
    </div>
    <!-- /ko -->
    <!-- ko if: typeof details !== 'undefined' -->
    <div class="context-popover-flex-fill" data-bind="with: details, niceScroll">
      <div style="padding: 8px">
        <p style="margin: 10px 10px 18px 10px;"><span style="white-space: pre;" class="monospace" data-bind="text: signature"></span></p>
        <p><span data-bind="text: description"></span></p>
      </div>
    </div>
    <!-- /ko -->
  </script>

  <script type="text/html" id="context-popover-table-partitions">
    <div class="context-popover-flex-fill" data-bind="with: fetchedData, niceScroll">
      <div class="context-popover-header">Columns</div>
      <div>
        <table class="table table-condensed table-nowrap">
          <thead>
          <tr>
            <th style="width: 1%">&nbsp;</th>
            <th>Name</th>
          </tr>
          </thead>
          <tbody data-bind="foreach: partition_keys_json">
          <tr>
            <td data-bind="text: $index() + 1"></td>
            <td><a href="#" data-bind="text: $data, click: function() { huePubSub.publish('context.popover.scroll.to.column', $data); }"></a></td>
          </tr>
          </tbody>
        </table>
      </div>
      <div class="context-popover-header">Partitions</div>
      <table class="table table-condensed table-nowrap">
        <thead>
          <tr>
            <th style="width: 1%">&nbsp;</th>
            <th>Values</th>
            <th>Spec</th>
            <th>Browse</th>
          </tr>
        </thead>
        <tbody data-bind="foreach: partition_values_json">
          <tr>
            <td data-bind="text: $index() + 1"></td>
            <td><a href="#" data-bind="click: function () { window.open(readUrl, '_blank'); return false; }, text: '[\'' + columns.join('\',\'') + '\']'"></a></td>
            <td data-bind="text: partitionSpec"></td>
            <td>
              <a href="#" data-bind="click: function () { window.open(readUrl, '_blank'); return false; }" title="Data"><i class="fa fa-th"></i></a> <a href="#" data-bind="click: function () { window.open(browseUrl, '_blank'); return false; }" title="Files"><i class="fa fa-file-o"></i></a>
            </td>
          </tr>
        </tbody>
      </table>
    </div>
  </script>

  <script type="text/html" id="generic-document-context-template">
    <div style="width:100%; text-align: center; margin-top: 30px; font-size: 100px; color: #787878;" data-bind="template: { name: 'document-icon-template', data: { document: { isDirectory: type === 'directory', definition: function() { return $data } } } }"></div>
    <div style="width: 100%; margin-top: 20px; text-align:center">
      <a style="font-size: 20px;" href="javscript:void(0)" data-bind="text: name, hueLink: link, click: function () { $parents[1].close(); }"></a>
      <br/>
      <span data-bind="text: DocumentTypeGlobals[type] || type"></span>
      <!-- ko if: description -->
      <div class="context-popover-doc-description" data-bind="html: description"></div>
      <!-- /ko -->
    </div>
  </script>

  <script type="text/html" id="context-hue-app-details">
    <div class="context-popover-flex-fill" style="overflow: auto;" data-bind="with: data">
      <div style="padding: 8px">
        <div style="width:100%; text-align: center; margin-top: 30px; font-size: 100px; color: #787878;" data-bind="template: { name: 'app-icon-template', data: { icon: interpreter.type } }"></div>
         <div style="width: 100%; margin-top: 20px; text-align:center">
           <a style="font-size: 20px;" href="javscript:void(0)" data-bind="text: interpreter.displayName, hueLink: interpreter.page, click: function () { $parents[1].close(); }, attr: { 'title': interpreter.tooltip }"></a>
         </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="context-document-details">
    <div class="context-popover-flex-fill" style="overflow: auto;" data-bind="niceScroll">
      <div style="padding: 8px">
        <!-- ko if: typeof documentContents() !== 'undefined' && typeof documentContents().snippets !== 'undefined' -->

        <!-- ko with: details -->
        <div class="context-popover-doc-header-link" ><a href="javscript:void(0)" data-bind="hueLink: link, click: function () { $parents[1].close(); }"><!-- ko template: { name: 'document-icon-template', data: { document: $data, showShareAddon: false } } --><!-- /ko --> <span data-bind="text:name"></span></a></div>
        <!-- ko if: description -->
        <div class="context-popover-doc-description" data-bind="html: description"></div>
        <!-- /ko -->
        <!-- /ko -->

        <div class="context-popover-header" style="margin: 10px 0 5px 0">Contents</div>
        <!-- ko with: documentContents -->
        <!-- ko foreach: snippets -->
        <div data-bind="highlight: { value: statement_raw, formatted: true, dialect: type }"></div>
        <!-- /ko -->
        <!-- /ko -->
        <!-- /ko -->
        <!-- ko if: typeof documentContents() === 'undefined' || typeof documentContents().snippets === 'undefined' -->
        <div style="width: 100%;" data-bind="template: { name: 'generic-document-context-template', data: details }"></div>
        <!-- /ko -->
      </div>
    </div>
  </script>

  <script type="text/html" id="context-popover-template">
    <div class="hue-popover" data-bind="css: orientationClass, style: { 'left': left() + 'px', 'top': top() + 'px', 'width': width() + 'px', height: height() + 'px' }, resizable: { containment: 'document', handles: resizeHelper.resizableHandles, start: resizeHelper.resizeStart, stop: resizeHelper.resizeStop, resize: resizeHelper.resize }">
      <div class="hue-popover-arrow" data-bind="style: { 'margin-left': leftAdjust() + 'px',  'margin-top': topAdjust() + 'px' }"></div>
      <div class="hue-popover-title" style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; margin-right: 30px;">
        <i class="fa muted" data-bind="css: iconClass" style="margin-top: 3px"></i> <span style="padding-left: 4px;" data-bind="text: title"></span>
        <!-- ko if: typeof subtitle !== 'undefined' && subtitle -->
        <span class="muted" style="padding-left: 4px;" data-bind="html: subtitle"></span>
        <!-- /ko -->
        <div style="position: absolute; right: 6px; top: 8px;">
          <a class="pointer inactive-action" data-bind="visible: pinEnabled, click: pin"><i class="fa fa-fw fa-thumb-tack"></i></a>
          <a class="pointer inactive-action" data-bind="click: close"><i class="fa fa-fw fa-times"></i></a>
        </div>
      </div>
      <!-- ko template: 'context-popover-contents' --><!-- /ko -->
    </div>
  </script>

  <script type="text/html" id="context-popover-contents">
    <div class="context-popover-content">
      <!-- ko with: contents -->
      <!-- ko if: typeof tabs !== 'undefined' -->
      <ul class="nav nav-tabs context-popover-tabs" data-bind="foreach: tabs">
        <li data-bind="click: function () { $parent.activeTab(id); }, css: { 'active' : $parent.activeTab() === id }">
          <a class="context-popover-tab" data-toggle="tab" data-bind="text: label, attr: { href: '#' + id }"></a>
        </li>
      </ul>
      <div class="context-popover-tab-container" data-bind="foreach: tabs">
        <div class="context-popover-tab-pane tab-pane" data-bind="visible : $parent.activeTab() === id, attr: { id: id }, css: { 'active' : $parent.activeTab() === id }">
          <div class="context-popover-flex">
            <!-- ko with: templateData -->
            <div class="context-popover-flex-fill" data-bind="visible: loading"><!-- ko hueSpinner: { spin: loading, center: true, size: 'large' } --><!-- /ko --></div>
            <!-- ko if: ! loading() && hasErrors() -->
            <div class="context-popover-flex-fill">
                <div class="alert">
                <span data-bind="text: $parent.errorText"></span>
                <!-- ko if: $parent.enableSampleError && $parents[1].activeTab() === 'sample' -->
                <a href="javascript:void(0);" data-bind="click: function(){ huePubSub.publish('sample.error.insert.click', $data); huePubSub.publish('context.popover.hide');}">Insert <span data-bind="text:$parent.title"></span>  sample query</a> at cursor
                <!-- /ko -->
                </div>
            </div>
            <!-- /ko -->
            <!-- ko if: ! loading() && ! hasErrors() -->
            <!-- ko template: { name: $parent.template } --><!-- /ko -->
            <!-- /ko -->
            <!-- /ko -->
            <!-- ko template: { name: 'context-popover-footer', data: $parents[1] } --><!-- /ko -->
          </div>
        </div>
      </div>
      <!-- /ko -->
      <!-- ko if: typeof tabs === 'undefined' -->
      <div class="context-popover-flex-fill" data-bind="visible: loading"><!-- ko hueSpinner: { spin: loading, center: true, size: 'large' } --><!-- /ko --></div>
      <!-- ko if: !loading() && hasErrors() -->
      <div class="context-popover-flex-fill">
        <div class="alert" data-bind="text: errorText"></div>
      </div>
      <!-- /ko -->
      <!-- ko if: !loading() && !hasErrors() -->
      <!-- ko template: { name: template } --><!-- /ko -->
      <!-- /ko -->
      <!-- ko template: { name: 'context-popover-footer', data: $parent } --><!-- /ko -->
      <!-- /ko -->
      <!-- /ko -->
    </div>
  </script>

  <script type="text/javascript">
    (function () {

      var HALF_SIZE_LIMIT_X = 130;
      var HALF_SIZE_LIMIT_Y = 100;
      var HALF_ARROW = 6;

      var preventHide = false;

      var hidePopover = function () {
        if (! preventHide) {
          if ($('#contextPopover').length > 0) {
            ko.cleanNode($('#contextPopover')[0]);
            $('#contextPopover').remove();
            $(document).off('click', hideOnClickOutside);
            huePubSub.publish('context.popover.hidden');
          }
        }
      };

      var hideOnClickOutside = function (event) {
        if (jQuery.contains(document, event.target) && !$.contains($('#contextPopover')[0], event.target) && ($('.modal')[0].length === 0 || !$.contains($('.modal')[0], event.target))) {
          hidePopover();
        }
      };

      function GenericTabContents(identifierChain, sourceType, defaultDatabase, apiFunction, parent) {
        var self = this;
        self.identifierChain = identifierChain;
        self.sourceType = sourceType;
        self.defaultDatabase = defaultDatabase;
        self.apiHelper = ApiHelper.getInstance();
        self.apiFunction = apiFunction;
        self.parent = parent;

        self.fetchedData = ko.observable();
        self.loading = ko.observable(false);
        self.hasErrors = ko.observable(false);
      }

      GenericTabContents.prototype.formatAnalysisValue = function (type, val) {
        if (type === 'last_modified_time' || type === 'transient_lastDdlTime') {
          return localeFormat(val * 1000);
        }
        if (type.toLowerCase().indexOf('size') > -1) {
          return filesize(val);
        }
        return val;
      };

      GenericTabContents.prototype.fetch = function (callback) {
        var self = this;
        if (self.loading()) {
          return;
        }
        self.loading(true);
        self.hasErrors(false);

        self.apiFunction.bind(self.apiHelper)({
          sourceType: self.sourceType,
          identifierChain: self.identifierChain,
          defaultDatabase: self.defaultDatabase,
          silenceErrors: true,
          successCallback: function (data) {
            if (data.code === 500) {
              self.loading(false);
              self.hasErrors(true);
              if (data.notFound) {
                self.parent.notFound(data);
              }
              return;
            }
            if (typeof data.extended_columns !== 'undefined') {
              data.extended_columns.forEach(function (column) {
                column.extendedType = column.type.replace(/</g, '&lt;').replace(/>/g, '&lt;');
                if (column.type.indexOf('<') !== -1) {
                  column.type = column.type.substring(0, column.type.indexOf('<'));
                }
              });
            }
            if (typeof data.properties !== 'undefined') {
              data.properties.forEach(function (property) {
                if (property.col_name.toLowerCase() === 'view original text:') {
                  data.viewSql = ko.observable();
                  data.loadingViewSql = ko.observable(true);
                  ApiHelper.getInstance().formatSql(property.data_type).done(function (formatResponse) {
                    if (formatResponse.status == 0) {
                      data.viewSql(formatResponse.formatted_statements);
                    } else {
                      data.viewSql(property.data_type);
                    }
                  }).fail(function () {
                    data.viewSql(property.data_type);
                  }).always(function () {
                    data.loadingViewSql(false);
                  })
                }
              })
            }
            self.fetchedData(data);
            self.loading(false);
            if (typeof callback === 'function') {
              callback(data);
            }
          },
          errorCallback: function () {
            self.loading(false);
            self.hasErrors(true);
          }
        });
      };


      function TableAndColumnContextTabs(data, sourceType, defaultDatabase, isColumn, isComplex) {
        var self = this;
        self.tabs = ko.observableArray();
        self.disposals = [];

        var apiHelper = ApiHelper.getInstance();

        self.columns = new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, apiHelper.fetchAutocomplete, self);
        self.columnDetails = new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, apiHelper.fetchAutocomplete, self);
        self.tableDetails = new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, sourceType === 'solr' ? $.noop : apiHelper.fetchAnalysis, self);
        self.sample = new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, apiHelper.fetchSamples, self);
        self.analysis = new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, apiHelper.fetchAnalysis, self);
        self.partitions = new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, apiHelper.fetchPartitions, self);

        self.hasErrors = false;
        self.isTable = !isColumn && !isComplex;

        self.title = data.identifierChain[data.identifierChain.length - 1].name;

        self.activeTab = ko.observable();

        self.activeTab.subscribe(function (newValue) {
          if (newValue === 'sample') {
            if (typeof self.sample.fetchedData() === 'undefined') {
              if (!isComplex) {
                self.sample.fetch(self.initializeSamplesTable);
              } else {
                var data = self.columnDetails.fetchedData();
                var rows = [];
                data.sample.forEach(function (sample) {
                  rows.push([sample]);
                });
                self.sample.fetchedData({
                  headers: [ data.name || self.title ],
                  rows: rows
                });
                self.initializeSamplesTable(self.sample.fetchedData());
              }
            }
          } else if (newValue === 'complexDetails') {
            if (typeof self.columnDetails.fetchedData() === 'undefined') {
              self.columnDetails.fetch(function (data) {
                if (data.sample) {
                  self.tabs.push({
                    id: 'sample',
                    label: 'Sample',
                    template: 'context-popover-table-and-column-sample',
                    templateData: self.sample,
                    errorText: 'There was a problem loading the samples.'
                  });
                }
              })
            }
          } else if (!self.hasErrors && typeof self[newValue].fetchedData() === 'undefined') {
            self[newValue].fetch();
          }
        });

        if (isColumn) {
          self.tabs.push({
            id: 'columnDetails',
            label: 'Details',
            template: 'context-popover-column-details',
            templateData: self.columnDetails,
            errorText: 'There was a problem loading the column details.',
            isColumn: true
          });
          self.activeTab('columnDetails');
        } else if (isComplex) {
          self.tabs.push({
            id: 'complexDetails',
            label: 'Details',
            template: 'context-popover-complex-details',
            templateData: self.columnDetails,
            errorText: 'There was a problem loading the details.',
            isColumn: false
          });
          self.activeTab('complexDetails');
        } else {
          self.tabs.push({
            id: 'columns',
            label: 'Columns',
            template: 'context-popover-columns',
            templateData: self.columns,
            errorText: 'There was a problem loading the columns.',
            isColumn: false
          });
          if (sourceType !== 'solr') {
            self.tabs.push({
              id: 'tableDetails',
              label: 'Details',
              template: 'context-popover-table-details',
              templateData: self.tableDetails,
              errorText: 'There was a problem loading the table details.',
              isColumn: false
            });
          }
          self.activeTab('columns');
        }

        if (!isComplex) {
          self.tabs.push({
            id: 'sample',
            label: 'Sample',
            template: 'context-popover-table-and-column-sample',
            templateData: self.sample,
            errorText: 'There was a problem loading the samples.',
            isColumn: isColumn,
            title: self.title,
            enableSampleError: true
          });
        }

        if (isColumn) {
          self.columnDetails.fetch(function (data) {
            self.tabs.push({
              id: 'analysis',
              label: 'Analysis',
              template: 'context-popover-column-analysis',
              templateData: self.analysis,
              errorText: 'There was a problem loading the column analysis.',
              isColumn: true
            });
          });
        } else if (!isComplex) {
          self.tableDetails.fetch(function (data) {
            if (data.partition_keys.length === 0) {
              self.tabs.push({
                id: 'analysis',
                label: 'Analysis',
                template: 'context-popover-table-analysis',
                templateData: self.analysis,
                errorText: 'There was a problem loading the table analysis.',
                isColumn: false
              });
            } else if (data.partition_keys.length > 0) {
              self.tabs.push({
                id: 'partitions',
                label: 'Partitions',
                template: 'context-popover-table-partitions',
                templateData: self.partitions,
                errorText: 'There was a problem loading the table partitions.',
                isColumn: false
              });
            }
          });
        }

        var sampleInterval = window.setInterval(function () {
          if (self.activeTab() !== 'sample') {
            return;
          }
          var $t = $('.samples-table');
          if ($t.length === 0) {
            return;
          }

          $t.parents('.dataTables_wrapper').getNiceScroll().resize();
        }, 300);

        self.disposals.push(function () {
          window.clearInterval(sampleInterval);
        });

        var performScrollToColumn = function (colName) {
          self.activeTab('sample');
          window.setTimeout(function () {
            var _t = $('.samples-table');
            var _col = _t.find("th").filter(function () {
              return $.trim($(this).text()).endsWith(colName);
            });
            _t.find(".columnSelected").removeClass("columnSelected");
            var _colSel = _t.find("tr th:nth-child(" + (_col.index() + 1) + ")");
            if (_colSel.length > 0) {
              _t.find("tr td:nth-child(" + (_col.index() + 1) + ")").addClass("columnSelected");
              _t.parent().animate({
                scrollLeft: _colSel.position().left + _t.parent().scrollLeft() - _t.parent().offset().left - 30
              }, 300, function(){
                _t.data('scrollToCol', _col.index());
                _t.data('scrollToRow', null);
                _t.data('scrollAnimate', true);
                _t.data('scrollInPopover', true);
                _t.parent().trigger('scroll');
              });
            }
          }, 0);
        };

        var scrollPubSub = huePubSub.subscribe('context.popover.scroll.to.column', function (colName) {
          if (typeof self.sample.fetchedData() === 'undefined') {
            self.activeTab('sample');
            self.sample.fetch(function (data) {
              self.initializeSamplesTable(data);
              window.setTimeout(function () {
                performScrollToColumn(colName);
              }, 0);
            });
          } else {
            performScrollToColumn(colName);
          }
        });
        self.disposals.push(function () {
          scrollPubSub.remove();
        });

        apiHelper.identifierChainToPath({
          sourceType: sourceType,
          defaultDatabase: defaultDatabase,
          identifierChain: data.identifierChain
        }, function (path) {
          var showInAssistPubSub = huePubSub.subscribe('context.popover.show.in.assist', function () {
            huePubSub.publish('assist.db.highlight', {
              sourceType: sourceType,
              path: path
            });
          });
          self.disposals.push(function () {
            showInAssistPubSub.remove();
          })
        });

        self.initializeSamplesTable = function (data) {
          window.setTimeout(function () {
            var $t = $('.samples-table');

            if ($t.parent().hasClass('dataTables_wrapper')) {
              if ($t.parent().data('scrollFnDt')) {
                $t.parent().off('scroll', $t.parent().data('scrollFnDt'));
              }
              $t.unwrap();
              if ($t.children('tbody').length > 0) {
                $t.children('tbody').empty();
              } else {
                $t.children('tr').remove();
              }
              $t.data('isScrollAttached', null);
              $t.data('data', []);
            }
            var dt = $t.hueDataTable({
              i18n: {
                NO_RESULTS: "No results found.",
                OF: "of"
              },
              fnDrawCallback: function (oSettings) {
              },
              scrollable: '.dataTables_wrapper',
              forceInvisible: 10
            });

            $t.parents('.dataTables_wrapper').height($t.parents('.sample-scroll').parent().height());

            $t.jHueTableExtender2({
              fixedHeader: true,
              fixedFirstColumn: true,
              fixedFirstColumnTopMargin: -2,
              headerSorting: false,
              includeNavigator: false,
              parentId: 'sampleTab',
              noSort: true,
              mainScrollable: '.sample-scroll > .dataTables_wrapper'
            });

            huePubSub.subscribe('context.popover.resized', function () {
              $t.parent().height($t.parents('.context-popover-sample-container').height());
            });

            self.disposals.push(function () {
              if ($t.data('plugin_jHueTableExtender2')) {
                $t.data('plugin_jHueTableExtender2').destroy();
              }
              huePubSub.removeAll('context.popover.resized');
            });

            hueUtils.initNiceScroll($t.parents('.dataTables_wrapper'));

            if (data && data.rows) {
              var _tempData = [];
              $.each(data.rows, function (index, row) {
                var _row = row.slice(0); // need to clone the array otherwise it messes with the caches
                _row.unshift(index + 1);
                _tempData.push(_row);
              });
              if (_tempData.length > 0) {
                dt.fnAddData(_tempData);
              }
            }
          }, 0);
        };
      }

      TableAndColumnContextTabs.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
      };

      TableAndColumnContextTabs.prototype.notFound = function (data) {
        var self = this;
        self.hasErrors = true;
        var message;
        if (data.error && data.error.indexOf('10001]:') !== -1) {
          message = data.error.substring(data.error.indexOf('10001]:') + 8);
        } else {
          message = 'Could not load' + ': ' + self.title
        }
        self.tabs([{
          id: 'notFound',
          label: 'Details',
          templateData: {
            loading: ko.observable(false),
            hasErrors: ko.observable(false),
            message: message
          },
          template: 'context-popover-table-and-column-unknown',
          title: self.title
        }]);
        self.activeTab('notFound');
      };

      TableAndColumnContextTabs.prototype.refetchSamples = function () {
        var self = this;
        self.sample.fetch(self.initializeSamplesTable);
      };

      function DatabaseContextTabs(data, sourceType, defaultDatabase) {
        var self = this;
        self.disposals = [];
        self.dbComment = ko.observable('');
        var dbName = data.identifierChain[data.identifierChain.length - 1].name;
        $.getJSON('/metastore/databases/' + dbName + '/metadata', function (data) {
          if (data && data.status == 0 && data.data.comment) {
              self.dbComment(data.data.comment);
          }
        });
        self.tabs = [
          { id: 'details', label: 'Details', comment : self.dbComment, template: 'context-popover-database-details', templateData: new GenericTabContents(data.identifierChain, sourceType, defaultDatabase, ApiHelper.getInstance().fetchAutocomplete) }
        ];
        self.activeTab = ko.observable('details');

        var showInAssistPubSub = huePubSub.subscribe('context.popover.show.in.assist', function () {
          huePubSub.publish('assist.db.highlight', {
            sourceType: sourceType,
            path: [ dbName ]
          });
        });

        self.disposals.push(function () {
          showInAssistPubSub.remove();
        })
      }

      DatabaseContextTabs.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
      };

      function AsteriskData(data, sourceType, defaultDatabase) {
        var self = this;
        self.loading = ko.observable(true);
        self.hasErrors = ko.observable(false);
        self.columns = [];

        self.selectedColumns = ko.pureComputed(function () {
          return self.columns.filter(function (column) {
            return column.selected();
          });
        });

        self.expand = function () {
          var colsToExpand = self.selectedColumns().length === 0 ? self.columns : self.selectedColumns();
          var colIndex = {};
          var colsTableMap = {};
          self.columns.forEach(function (col) {
            if (colsTableMap[col.name]) {
              colsTableMap[col.name].push(col.table);
            }
            else {
              colsTableMap[col.name] = [col.table];
            }
          });
          colsToExpand.forEach(function (col) {
            if (colIndex[col.name]) {
              colIndex[col.name]++;
            } else {
              colIndex[col.name] = 1;
            }
          });
          Object.keys(colIndex).forEach(function (name) {
            if (colIndex[name] === 1 && colsTableMap[name].length === 1) {
              delete colIndex[name];
            }
          });
          var sqlAutocompleter = new SqlAutocompleter2({
            snippet: {
              type: function () {
                return sourceType;
              }
            }
          });
          huePubSub.publish('ace.replace', {
            location: data.location,
            text: $.map(colsToExpand, function (column) {
              if (column.tableAlias) {
                return sqlAutocompleter.backTickIfNeeded(column.tableAlias) + '.' + sqlAutocompleter.backTickIfNeeded(column.name);
              }
              if (colIndex[column.name]) {
                return sqlAutocompleter.backTickIfNeeded(column.table) + '.' + sqlAutocompleter.backTickIfNeeded(column.name);
              }
              return sqlAutocompleter.backTickIfNeeded(column.name)
            }).join(', ')
          });
          huePubSub.publish('context.popover.hide');
        };

        var apiHelper = ApiHelper.getInstance();
        var deferrals = [];
        data.tables.forEach(function (table) {
          if (table.identifierChain) {
            var fetchDeferred = $.Deferred();
            deferrals.push(fetchDeferred);
            apiHelper.fetchAutocomplete({
              sourceType: sourceType,
              defaultDatabase: defaultDatabase,
              identifierChain: table.identifierChain,
              successCallback: function (data) {
                if (typeof data.extended_columns !== 'undefined') {
                  data.extended_columns.forEach(function (column) {
                    column.extendedType = column.type.replace(/</g, '&lt;').replace(/>/g, '&lt;');
                    if (column.type.indexOf('<') !== -1) {
                      column.type = column.type.substring(0, column.type.indexOf('<'));
                    }
                    column.selected = ko.observable(false);
                    column.table = table.identifierChain[table.identifierChain.length - 1].name;
                    if (table.alias) {
                      column.tableAlias = table.alias
                    }
                  });
                }
                self.columns = self.columns.concat(data.extended_columns);
                fetchDeferred.resolve();
              },
              silenceErrors: true,
              errorCallback: fetchDeferred.reject
            })
          }
        });

        if (deferrals.length === 0) {
          self.loading(false);
        }
        $.when.apply($, deferrals).done(function () {
          self.loading(false);
        }, function () {
          if (self.columns.length === 0) {
            self.hasErrors(true);
          }
        });
      }

      function AsteriskContextTabs(data, sourceType, defaultDatabase) {
        var self = this;
        self.data = new AsteriskData(data, sourceType, defaultDatabase);

        self.tabs = [
          { id: 'details', label: 'Details', template: 'context-popover-asterisk-details', templateData: self.data }
        ];
        self.activeTab = ko.observable('details');
      }

      function HdfsContextTabs(data) {
        var self = this;

        self.disposals = [];

        // TODO: Update Ace token with selected path
        self.data = ko.observable({
          details: data,
          loading: ko.observable(false),
          hasErrors: ko.observable(false),
          selectedPath: ko.observable(data.path)
        });

        var showInFileBrowserPubSub = huePubSub.subscribe('context.popover.open.in.file.browser', function () {
          window.open((data.path.indexOf('/') === 0 ? '/filebrowser/#' : '/filebrowser/#/') + data.path, '_blank');
        });

        self.disposals.push(function () {
          showInFileBrowserPubSub.remove();
        });

        var replaceInEditorPubSub = huePubSub.subscribe('context.popover.replace.in.editor', function () {
          huePubSub.publish('ace.replace', {
            location: data.location,
            text: self.data().selectedPath()
          });
        });
        self.disposals.push(function () {
          replaceInEditorPubSub.remove();
        });

        self.tabs = [
          { id: 'details', label: 'Details', template: 'context-popover-hdfs-details', templateData: self.data }
        ];
        self.activeTab = ko.observable('details');
      }

      HdfsContextTabs.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
      };

      function FunctionContextTabs(data, sourceType) {
        var self = this;
        self.func = ko.observable({
          details: SqlFunctions.findFunction(sourceType, data.function),
          loading: ko.observable(false),
          hasErrors: ko.observable(false)
        });

        self.tabs = [
          { id: 'details', label: 'Details', template: 'context-popover-function-details', templateData: self.func }
        ];
        self.activeTab = ko.observable('details');
      }

      function HueAppContext(data) {
        var self = this;
        self.data = data;
        self.hasErrors = ko.observable(false);
        self.loading = ko.observable(false);
        self.template = 'context-hue-app-details';
      }

      function DocumentContext(data) {
        var self = this;
        self.disposals = [];

        // Adapt some details to a common format, the global search endpoint has different structure than the docs one
        self.details = {
          type: data.doc_type || data.type,
          name: data.originalName || data.name || data.hue_name,
          link: data.absoluteUrl || data.link,
          description: data.description || data.hue_description,
          isDirectory: data.doc_type === 'directory' || data.type === 'directory',
          definition: ko.observable({
            type: data.doc_type || data.type
          })
        };
        self.data = data;
        self.loading = ko.observable(true);
        self.hasErrors = ko.observable(false);
        self.errorText = ko.observable();
        self.template = 'context-document-details';

        self.documentContents = ko.observable();
        self.loadDocument();

        var showInAssistPubSub = huePubSub.subscribe('context.popover.show.in.assist', function () {
          huePubSub.publish('assist.doc.highlight', {
            parentUuid: self.data.parentUuid,
            docUuid: self.data.uuid
          });
        });

        self.disposals.push(function () {
          showInAssistPubSub.remove();
        })
      }

      DocumentContext.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
      };

      DocumentContext.prototype.loadDocument = function () {
        var self = this;
        self.hasErrors(false);
        self.loading(true);
        ApiHelper.getInstance().fetchDocument({
          uuid: self.data.uuid,
          fetchContents: true,
          silenceErrors: true
        }).done(function (response) {
          self.documentContents(response.data);
          self.loading(false);
        }).fail(function (errorMessage) {
          self.loading(false);
          self.hasErrors(false); // Allows us to revert to a generic document panel in case it can't fetch it.
        })
      };

      function CollectionContextTabs(data) {
        var self = this;

        self.apiHelper = ApiHelper.getInstance();

        self.disposals = [];

        self.data = ko.observable({
          details: data,
          loading: ko.observable(false),
          hasErrors: ko.observable(false),
          selectedPath: ko.observable(data.path),
          loadingTerms: ko.observable(false),
          loadingStats: ko.observable(false),
          statsSupported: ko.observable(true),
          terms: ko.mapping.fromJS({'prefix': '', 'data': []}),
          stats: ko.mapping.fromJS({'facet': '', 'data': []})
        });

        self.data().terms.prefix.subscribe(function () {
          self.loadTerms();
        });
        self.data().terms.prefix.extend({rateLimit: {timeout: 500, method: "notifyWhenChangesStop"}});

        self.loadTerms();
        self.loadStats();

        self.tabs = [
          {
            id: 'terms',
            label: 'Terms',
            template: 'context-popover-collection-terms-details',
            templateData: self.data
          },
          {
            id: 'stats',
            label: 'Stats',
            template: 'context-popover-collection-stats-details',
            templateData: self.data
          }
        ];
        self.activeTab = ko.observable('terms');

        self.apiHelper.identifierChainToPath({
          sourceType: 'solr',
          identifierChain: data.identifierChain,
          defaultDatabase: 'default'
        }, function (path) {
          var showInAssistPubSub = huePubSub.subscribe('context.popover.show.in.assist', function () {
            huePubSub.publish('assist.db.highlight', {
              sourceType: 'solr',
              path: path
            });
          });
          self.disposals.push(function () {
            showInAssistPubSub.remove();
          })
        });

      }

      CollectionContextTabs.prototype.loadTerms = function () {
        var self = this;
        self.data().terms.data.removeAll();
        self.data().loadingTerms(true);
        self.apiHelper.fetchDashboardTerms({
          collectionName: self.data().details.identifierChain[1].name,
          fieldName: self.data().details.identifierChain[2].name,
          prefix: self.data().terms.prefix(),
          engine: 'solr',
          successCallback: function (data) {
            if (data.terms != null) {
              $.each(data.terms, function (key, val) {
                self.data().terms.data.push({'key': key, 'val': val});
              });
            }
          },
          alwaysCallback: function () {
            self.data().loadingTerms(false);
          }
        });
      };

      CollectionContextTabs.prototype.loadStats = function () {
        var self = this;
        self.data().terms.data.removeAll();
        self.data().loadingStats(true);
        self.data().statsSupported(true);
        var fieldName = self.data().details.identifierChain[2].name;
        self.apiHelper.fetchDashboardStats({
          collectionName: self.data().details.identifierChain[1].name,
          fieldName: fieldName,
          engine: 'solr',
          successCallback: function (data) {
            if (data.stats.stats.stats_fields[fieldName] != null) {
              $.each(data.stats.stats.stats_fields[fieldName], function (key, val) {
                self.data().stats.data.push({'key': key, 'val': val});
              });
            }
          },
          notSupportedCallback: function () {
            self.data().statsSupported(false);
          },
          alwaysCallback: function () {
            self.data().loadingStats(false);
          }
        });
      };

      CollectionContextTabs.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
      };

      function ResizeHelper (orientation, leftAdjust, topAdjust) {
        var self = this;

        var apiHelper = ApiHelper.getInstance();

        var originalMidX, originalWidth, originalRightX, originalLeftX, originalMidY, originalHeight, originalTopY, originalBottomY;
        var rightX, leftX, leftDiff, rightDiff, topY, bottomY, topDiff, bottomDiff;
        var redrawHeaders = false;

        window.setTimeout(function () {
          var offset = $('.hue-popover').offset();
          if (orientation === 'right') {
            offset.left -= 5;
          } else if (orientation === 'bottom') {
            offset.top -= 5;
          }
          originalHeight = $('.hue-popover').height();
          originalWidth = $('.hue-popover').width();
          originalMidX = offset.left + originalWidth / 2;
          originalMidY = offset.top + originalHeight / 2;
          originalLeftX = offset.left;
          originalRightX = offset.left + originalWidth;
          originalTopY = offset.top;
          originalBottomY = offset.top + originalHeight;
        }, 0);

        self.saveSize = function () {
          apiHelper.setInTotalStorage('assist', 'popover.size', {
            width: $('.hue-popover').width(),
            height: $('.hue-popover').height()
          });
        };

        self.resizeStart = function (event, ui) {
          preventHide = true;
        };

        self.resizeStop = function (event, ui) {
          if (redrawHeaders) {
            huePubSub.publish('table.extender.redraw', 'sampleTab');
            redrawHeaders = false;
          }

          huePubSub.publish('context.popover.resized');

          // Delay or it will close the popover when releasing at the window borders
          window.setTimeout(function () {
            preventHide = false;
          }, 300);

          self.saveSize();
        };

        var resizeTopBottomHorizontal = function (event, ui) {
          leftX = ui.position.left;
          rightX = ui.position.left + ui.size.width;

          if (rightX < originalMidX + HALF_SIZE_LIMIT_X) {
            ui.size.width = originalMidX + HALF_SIZE_LIMIT_X - ui.position.left;
            rightX = ui.position.left + ui.size.width;
            $('.hue-popover').css('width', ui.size.width + 'px');
          }

          if (leftX > originalMidX - HALF_SIZE_LIMIT_X) {
            ui.position.left = originalMidX - HALF_SIZE_LIMIT_X;
            ui.size.width = ui.originalSize.width - (ui.position.left - ui.originalPosition.left);
            leftX = ui.position.left;
            rightX = ui.position.left + ui.size.width;
            $('.hue-popover').css('left', ui.position.left + 'px');
            $('.hue-popover').css('width', ui.size.width + 'px');
          }

          leftDiff = originalLeftX - leftX;
          rightDiff = originalRightX - rightX;
          $('.hue-popover-arrow').css('margin-left', (leftDiff + rightDiff) / 2 + leftAdjust() + 'px');
        };

        var resizeLeftRightVertical = function (event, ui) {
          if (!redrawHeaders && ui.originalPosition.top !== ui.position.top) {
            redrawHeaders = true;
            huePubSub.publish('table.extender.hide', 'sampleTab');
          }
          topY = ui.position.top;
          bottomY = ui.position.top + ui.size.height;

          if (bottomY < originalMidY + HALF_SIZE_LIMIT_Y) {
            ui.size.height = originalMidY + HALF_SIZE_LIMIT_Y - ui.position.top;
            bottomY = ui.position.top + ui.size.height;
            $('.hue-popover').css('height', ui.size.height + 'px');
          }

          if (topY > originalMidY - HALF_SIZE_LIMIT_Y) {
            ui.position.top = originalMidY - HALF_SIZE_LIMIT_Y;
            ui.size.height = ui.originalSize.height - (ui.position.top - ui.originalPosition.top);
            topY = ui.position.top;
            bottomY = ui.position.top + ui.size.height;
            $('.hue-popover').css('top', ui.position.top + 'px');
            $('.hue-popover').css('height', ui.size.height + 'px');
          }

          topDiff = originalTopY - topY;
          bottomDiff = originalBottomY - bottomY;
          $('.hue-popover-arrow').css('margin-top', (topDiff + bottomDiff) / 2 + topAdjust() + 'px');
        };

        switch(orientation) {
          case 'top':
            self.resizableHandles = "w, nw, n, ne, e";
            self.resize = function (event, ui) {
              resizeTopBottomHorizontal(event, ui);
              // TODO: Implement resize height limits when popover is above
            };
            break;
          case 'right':
            self.resizableHandles = "n, ne, e, se, s";
            self.resize = function (event, ui) {
              resizeLeftRightVertical(event, ui);
              if (ui.size.width < 350) {
                ui.size.width = 350;
                $('.hue-popover').css('width', 350 + 'px');
              }
            };
            break;
          case 'bottom':
            self.resizableHandles = "e, se, s, sw, w";
            self.resize = function (event, ui) {
              resizeTopBottomHorizontal(event, ui);
              if (ui.size.height < 200) {
                ui.size.height = 200;
                $('.hue-popover').css('height', 200 + 'px');
              }
            };
            break;
          case 'left':
            self.resizableHandles = "s, sw, w, nw, n";
            self.resize = function (event, ui) {
              resizeLeftRightVertical(event, ui);
              // TODO: Implement resize width limits when popover is on the left
            };
            break;
        }
      }

      function ContextPopoverViewModel(params) {
        var self = this;
        self.disposals = [];

        var apiHelper = ApiHelper.getInstance();

        self.left = ko.observable(0);
        self.top = ko.observable(0);

        var popoverSize = apiHelper.getFromTotalStorage('assist', 'popover.size', {
          width: 450,
          height: 400
        });

        self.width = ko.observable(popoverSize.width);
        self.height = ko.observable(popoverSize.height);

        self.leftAdjust = ko.observable(0);
        self.topAdjust = ko.observable(0);
        self.data = params.data;
        self.sourceType = params.sourceType;
        self.defaultDatabase = params.defaultDatabase;
        self.close = hidePopover;
        var orientation = params.orientation || 'bottom';
        self.contents = null;
        self.resizeHelper = new ResizeHelper(orientation, self.leftAdjust, self.topAdjust);

        if (typeof params.source.element !== 'undefined') {
          // Track the source element and close the popover if moved
          var $source = $(params.source.element);
          var originalSourceOffset = $source.offset();
          var currentSourceOffset;

          var detectMoveInterval = window.setInterval(function () {
            currentSourceOffset = $source.offset();
            if (currentSourceOffset.left !== originalSourceOffset.left || currentSourceOffset.top !== originalSourceOffset.top) {
              hidePopover();
            }
          }, 200);

          self.disposals.push(function () {
            window.clearInterval(detectMoveInterval);
          });
        }

        var windowWidth = $(window).width();
        var fitHorizontally = function () {
          var left = params.source.left + Math.round((params.source.right - params.source.left) / 2) - (self.width() / 2);
          if (left + self.width() > windowWidth - 10) {
            self.leftAdjust(left + self.width() - windowWidth + 5);
            left = windowWidth - self.width() - 10;
          } else if (left < 10) {
            self.leftAdjust(left - 10 - HALF_ARROW);
            left = 10;
          } else {
            self.leftAdjust(-HALF_ARROW);
          }
          self.left(left);
        };

        var windowHeight = $(window).height();
        var fitVertically = function () {
          var top = params.source.top + Math.round((params.source.bottom - params.source.top) / 2) - (self.height() / 2);
          if (top + self.height() > windowHeight - 10) {
            self.topAdjust(top + self.height() - windowHeight + 5);
            top = windowHeight - self.height() - 10;
          } else if (top < 10) {
            self.topAdjust(top - 10 - HALF_ARROW);
            top = 10;
          } else {
            self.topAdjust(-HALF_ARROW);
          }
          self.top(top);
        };

        switch (orientation) {
          case 'top':
            fitHorizontally();
            self.top(params.source.top - self.height());
            break;
          case 'right':
            fitVertically();
            self.left(params.source.right);
            break;
          case 'bottom':
            fitHorizontally();
            self.top(params.source.bottom);
            break;
          case 'left':
            fitVertically();
            self.left(params.source.left - self.width());
        }

        self.isSolr = params.sourceType === 'solr';

        self.isDatabase = params.data.type === 'database';
        self.isTable = params.data.type === 'table';
        self.isColumn = params.data.type === 'column';
        self.isComplex = params.data.type === 'complex';
        self.isFunction = params.data.type === 'function';
        self.isHdfs = params.data.type === 'hdfs';
        self.isAsterisk = params.data.type === 'asterisk';
        self.isView = params.data.type === 'view';
        self.isDocument = params.data.type.toLowerCase() === 'hue';
        self.isCollection = params.data.type === 'collection';

        self.showInAssistEnabled = (typeof params.showInAssistEnabled !== 'undefined' ? params.showInAssistEnabled : true) && (self.isDocument || self.isDatabase || self.isTable || self.isColumn || self.isCollection);
        self.openInDashboardEnabled = self.isTable || self.isView || self.isDatabase;
        self.openInTableBrowserEnabled = self.isTable || self.isView || self.isDatabase;
        self.replaceEditorContentEnabled = self.isHdfs;
        self.openInFileBrowserEnabled = self.isHdfs;
        self.expandColumnsEnabled = self.isAsterisk;

        if ((self.isColumn || self.isComplex) && self.data.tables && self.data.tables.length > 0) {
          var identifierChain = self.data.identifierChain;
          var foundTable = $.grep(self.data.tables, function (table) {
            return hueUtils.equalIgnoreCase(table.alias, identifierChain[0].name) ||
                    (table.identifierChain && hueUtils.equalIgnoreCase(table.identifierChain[table.identifierChain.length - 1].name, identifierChain[0].name));
          });
          if (foundTable.length === 1 && foundTable.identifierChain) {
            identifierChain.shift();
            identifierChain = foundTable.identifierChain.concat(identifierChain);
            delete self.data.tables;
          } else if (self.data.tables.length === 1 && self.data.tables[0].identifierChain) {
            identifierChain = self.data.tables[0].identifierChain.concat(identifierChain);
            delete self.data.tables;
          }
          self.data.identifierChain = identifierChain
        }

        self.pinEnabled = params.pinEnabled && !self.isFunction && !self.isAsterisk && !self.isHdfs;

        if (self.isTable || self.isView) {
          if (self.isSolr) {
            self.title = self.data.identifierChain[self.data.identifierChain.length - 1].name;
          }
          else {
            self.title = $.map(self.data.identifierChain, function (identifier) { return identifier.name; }).join('.');
            if (self.title.indexOf('.') === -1) {
              self.title = self.defaultDatabase + '.' + self.title;
            }
          }
        }

        if (self.isDatabase) {
          self.contents = new DatabaseContextTabs(self.data, self.sourceType, self.defaultDatabase);
          self.title = self.data.identifierChain[self.data.identifierChain.length - 1].name;
          self.iconClass = 'fa-database';
        } else if (self.isTable) {
          self.contents = new TableAndColumnContextTabs(self.data, self.sourceType, self.defaultDatabase, false, false);
          self.iconClass = self.isSolr ? 'fa-search' : 'fa-table';
        } else if (self.isView) {
          self.contents = new TableAndColumnContextTabs(self.data, self.sourceType, self.defaultDatabase, false, false);
          self.iconClass = self.isSolr ? 'fa-search' : 'fa-eye';
        } else if (self.isComplex) {
          self.contents = new TableAndColumnContextTabs(self.data, self.sourceType, self.defaultDatabase, false, true);
          self.title = self.data.identifierChain[self.data.identifierChain.length - 1].name;
          self.iconClass = 'fa-columns';
        } else if (self.isColumn) {
          self.contents = new TableAndColumnContextTabs(self.data, self.sourceType, self.defaultDatabase, true, false);
          if (self.data.identifierChain.length > 1) {
            self.title = self.data.identifierChain[self.data.identifierChain.length - 2].name + '.' + self.data.identifierChain[self.data.identifierChain.length - 1].name;
          } else {
            self.title = self.data.identifierChain[self.data.identifierChain.length - 1].name;
          }
          self.iconClass = 'fa-columns';
        } else if (self.isFunction) {
          self.contents = new FunctionContextTabs(self.data, self.sourceType);
          self.title = self.data.function;
          self.iconClass = 'fa-superscript';
        } else if (self.isHdfs) {
          self.contents = new HdfsContextTabs(self.data);
          self.title = self.data.path;
          self.iconClass = 'fa-folder-o';
        } else if (self.isAsterisk) {
          self.contents = new AsteriskContextTabs(self.data, self.sourceType, self.defaultDatabase);
          self.title = '*';
          self.iconClass = 'fa-table';
        } else if (self.isDocument) {
          self.contents = new DocumentContext(self.data.definition);
          self.title = self.data.definition.name;
          self.iconClass = 'fa-file-o';
        } else if (self.isCollection) {
          self.contents = new CollectionContextTabs(self.data);
          self.title = self.data.identifierChain[1].name + '.' + self.data.identifierChain[2].name;
          self.iconClass = 'fa-search';
        } else {
          self.title = '';
          self.iconClass = 'fa-info';
        }
        self.orientationClass = 'hue-popover-' + orientation;

        if ((self.isDatabase || self.isTable || self.isView) && self.data.identifierChain) {
          apiHelper.identifierChainToPath({
            sourceType: self.sourceType,
            identifierChain: self.data.identifierChain,
            defaultDatabase: self.defaultDatabase
          }, function (path) {

            var showInMetastorePubSub = huePubSub.subscribe('context.popover.open.in.metastore', function (type) {
              if (IS_HUE_4) {
                huePubSub.publish('open.link', '/metastore/table' + (type === 'table' || type === 'view' ? '/' : 's/') + path.join('/'));
                huePubSub.publish('context.popover.hide');
              } else {
                window.open('/metastore/table' + (type === 'table' || type === 'view' ? '/' : 's/') + path.join('/'), '_blank');
              }
            });
            self.disposals.push(function () {
              showInMetastorePubSub.remove();
            });
          });
        }

        if (params.delayedHide) {
          var hideTimeout = -1;
          var onLeave = function () {
            hideTimeout = window.setTimeout(function () {
              $('.hue-popover').fadeOut(200, function () {
                hidePopover();
              })
            }, 1000);
          };

          var onEnter = function () {
            window.clearTimeout(hideTimeout);
          };

          $(params.delayedHide).add($('.hue-popover')).on('mouseleave', onLeave).on('mouseenter', onEnter);

          var keepPopoverOpenOnClick = function () {
            window.clearTimeout(hideTimeout);
            $(params.delayedHide).add($('.hue-popover')).off('mouseleave', onLeave).off('mouseenter', onEnter);
          };

          $('.hue-popover').on('click', keepPopoverOpenOnClick);

          self.disposals.push(function () {
            $(params.delayedHide).add($('.hue-popover')).off('mouseleave', onLeave).off('mouseenter', onEnter);
            $('.hue-popover').off('click', keepPopoverOpenOnClick);
          });
        }

        var closeOnEsc = function (e) {
          if (e.keyCode === 27) {
            hidePopover();
          }
        };

        $(document).on('keyup', closeOnEsc);

        self.disposals.push(function () {
          $(document).off('keyup', closeOnEsc);
        });

        window.setTimeout(function() {
          $(document).on('click', hideOnClickOutside);
        }, 0);

        self.disposals.push(function () {
          $(document).off('click', hideOnClickOutside);
        })
      }

      ContextPopoverViewModel.prototype.dispose = function() {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }

        if(self.contents && self.contents.dispose) {
          self.contents.dispose();
        }
        huePubSub.publish('context.popover.dispose');
      };

      ContextPopoverViewModel.prototype.pin = function () {
        var self = this;
        hidePopover();
        if (typeof self.contents.sample !== 'undefined') {
          self.contents.sample.fetchedData(undefined);
        }
        huePubSub.publish('sql.context.pin', self);
        if (self.contents.activeTab() === 'sample') {
          self.contents.refetchSamples();
        }
      };

      ko.components.register('context-popover', {
        viewModel: ContextPopoverViewModel,
        template: { element: 'context-popover-template' }
      });

      huePubSub.subscribe('context.popover.hide', hidePopover);

      huePubSub.subscribe('context.popover.show', function (details) {
        hidePopover();
        var $contextPopover = $('<div id="contextPopover" data-bind="component: { name: \'context-popover\', params: $data }" />');
        $('body').append($contextPopover);
        ko.applyBindings(details, $contextPopover[0]);
        huePubSub.publish('context.popover.shown');
      });

      var SqlContextContentsGlobalSearch = function (params) {
        var self = this;
        self.contents = undefined;

        self.disposals = [];

        self.isDatabase = params.data.type.toLowerCase() === 'database';
        self.isTable = params.data.type.toLowerCase() === 'table';
        self.isColumn = params.data.type.toLowerCase() === 'field';
        self.isView = params.data.type.toLowerCase() === 'view';
        self.isDocument = params.data.type.toLowerCase() === 'hue';
        self.isHueApp = params.data.type.toLowerCase() === 'hueapp';

        self.close = params.globalSearch.close.bind(params.globalSearch);

        // These are currently not in the global search results
        self.isHdfs = false;
        self.isAsterisk = false;
        self.isComplex = false;
        self.isFunction = false;

        self.showInAssistEnabled = !self.isHueApp;
        self.openInDashboardEnabled = self.isTable || self.isView || self.isDatabase;
        self.openInTableBrowserEnabled = self.isTable || self.isView || self.isDatabase;
        self.replaceEditorContentEnabled = self.isHdfs;
        self.openInFileBrowserEnabled = self.isHdfs;
        self.expandColumnsEnabled = self.isAsterisk;

        var adaptedData = { identifierChain: [] };

        var path = params.data.originalName.split('.');
        path.forEach(function (part) {
          adaptedData.identifierChain.push({ name: part });
        });

        var metastorePubSub = huePubSub.subscribe('context.popover.open.in.metastore', function () {
          huePubSub.publish('open.link', '/metastore/table' + (self.isTable || self.isView ? '/' : 's/') + path.join('/'));
          self.close();
        });

        self.disposals.push(function () {
          metastorePubSub.remove();
        });

        var sqlSourceType;
        if (self.isDatabase || self.isTable || self.isView || self.isColumn || self.isComplex) {
          huePubSub.publish('cluster.config.get.config', function (clusterConfig) {
            if (clusterConfig && clusterConfig['app_config'] && clusterConfig['app_config']['editor']) {
              sqlSourceType = clusterConfig['app_config']['editor']['default_sql_interpreter'];
            }
          });
          if (!sqlSourceType) {
            sqlSourceType = params.data.sourceType.toLowerCase();
          }
        }

        if (self.isDatabase) {
          self.contents = new DatabaseContextTabs(adaptedData, sqlSourceType, 'default');
        } else if (self.isTable) {
          self.contents = new TableAndColumnContextTabs(adaptedData, sqlSourceType, 'default', false, false);
        } else if (self.isView) {
          self.contents = new TableAndColumnContextTabs(adaptedData, sqlSourceType, 'default', false, false);
        } else if (self.isColumn) {
          self.contents = new TableAndColumnContextTabs(adaptedData, sqlSourceType, 'default', true, false);
        } else if (self.isDocument) {
          self.contents = new DocumentContext(params.data);
        } else if (self.isHueApp) {
          self.contents = new HueAppContext(params.data);
        }
      };

      SqlContextContentsGlobalSearch.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
        if (self.contents && self.contents.dispose) {
          self.contents.dispose();
        }

        huePubSub.publish('context.popover.dispose');
      };

      ko.components.register('context-popover-contents-global-search', {
        viewModel: SqlContextContentsGlobalSearch,
        template: { element: 'context-popover-contents' }
      })
    })();
  </script>

  

  <script type="text/html" id="hue-drop-down-template">
    <!-- ko if: !menuOnly && (!dropDownVisible() || !searchable) -->
    <a class="inactive-action hue-drop-down-active" href="javascript:void(0)" data-bind="toggle: dropDownVisible, css: { 'blue': dropDownVisible }">
      <!-- ko if: icon --><i class="fa" data-bind="css: icon"></i><!-- /ko -->
      <!-- ko if: !noLabel && value -->
      <span data-bind="text: typeof value().label !== 'undefined' ? value().label : value(), visible: ! dropDownVisible() || !searchable, attr: { 'title': linkTitle }" ></span>
      <!-- /ko -->
      <i class="fa fa-caret-down"></i>
    </a>
    <!-- /ko -->
    <!-- ko if: !menuOnly && (dropDownVisible() && searchable) -->
    <input class="hue-drop-down-input" type="text" data-bind="textInput: filter, attr: { 'placeHolder': value }, visible: dropDownVisible, style: { color: filterEdited() ? '#000' : '#AAA', 'min-height': '22px', 'margin-left': '10px' }"/>
    <i class="fa fa-caret-down"></i>
    <!-- /ko -->
    <div class="hue-drop-down-container" data-bind="css: { 'open' : dropDownVisible, 'hue-drop-down-fixed': fixedPosition }">
      <div class="dropdown-menu" data-bind="visible: filteredEntries().length > 0" style="min-width: 190px; max-width: 250px; min-height: 34px; max-height: 200px;">
        <!-- ko if: foreachVisible -->
        <ul class="hue-inner-drop-down" style="overflow-x: hidden;" data-bind="foreachVisible: { data: filteredEntries, minHeight: 34, container: '.dropdown-menu' }">
          <!-- ko if: typeof $data.divider !== 'undefined' && $data.divider -->
          <li class="divider"></li>
          <!-- /ko -->
          <!-- ko if: typeof $data.divider === 'undefined' || !$data.divider -->
          <li><a href="javascript:void(0)" data-bind="text: typeof $data.label !== 'undefined' ? $data.label : $data, click: function () { $parent.value($data); }"></a></li>
          <!-- /ko -->
        </ul>
        <!-- /ko -->
        <!-- ko ifnot: foreachVisible -->
        <ul class="hue-inner-drop-down" style="overflow-x: hidden;" data-bind="foreach: filteredEntries">
          <!-- ko if: typeof $data.divider !== 'undefined' && $data.divider -->
          <li class="divider"></li>
          <!-- /ko -->
          <!-- ko if: typeof $data.divider === 'undefined' || !$data.divider -->
          <li><a href="javascript:void(0)" data-bind="text: typeof $data.label !== 'undefined' ? $data.label : $data, click: function () { $parent.value($data); }"></a></li>
          <!-- /ko -->
        </ul>
        <!-- /ko -->
      </div>
    </div>
  </script>

  <script type="text/javascript">
    (function () {
      var HueDropDown = function (params, element) {
        var self = this;
        self.dropDownVisible = ko.observable(!!params.showOnInit);
        self.menuOnly = !!params.menuOnly;
        self.noLabel = !!params.noLabel;
        self.icon = params.icon;
        self.value = params.value;
        self.entries = params.entries;
        self.searchable = params.searchable || false;
        self.foreachVisible = params.foreachVisible || false;
        self.linkTitle = params.linkTitle || 'Selected entry';
        self.fixedPosition = !!params.fixedPosition;

        var closeOnOutsideClick = function (e) {
          var $input = $(element).find('.hue-drop-down-input');
          if (!$input.is($(e.target))) {
            self.dropDownVisible(false);
          }
        };

        var inputKeyup = function (e) {
          var $currentActive = $(element).find('.hue-inner-drop-down > .active');
          var activeTop = $currentActive.length !== 0 ? $currentActive.position().top : 0;
          var activeHeight = $currentActive.length !== 0 ? $currentActive.outerHeight(true) : $(element).find('.hue-inner-drop-down li:first-child').outerHeight(true);
          var containerHeight = $(element).find('.dropdown-menu').innerHeight();
          var containerScrollTop = $(element).find('.dropdown-menu').scrollTop();

          $currentActive.removeClass('active');
          if (e.keyCode === 27) {
            // esc
            self.dropDownVisible(false);
          } else if (e.keyCode === 38) {
            // up
            if ($currentActive.length !== 0 && $currentActive.prev().length !== 0) {
              if (activeTop < containerScrollTop + activeHeight) {
                $(element).find('.dropdown-menu').scrollTop(activeTop - containerHeight/2);
              }
              $currentActive.prev().addClass('active');
            }
          } else if (e.keyCode === 40) {
            // down
            if ($currentActive.length === 0) {
              $(element).find('.hue-inner-drop-down li:first-child').addClass('active');
            } else if ($currentActive.next().length !== 0) {
              if ((activeTop + activeHeight *3) > containerHeight - containerScrollTop) {
                $(element).find('.dropdown-menu').scrollTop(activeTop - containerHeight/2);
              }
              $currentActive.next().addClass('active');
            } else {
              $currentActive.addClass('active');
            }
          } else if (e.keyCode === 13) {
            // enter
            if ($currentActive.length > 0) {
              self.value(ko.dataFor($currentActive[0]));
              self.dropDownVisible(false);
              $(element).find('.dropdown-menu').scrollTop(0)
            }
          } else {
            $(element).find('.dropdown-menu').scrollTop(0)
          }
        };
        self.filter = ko.observable('');

        self.value.subscribe(function () {
          self.dropDownVisible(false);
        });

        self.filterEdited = ko.observable(false);

        self.filter.subscribe(function () {
          self.filterEdited(true);
          $(element).find('.hue-inner-drop-down > .active').removeClass('.active');
        });
        self.dropDownVisible.subscribe(function (newValue) {
          self.filterEdited(false);
          if (newValue) {
            window.setTimeout(function () {
              self.filter('');
              $(window).on('click', closeOnOutsideClick);
              $(element).find('.hue-drop-down-input').on('keyup', inputKeyup);
              $(element).find('.hue-drop-down-input').focus();
            }, 0);
          } else {
            $(element).find('.hue-inner-drop-down > .active').removeClass('.active');
            $(window).off('click', closeOnOutsideClick);
            $(element).find('.hue-drop-down-input').off('keyup', inputKeyup);
          }
        });
        self.filteredEntries = ko.pureComputed(function () {
          if (self.filter() === '' || ! self.filterEdited()) {
            return self.entries();
          } else {
            var lowerFilter = self.filter().toLowerCase();
            return self.entries().filter(function (database) {
              return database.toLowerCase().indexOf(lowerFilter) !== -1;
            });
          }
        });
      };

      ko.components.register('hue-drop-down', {
        viewModel: {
          createViewModel: function(params, componentInfo) {
            return new HueDropDown(params, componentInfo.element);
          }
        },
        template: { element: 'hue-drop-down-template' }
      });
    })();
  </script>


  

  <script type="text/html" id="hue-favorite-app-template">
    <!-- ko if: isHue4 -->
    <div class="inline pointer favorite-app" data-bind="click: setAsFavoriteApp, tooltip: { placement: 'bottom', title: isFavorite() ? 'Unset from default application' : 'Set as default application' }">
      <i class="fa inactive-action" data-bind="css: { 'fa-star-o': !isFavorite(), 'fa-star': isFavorite }"></i>
    </div>
    <!-- /ko -->
  </script>

  <script type="text/javascript">
    (function () {

      var FavoriteApp = function (params) {
        var self = this;
        self.isHue4 = ko.observable(params.hue4);
        self.isFavorite = ko.observable(false);
        self.app = params.app;
        self.interpreter = params.interpreter;

        self.parseCurrentFavorite = function (data, announce) {
          self.isFavorite(false);
          if (data.status === 0 && data.data && data.data.default_app) {
            try {
              var defaultApp = JSON.parse(data.data.default_app);
              self.isFavorite(defaultApp.app === self.app && ((self.app === 'editor' && defaultApp.interpreter === self.interpreter) || self.app !== 'editor'));
              if (announce) {
                huePubSub.publish('hue.new.default.app', defaultApp);
              }
            } catch (e) {
              console.error('There was a problem decoding the default app setting.');
            }
          }
        };

        self.setAsFavoriteApp = function (vm, e) {
          e.originalEvent.stopPropagation();
          e.originalEvent.stopImmediatePropagation();
          var postParams = {
            app: self.app
          };
          if (self.interpreter !== '') {
            postParams['interpreter'] = self.interpreter;
          }
          var post = {};
          if (self.isFavorite()) {
            post['delete'] = true;
          }
          else {
            post['set'] = ko.mapping.toJSON(postParams);
          }
          $.post('/desktop/api2/user_preferences/default_app', post, function (data) {
            self.parseCurrentFavorite(data, true);
          });
        };

        if (self.isHue4()) {
          // Load the fav app status
          $.get('/desktop/api2/user_preferences/default_app', function (data) {
            self.parseCurrentFavorite(data);
          });
        }
      };

      ko.components.register('hue-favorite-app', {
        viewModel: FavoriteApp,
        template: {element: 'hue-favorite-app-template'}
      });
    })();
  </script>

  

  <script type="text/html" id="hue-global-search-template">
    <!-- ko component: {
      name: 'inline-autocomplete',
      params: {
        hasFocus: searchHasFocus,
        disableNavigation: true,
        placeHolder: 'Search data and saved documents...',
        querySpec: querySpec,
        onClear: function () { selectedIndex(null); searchResultVisible(false); },
        facets: ['type', 'tags'],
        knownFacetValues: knownFacetValues,
        autocompleteFromEntries: autocompleteFromEntries,
        triggerObservable: searchResultCategories
      }
    } --><!-- /ko -->
    <!-- ko if: searchResultVisible-->
    <div class="global-search-results" data-bind="onClickOutside: onResultClickOutside, css: { 'global-search-empty' : searchResultCategories().length === 0 }, style: { 'height' : heightWhenDragging }">
      <!-- ko hueSpinner: { spin: loading() && searchResultCategories().length === 0 , center: true, size: 'large' } --><!-- /ko -->
      <!-- ko if: !loading() && searchResultCategories().length === 0 -->
        <div>No results found.</div>
      <!-- /ko -->
      <!-- ko if: searchResultCategories().length > 0 -->
      <div class="global-search-alternatives" data-bind="niceScroll" style="position:relative;">
        <!-- ko foreach: searchResultCategories -->
        <div class="global-search-category">
          <div class="global-search-category-header" data-bind="text: label"></div>
          <ul data-bind="foreach: result">
            <!-- ko if: typeof draggable !== 'undefined' -->
            <li data-bind="multiClick: {
                click: function () { $parents[1].resultSelected($parentContext.$index(), $index()) },
                dblClick: function () { $parents[1].resultSelected($parentContext.$index(), $index()); $parents[1].openResult(); }
              }, html: label, css: { 'selected': $parents[1].selectedResult() === $data }, draggableText: { text: draggable, meta: draggableMeta }"></li>
            <!-- /ko -->
            <!-- ko if: typeof draggable === 'undefined' -->
            <li data-bind="multiClick: {
                click: function () { $parents[1].resultSelected($parentContext.$index(), $index()) },
                dblClick: function () { $parents[1].resultSelected($parentContext.$index(), $index()); $parents[1].openResult(); }
              }, html: label, css: { 'selected': $parents[1].selectedResult() === $data }"></li>
            <!-- /ko -->
          </ul>
        </div>
        <!-- /ko -->
        <!-- ko hueSpinner: { spin: loading() && searchResultCategories().length > 0, center: true, inline: true } --><!-- /ko -->
      </div>
      <div class="global-search-preview" style="overflow: auto;">
        <!-- ko with: selectedResult -->
          <!-- ko switch: type -->
            <!-- ko case: ['database', 'document', 'field', 'table', 'view', 'hueApp']  -->
              <!-- ko component: { name: 'context-popover-contents-global-search', params: { data: data, globalSearch: $parent } } --><!-- /ko -->
            <!-- /ko -->
            <!-- ko case: $default -->
              <pre data-bind="text: ko.mapping.toJSON($data)"></pre>
            <!-- /ko -->
          <!-- /ko -->
        <!--/ko -->
      </div>
      <!-- /ko -->
    </div>
    <!-- /ko -->
  </script>

  <script type="text/html" id="top-search-autocomp-item">
    <a href="javascript:void(0);">
      <div>
        <div><i class="fa fa-fw" data-bind="css: icon"></i></div>
        <div>
          <div data-bind="html: label, style: { 'padding-top': description ? 0 : '9px' }"></div>
          <!-- ko if: description -->
          <div data-bind="html: description"></div>
          <!-- /ko -->
        </div>
      </div>
    </a>
  </script>

  <script type="text/html" id="top-search-autocomp-no-match">
    <div style="height: 30px;">
      <div>No match found</div>
    </div>
  </script>

  <script type="text/javascript">
    (function () {

      var GlobalSearch = function (params) {
        var self = this;
        self.apiHelper = ApiHelper.getInstance();
        self.knownFacetValues = ko.observable({});

        self.autocompleteThrottle = -1;
        self.fetchThrottle = -1;

        self.searchHasFocus = ko.observable(false);
        self.querySpec = ko.observable();
        self.searchActive = ko.observable(false);
        self.searchResultVisible = ko.observable(false);
        self.heightWhenDragging = ko.observable(null);
        self.searchResultCategories = ko.observableArray([]);
        self.selectedIndex = ko.observable();
        self.loading = ko.observable(false);

        self.selectedResult = ko.pureComputed(function () {
          if (self.selectedIndex()) {
            return self.searchResultCategories()[self.selectedIndex().categoryIndex].result[self.selectedIndex().resultIndex]
          } else if (self.searchResultCategories().length > 0 && self.searchResultCategories()[0].result.length > 0) {
            return self.searchResultCategories()[0].result[0];
          }
        }).extend({ deferred: true });;

        var deferredCloseIfVisible = function () {
          window.setTimeout(function () {
            if (self.searchResultVisible()) {
              self.close();
            }
          }, 0);
        };

        huePubSub.subscribe('context.popover.open.in.metastore', deferredCloseIfVisible);
        huePubSub.subscribe('context.popover.show.in.assist', deferredCloseIfVisible);
        huePubSub.subscribe('sample.error.insert.click', deferredCloseIfVisible);

        huePubSub.subscribe('draggable.text.started', function (meta) {
          // We have to set the height to 0 when dragging a text, just closing the results will break the
          // jQuery draggable plugin
          if (meta.source === 'globalSearch') {
            huePubSub.subscribeOnce('draggable.text.stopped', function () {
              self.heightWhenDragging(null);
              self.close();
            });
            self.heightWhenDragging(0);
          }
        });

        self.querySpec.subscribe(function (newValue) {
          if (newValue && newValue.query !== '') {
            window.clearTimeout(self.fetchThrottle);
            self.fetchThrottle = window.setTimeout(function () {
              self.fetchResults(newValue.query);
            }, 500);
          } else {
            self.selectedIndex(undefined);
            self.searchResultCategories([]);
          }
        });

        self.autocompleteFromEntries = function (lastNonPartial, partial) {
          var result;
          var partialLower = partial.toLowerCase();
          self.searchResultCategories().every(function (category) {
            return category.result.every(function (entry) {
              if (category.type === 'documents' && entry.data.originalName.toLowerCase().indexOf(partialLower) === 0) {
                result = lastNonPartial + partial + entry.data.originalName.substring(partial.length, entry.data.originalName.length);
                return false;
              } else if (entry.data.selectionName && entry.data.selectionName.toLowerCase().indexOf(partialLower) === 0) {
                result = lastNonPartial + partial + entry.data.selectionName.substring(partial.length, entry.data.selectionName.length);
                return false;
              }
              return true;
            });
          });
          return result;
        };

        self.searchHasFocus.subscribe(function (newVal) {
          if (newVal && self.querySpec() && self.querySpec().query !== '') {
            if (!self.searchResultVisible()) {
              self.searchResultVisible(true);
            }
          }
        });

        self.searchResultVisible.subscribe(function (newVal) {
          if (newVal) {
            self.heightWhenDragging(null);
          } else {
            self.selectedIndex(undefined);
          }
        });

        // TODO: Consider attach/detach on focus
        $(document).keydown(function (event) {
          if (!self.searchHasFocus() && !self.searchResultVisible()) {
            return;
          }

          if (event.keyCode === 13 && self.searchHasFocus() && self.querySpec() && self.querySpec().query !== '') {
            window.clearTimeout(self.fetchThrottle);
            self.fetchResults(self.querySpec().query);
            return;
          }

          if (self.searchResultVisible() && self.searchResultCategories().length > 0) {
            var currentIndex = self.selectedIndex();
            if (event.keyCode === 40) { // Down
              self.searchHasFocus(false);
              if (currentIndex && !(self.searchResultCategories()[currentIndex.categoryIndex].result.length <= currentIndex.resultIndex + 1 && self.searchResultCategories().length <= currentIndex.categoryIndex + 1)) {
                if (self.searchResultCategories()[currentIndex.categoryIndex].result.length <= currentIndex.resultIndex + 1) {
                  self.selectedIndex({ categoryIndex: currentIndex.categoryIndex + 1, resultIndex: 0 });
                } else {
                  self.selectedIndex({ categoryIndex: currentIndex.categoryIndex, resultIndex: currentIndex.resultIndex + 1})
                }
              } else {
                self.selectedIndex({ categoryIndex: 0, resultIndex: 0 });
              }
              event.preventDefault();
            } else if (event.keyCode === 38) { // Up
              self.searchHasFocus(false);
              if (currentIndex && !(currentIndex.categoryIndex === 0 && currentIndex.resultIndex === 0)) {
                if (currentIndex.resultIndex === 0) {
                  self.selectedIndex({ categoryIndex: currentIndex.categoryIndex - 1, resultIndex: self.searchResultCategories()[currentIndex.categoryIndex - 1].result.length - 1 });
                } else {
                  self.selectedIndex({ categoryIndex: currentIndex.categoryIndex, resultIndex: currentIndex.resultIndex - 1 });
                }
              } else {
                self.selectedIndex({ categoryIndex: self.searchResultCategories().length - 1, resultIndex: self.searchResultCategories()[self.searchResultCategories().length - 1].result.length - 1 });
              }
              event.preventDefault();
            } else if (event.keyCode === 13 && !self.searchHasFocus() && self.selectedIndex()) { // Enter
              self.openResult();
            }
          }
        });
      };

      GlobalSearch.prototype.close = function () {
        var self = this;
        self.searchResultVisible(false);
        self.querySpec({
          query: '',
          facets: {},
          text: []
        });
      };

      GlobalSearch.prototype.openResult = function () {
        var self = this;
        var selectedResult = self.selectedResult();
        if (['database', 'table', 'field', 'view'].indexOf(selectedResult.type) !== -1) {
          huePubSub.publish('context.popover.show.in.assist');
        } else if (selectedResult.type === 'document') {
          huePubSub.publish('open.link', '/hue' + selectedResult.data.link);
        } else if (selectedResult.type === 'hueApp' && selectedResult.data.interpreter && selectedResult.data.interpreter.page) {
          huePubSub.publish('open.link', selectedResult.data.interpreter.page);
        } else if (selectedResult.type === 'hueApp' && selectedResult.data.app && selectedResult.data.app.page) {
          huePubSub.publish('open.link', selectedResult.data.app.page);
        }
        self.close();
      };

      GlobalSearch.prototype.resultSelected = function (categoryIndex, resultIndex) {
        var self = this;
        if (!self.selectedIndex() || !(self.selectedIndex().categoryIndex === categoryIndex && self.selectedIndex().resultIndex === resultIndex)) {
          self.selectedIndex({ categoryIndex: categoryIndex, resultIndex: resultIndex });
        }
      };

      GlobalSearch.prototype.onResultClickOutside = function () {
        var self = this;
        if (!self.searchResultVisible() || self.searchHasFocus()) {
          return false;
        }
        self.searchResultVisible(false);
        window.clearTimeout(self.fetchThrottle);
        window.clearTimeout(self.autocompleteThrottle);
      };

      GlobalSearch.prototype.mainSearchSelect = function (entry) {
        if (entry.data && entry.data.link) {
          huePubSub.publish('open.link', entry.data.link);
        } else if (!/:\s*$/.test(entry.value)) {
          huePubSub.publish('assist.show.sql');
          huePubSub.publish('assist.db.search', entry.value);
        }
      };

      var HUE_APP_CATEGORY = 'hueApp';
      var HUE_DOC_CATEGORY = 'documents';
      var NAV_CATEGORY = 'nav';

      var CATEGORIES = {
        'table': 'Tables',
        'database': 'Databases',
        'field': 'Columns',
        'partition': 'Partitions',
        'view': 'Views',
        'hueDoc': 'Documents',
        'hueApp': 'Applications'
      };


      GlobalSearch.prototype.fetchHueConfig = function () {
        var promise = $.Deferred();
        huePubSub.publish('cluster.config.get.config', promise.resolve);
        return promise;
      };

      GlobalSearch.prototype.updateCategories = function (type, categoriesToAdd) {
        var self = this;
        var newCategories = self.searchResultCategories().filter(function (category) {
          return category.type !== type;
        });

        var change = newCategories.length !== self.searchResultCategories().length;

        if (categoriesToAdd.length > 0) {
          newCategories = newCategories.concat(categoriesToAdd);
          newCategories.sort(function (a, b) {
            if (a.weight === b.weight) {
              return a.label.localeCompare(b.label);
            }
            return b.weight - a.weight;
          });
          change = true;
        }

        if (change) {
          var selected = self.selectedResult();
          var newIndex = undefined;
          if (selected) {
            for (var i = 0; i < newCategories.length; i++) {
              for (var j = 0; j < newCategories[i].result.length; j++) {
                if (newCategories[i].result[j].type === selected.type && newCategories[i].result[j].label === selected.label) {
                  newIndex = { categoryIndex: i, resultIndex: j };
                  break;
                }
              }
              if (newIndex) {
                break;
              }
            }
          }
          self.selectedIndex(newIndex);
          self.searchResultCategories(newCategories);
        }
      };

      GlobalSearch.prototype.fetchResults = function (query) {
        var self = this;
        self.loading(true);
        self.searchResultVisible(true);
        var hueDocsPromise = self.apiHelper.fetchHueDocsInteractive(query);
        var navPromise = self.apiHelper.fetchNavEntitiesInteractive(query);
        var hueAppsPromise = self.fetchHueConfig();

        hueAppsPromise.done(function (apps) {
          var categories = [];

          if (apps && apps.app_config) {
            var hueApps = {
              type: HUE_APP_CATEGORY,
              label: CATEGORIES[HUE_APP_CATEGORY],
              result: [],
              weight: 1
            };
            Object.keys(apps.app_config).forEach(function (appConfigKey) {
              var appCatecory = apps.app_config[appConfigKey];
              var addAll = appCatecory.name.toLowerCase().indexOf(query) === 0 || appCatecory.displayName.toLowerCase().indexOf(query) === 0;
              if (appCatecory.interpreters) {
                appCatecory.interpreters.forEach(function (interpreter) {
                  // Special case for metastore that is now called table browser and hdfs
                  var specialMatch = appCatecory.name === 'browser' && (
                    (interpreter.type === 'tables' && 'metastore'.indexOf(query.toLowerCase()) === 0) ||
                    (interpreter.type === 'hdfs' && 'hdfs'.indexOf(query.toLowerCase()) === 0));
                  if (addAll || specialMatch || interpreter.displayName.toLowerCase().indexOf(query.toLowerCase()) === 0) {
                    var label;
                    if (appCatecory.name === 'browser') {
                      label = 'Browse ' + interpreter.displayName;
                    } else {
                      label = interpreter.displayName + ' ' + appCatecory.displayName;
                    }
                    hueApps.result.push({
                      label: label,
                      type: HUE_APP_CATEGORY,
                      data: {
                        interpreter: interpreter,
                        app: appCatecory,
                        type: HUE_APP_CATEGORY,
                        originalName: interpreter.displayName
                      }
                    })
                  }
                })
              }
            })
          }
          if (hueApps.result.length > 0) {
            hueApps.result.sort(function (a, b) {
              return a.label.localeCompare(b.label);
            });
            categories.push(hueApps);
          }

          self.updateCategories(HUE_APP_CATEGORY, categories);
        });

        hueDocsPromise.done(function (data) {
          var categories = [];

          var docCategory = {
            label: CATEGORIES.hueDoc,
            result: [],
            type: HUE_DOC_CATEGORY,
            weight: 3
          };

          data.results.forEach(function (doc) {
            docCategory.result.push({
              label: doc.hue_name,
              draggable: doc.originalName,
              draggableMeta: {
                source: 'globalSearch'
              },
              type: 'document',
              data: doc
            })
          });

          if (docCategory.result.length) {
            categories.push(docCategory);
          }

          self.updateCategories(HUE_DOC_CATEGORY, categories);
        });

        navPromise.done(function (data) {
          if (data.facets) {
            var facetValues = ko.unwrap(self.knownFacetValues);
            Object.keys(data.facets).forEach(function (facet) {
              if (!facetValues[facet] && Object.keys(data.facets[facet]).length > 0) {
                facetValues[facet] = {};
              }
              Object.keys(data.facets[facet]).forEach(function (facetKey) {
                facetValues[facet][facetKey] = data.facets[facet][facetKey];
              });
            })
          }
          var categories = [];
          var newCategories = {};
          data.results.forEach(function (result) {
            var typeLower = result.type.toLowerCase();
            if (CATEGORIES[typeLower]) {
              var category = newCategories[typeLower];
              if (!category) {
                category = {
                  label: CATEGORIES[typeLower],
                  result: [],
                  type: NAV_CATEGORY,
                  weight: 2
                };
                newCategories[typeLower] = category;
              }
              var meta = {
                source: 'globalSearch'
              };
              if (result.type.toLowerCase() === 'database') {
                meta.type = 'sql';
                meta.database = result.originalName
              } else if (result.type.toLowerCase() === 'table') {
                meta.type = 'sql';
                var split = result.originalName.split('.');
                if (split.length == 2) {
                  meta.database = split[0];
                  meta.table = split[1];
                }
              } else if (result.type.toLowerCase() === 'field') {
                meta.type = 'sql';
                var split = result.originalName.split('.');
                if (split.length >= 3) {
                  meta.database = split[0];
                  meta.table = split[1];
                  meta.column = split[2];
                }
              }
              category.result.push({
                label: result.hue_name || result.originalName,
                draggable: result.originalName,
                draggableMeta: meta,
                type: typeLower,
                data: result
              })
            }
          });

          Object.keys(newCategories).forEach(function (key) {
            categories.push(newCategories[key]);
          });

          self.updateCategories(NAV_CATEGORY, categories);
        });

        $.when.apply($, [hueAppsPromise, navPromise, hueDocsPromise]).always(function () {
          self.loading(false);
        })
      };

      ko.components.register('hue-global-search', {
        viewModel: GlobalSearch,
        template: {element: 'hue-global-search-template'}
      });
    })();
  </script>

  

  <script type="text/html" id="hue-history-panel-template">
    <button class="btn btn-flat pull-right btn-toggle-jobs-panel" title="Task history" data-bind="toggle: historyPanelVisible">
      <i class="fa fa-history"></i>
      <div class="jobs-badge" data-bind="text: historyRunningJobs().length, visible: historyRunningJobs().length > 0"></div>
    </button>

    <div class="jobs-panel history-panel" data-bind="visible: historyPanelVisible" style="display: none;">
      <a class="pointer inactive-action pull-right" data-bind="click: function(){ historyPanelVisible(false); }"><i class="fa fa-fw fa-times"></i></a>
      <!-- ko ifnot: editorViewModel.selectedNotebook() && editorViewModel.selectedNotebook().history().length > 0 -->
        <span style="font-style: italic">No task history.</span>
      <!-- /ko -->
      <!-- ko if: editorViewModel.selectedNotebook() && editorViewModel.selectedNotebook().history().length > 0 -->
      <!-- ko with: editorViewModel.selectedNotebook() -->
      <div class="notification-history margin-bottom-10">
        <!-- ko if: onSuccessUrl() -->
        <div class="notification-history-title">
          <strong class="margin-left-5" data-bind="text: name"></strong>
          <!-- ko if: onSuccessUrl() !== 'assist.db.refresh' -->
          <a class="pull-right margin-right-10" href="javascript:void(0)" data-bind="hueLink: onSuccessUrl()">
            Output
          </a>
          <!-- /ko -->
          <div class="clearfix"></div>
        </div>
        <!-- /ko -->
        <!-- ko if: snippets()[0] -->
        <!-- ko with: snippets()[0] -->
        <!-- ko if: progress -->
        <div class="snippet-progress-container">
          <div class="progress-snippet progress" data-bind="css: {
                    'progress-starting': progress() == 0 && status() == 'running',
                    'progress-warning': progress() > 0 && progress() < 100,
                    'progress-success': progress() == 100,
                    'progress-danger': progress() == 0 && errors().length > 0}" style="background-color: #FFF; width: 100%">
            <div class="bar" data-bind="style: {'width': (errors().length > 0 ? 100 : Math.max(2, progress())) + '%'}"></div>
          </div>
        </div>
        <!-- /ko -->
        <!-- ko if: result -->
        <pre data-bind="visible: result.logs() && result.logs().length == 0" class="logs logs-bigger">No logs available at this moment.</pre>
        <pre data-bind="visible: result.logs() && result.logs().length > 0, text: result.logs, logScroller: result.logs, logScrollerVisibilityEvent: showLogs, niceScroll" class="logs logs-bigger logs-populated" style="height: 120px"></pre>
        <!-- /ko -->
        <!-- /ko -->
        <!-- /ko -->
      </div>
      <!-- ko if: history -->
      <hr>
      <div class="notification-history margin-bottom-10" data-bind="niceScroll">
        <!-- ko if: history().length == 0 -->
        <span style="font-style: italic">No task history.</span>
        <!-- /ko -->
        <!-- ko if: history().length > 0 -->
        <div class="notification-history-title">
          <strong class="margin-left-5">Task History</strong>
          <div class="inactive-action pointer pull-right" title="Clear the query history" data-target="#clearNotificationHistoryModal" data-toggle="modal" rel="tooltip">
            <i class="fa fa-calendar-times-o"></i>
          </div>
          <div class="clearfix"></div>
        </div>
        <ul class="unstyled notification-history-list">
          <!-- ko foreach: history -->
          <li data-bind="click: function() { $parents[1].editorViewModel.openNotebook(uuid()); }, css: {'active': $parents[1].editorViewModel.selectedNotebook() !== null && $parents[1].editorViewModel.selectedNotebook().uuid() === uuid() }">
            <div class="muted pull-left" data-bind="momentFromNow: {data: lastExecuted, interval: 10000, titleFormat: 'LLL'}"></div>
            <div class="pull-right muted">
              <!-- ko switch: status -->
              <!-- ko case: 'running' -->
              <div class="history-status" data-bind="tooltip: { title: 'Query running', placement: 'bottom' }"><i class="fa fa-fighter-jet fa-fw"></i></div>
              <!-- /ko -->
              <!-- ko case: 'failed' -->
              <div class="history-status" data-bind="tooltip: { title: 'Query failed', placement: 'bottom' }"><i class="fa fa-exclamation fa-fw"></i></div>
              <!-- /ko -->
              <!-- ko case: 'available' -->
              <div class="history-status" data-bind="tooltip: { title: 'Result available', placement: 'bottom' }"><i class="fa fa-check fa-fw"></i></div>
              <!-- /ko -->
              <!-- ko case: 'expired' -->
              <div class="history-status" data-bind="tooltip: { title: 'Result expired', placement: 'bottom' }"><i class="fa fa-unlink fa-fw"></i></div>
              <!-- /ko -->
              <!-- /ko -->
            </div>
            <div class="clearfix"></div>
            <strong data-bind="text: name, attr: { title: uuid }"></strong>
            <div data-bind="highlight: { value: query }"></div>
          </li>
          <!-- /ko -->
        </ul>
        <!-- /ko -->
      </div>
      <!-- /ko -->
      <!-- /ko -->
      <!-- /ko -->
    </div>

    <div id="clearNotificationHistoryModal" class="modal hide fade" data-backdrop="false">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h2 class="modal-title">Confirm History Clearing</h2>
      </div>
      <div class="modal-body">
        <p>Are you sure you want to clear the task history?</p>
      </div>
      <div class="modal-footer">
        <a class="btn" data-dismiss="modal">No</a>
        <a class="btn btn-danger disable-feedback" data-bind="click: function() { editorViewModel.selectedNotebook().clearHistory(); editorViewModel.selectedNotebook(null); }">Yes</a>
      </div>
    </div>
  </script>

  <script type="text/javascript">
    (function () {
      var HistoryPanel = function (params) {
        var self = this;
        self.historyPanelVisible = ko.observable(false);

        self.historyPanelVisible.subscribe(function (newVal) {
          if (newVal) {
            huePubSub.publish('hide.jobs.panel');
          }
        });

        huePubSub.subscribe('hide.history.panel', function () {
          self.historyPanelVisible(false);
        });

        self.editorViewModel = new EditorViewModel(null, '', {
          user: 'vega',
          userId: 3,
          languages: [{name: "Java", type: "java"}, {name: "Hive SQL", type: "hive"}], // TODO reuse
          snippetViewSettings: {
            hive: {
              placeHolder: 'Example: SELECT * FROM tablename, or press CTRL + space',
              aceMode: 'ace/mode/hive',
              snippetImage: '/static/beeswax/art/icon_beeswax_48.4a8ff7e1505a.png',
              sqlDialect: true
            },
            impala: {
              placeHolder: 'Example: SELECT * FROM tablename, or press CTRL + space',
              aceMode: 'ace/mode/impala',
              snippetImage: '/static/impala/art/icon_impala_48.e733efc1e2ce.png',
              sqlDialect: true
            },
            java : {
              snippetIcon: 'fa-file-code-o'
            },
            shell: {
              snippetIcon: 'fa-terminal'
            },
          }
        });
        self.editorViewModel.editorMode(true);
        self.editorViewModel.isNotificationManager(true);
        self.editorViewModel.newNotebook();

        self.historyRunningJobs = ko.computed(function() {
          if (self.editorViewModel.selectedNotebook()) {
            return $.grep(self.editorViewModel.selectedNotebook().history(), function(task) { return task.status() == 'running'; });
          } else {
            return [];
          }
        });
        self.historyFinishedJobs = ko.computed(function() {
          if (self.editorViewModel.selectedNotebook()) {
            return $.grep(self.editorViewModel.selectedNotebook().history(), function(task) { return task.status() == 'available' || task.status() == 'failed'; });
          } else {
            return [];
          }
        });


        huePubSub.subscribe("notebook.task.submitted", function (history_id) {
          self.editorViewModel.openNotebook(history_id, null, true, function(){
            var notebook = self.editorViewModel.selectedNotebook();
            notebook.snippets()[0].progress.subscribe(function(val){
              if (val == 100){
                //self.indexingStarted(false);
                //self.isIndexing(false);
                //self.indexingSuccess(true);
              }
            });

            notebook.snippets()[0].status.subscribe(function(val){
              if (val == 'failed'){
                //self.isIndexing(false);
                //self.indexingStarted(false);
                //self.indexingError(true);
              } else if (val == 'available') {
                var snippet = notebook.snippets()[0];
                if (! snippet.result.handle().has_more_statements) {
                  // TODO: Show finish notification and clicking on it does onSuccessUrl
                  // or if still on initial spinner we redirect automatically to onSuccessUrl
                  if (notebook.onSuccessUrl() && notebook.onSuccessUrl() !== 'assist.db.refresh') { // TODO: Similar if in in FB directory, also refresh FB dir
                    huePubSub.publish('open.link', notebook.onSuccessUrl());
                  }

                  if (notebook.onSuccessUrl() == 'assist.db.refresh') {
                    huePubSub.publish('assist.db.refresh', {sourceTypes: [snippet.type()]});
                  } else if (notebook.onSuccessUrl()) {
                    huePubSub.publish(notebook.pubSubUrl());
                  }
                } else { // Perform last DROP statement execute
                  snippet.execute();
                }
              }
            });
            notebook.snippets()[0].checkStatus();

            // Add to history
            notebook.history.unshift(
                notebook._makeHistoryRecord(
                    notebook.onSuccessUrl(),
                    notebook.description(),
                    (new Date()).getTime(),
                    notebook.snippets()[0].status(),
                    notebook.name(),
                    notebook.uuid()
                )
            );

            self.historyPanelVisible(true);
          });
        });
      };

      ko.components.register('hue-history-panel', {
        viewModel: HistoryPanel,
        template: { element: 'hue-history-panel-template' }
      });
    })();
  </script>

  

  <script type="text/html" id="inline-autocomplete-template">
    <div class="inline-autocomplete-container">
      <div>
        <input class="inline-autocomplete-input" autocorrect="off" autocapitalize="off" spellcheck="false" type="text" data-bind="attr: { 'placeHolder' : hasFocus() ? '' : placeHolder }, textInput: searchInput, hasFocus: hasFocus, clearable: { value: searchInput, onClear: onClear }">
        <input class="inline-autocomplete-autocomplete" disabled type="text" data-bind="value: inlineAutocomplete">
      </div>
    </div>
  </script>

  <script type="text/javascript">
    (function () {

      var getSortedFacets = function (facetIndex) {
        var result = Object.keys(facetIndex);
        result.sort(function (a, b) {
          if (facetIndex[a] > facetIndex[b]) {
            return -1;
          }
          if (facetIndex[b] > facetIndex[a]) {
            return 1;
          }
          return a.localeCompare(b);
        });
        return result;
      };

      var InlineAutocomplete = function (params) {
        var self = this;
        self.disposals = [];

        self.placeHolder = params.placeHolder || 'Filter...';
        self.hasFocus = params.hasFocus || ko.observable();
        self.querySpec = params.querySpec;
        self.querySpec({
          query: '',
          facets: {},
          text: []
        });
        self.autocompleteFromEntries = params.autocompleteFromEntries || function () { return []; };
        self.facets = params.facets || [];
        self.knownFacetValues = params.knownFacetValues || {};
        self.uniqueFacets = !!params.uniqueFacets;
        self.disableNavigation = !!params.disableNavigation;

        self.searchInput = ko.observable('');
        self.suggestions = ko.observableArray();
        self.selectedSuggestionIndex = ko.observable(0);

        self.suggestions.subscribe(function () {
          self.selectedSuggestionIndex(0);
        });

        self.inlineAutocomplete = ko.pureComputed(function () {
          if (self.suggestions().length === 0) {
            return '';
          }
          return self.suggestions()[self.selectedSuggestionIndex()];
        });

        self.lastParseResult = {};

        var querySpecSub = self.querySpec.subscribe(function (newVal) {
          if (!newVal || !newVal.query) {
            self.searchInput('');
            self.clearSuggestions();
          }
        });

        self.disposals.push(function () {
          querySpecSub.dispose();
        });

        self.onClear = function () {
          if (params.onClear) {
            params.onClear();
          }
          self.clearSuggestions();
        };

        if (params.triggerObservable) {
          var triggerSub = params.triggerObservable.subscribe(function () {
            self.autocomplete();
          });
          self.disposals.push(function () {
            triggerSub.dispose();
          })
        }

        var inputSub = self.searchInput.subscribe(function (newValue) {
          if (self.querySpec() && self.querySpec().query === newValue) {
            return;
          }

          if (newValue === '') {
            self.clearSuggestions();
            if (self.querySpec() && self.querySpec().query !== '') {
              self.querySpec({
                query: '',
                facets: {},
                text: []
              });
            }
            return;
          }

          self.updateQuerySpec();
          self.autocomplete();
        });

        self.disposals.push(function () {
          inputSub.dispose();
        });

        var onKeyDown = function (event) {
          if (!self.hasFocus()) {
            return;
          }
          if (!self.disableNavigation && event.keyCode === 38 && self.suggestions().length) { // Up
            if (self.selectedSuggestionIndex() === 0) {
              self.selectedSuggestionIndex(self.suggestions().length - 1);
            } else {
              self.selectedSuggestionIndex(self.selectedSuggestionIndex() - 1);
            }
            event.preventDefault();
            return;
          }

          if (!self.disableNavigation && event.keyCode === 40 && self.suggestions().length) { // Down
            if (self.selectedSuggestionIndex() === self.suggestions().length - 1) {
              self.selectedSuggestionIndex(0);
            } else {
              self.selectedSuggestionIndex(self.selectedSuggestionIndex() + 1);
            }
            event.preventDefault();
            return;
          }
          if (event.keyCode === 32 && event.ctrlKey) { // Ctrl-Space
            self.autocomplete();
            return;
          }
          if (event.keyCode === 39 && self.inlineAutocomplete() !== '' && self.inlineAutocomplete() !== self.searchInput()) { // Right arrow
            // TODO: Check that cursor is last
            self.searchInput(self.inlineAutocomplete());
            return;
          }
          if (event.keyCode === 9 && self.inlineAutocomplete() !== self.searchInput()) { // Tab
            self.searchInput(self.inlineAutocomplete());
            event.preventDefault();
          }
        };

        self.disposals.push(function () {
          $(document).off('keydown', onKeyDown);
        });

        var focusSub = self.hasFocus.subscribe(function (newVal) {
          if (!newVal) {
            self.clearSuggestions();
            $(document).off('keydown', onKeyDown);
          } else if (self.searchInput() !== '') {
            self.autocomplete();
            $(document).on('keydown', onKeyDown);
          } else {
            $(document).on('keydown', onKeyDown);
          }
        });

        self.disposals.push(function () {
          focusSub.dispose();
        });
      };

      InlineAutocomplete.prototype.updateQuerySpec = function () {
        var self = this;
        // TODO: Get cursor position and split to before and after
        self.lastParseResult = globalSearchParser.parseGlobalSearch(self.searchInput(), '');
        if (hueDebug && hueDebug.showGlobalSearchParseResults) {
          console.log(self.lastParseResult);
        }
        var querySpec = { query: self.searchInput() };

        if (self.lastParseResult.facets) {
          var knownFacetValues = ko.unwrap(self.knownFacetValues);
          var cleanFacets = {};
          Object.keys(self.lastParseResult.facets).forEach(function (facet) {
            if (!knownFacetValues[facet]) {
              cleanFacets[facet] = self.lastParseResult.facets[facet];
            } else {
              cleanFacets[facet] = {};
              Object.keys(self.lastParseResult.facets[facet]).forEach(function (value) {
                if (knownFacetValues[facet][value]) {
                  cleanFacets[facet][value] = self.lastParseResult.facets[facet][value];
                } else {
                  var found = false;
                  // Find the closest match, i.e. type:s -> type: [string, smallint, ...]
                  getSortedFacets(knownFacetValues[facet]).forEach(function (knownValue) {
                    if (knownValue.toLowerCase().indexOf(value.toLowerCase()) === 0) {
                      if (!cleanFacets[facet][knownValue]) {
                        cleanFacets[facet][knownValue] = [];
                      }
                      cleanFacets[facet][knownValue] = true;
                      found = true
                    }
                  });
                  if (!found) {
                    cleanFacets[facet][value] = self.lastParseResult.facets[facet][value];
                  }
                }
              })
            }
          });
          querySpec.facets = cleanFacets;
        }
        if (self.lastParseResult.text) {
          querySpec.text = self.lastParseResult.text;
        }

        self.querySpec(querySpec);
      };

      InlineAutocomplete.prototype.clearSuggestions = function () {
        var self = this;
        if (self.suggestions().length > 0) {
          self.suggestions([]);
        }
      };

      InlineAutocomplete.prototype.dispose = function () {
        var self = this;
        while (self.disposals.length) {
          self.disposals.pop()();
        }
      };

      InlineAutocomplete.prototype.autocomplete = function () {
        var self = this;
        if (!self.lastParseResult) {
          self.clearSuggestions();
          return;
        }

        var text = self.searchInput();
        var partial, nonPartial;
        var partialMatch = text.match(/([^:\s]+)$/i);
        if (partialMatch) {
          partial = partialMatch[0];
          nonPartial = text.substring(0, text.length - partial.length);
        } else {
          partial = '';
          nonPartial = text;
        }

        var newSuggestions = [];
        var partialLower = partial.toLowerCase();
        if (self.lastParseResult.suggestFacets) {
          var existingFacetIndex = {};
          if (self.uniqueFacets && self.lastParseResult.facets) {
            Object.keys(self.lastParseResult.facets).forEach(function (facet) {
              existingFacetIndex[facet.toLowerCase()] = true;
            })
          }

          var suggestion = nonPartial + partial;
          var isLowerCase = suggestion.length > 0 && suggestion.toLowerCase() === suggestion;
          self.facets.forEach(function (facet) {
            if (self.uniqueFacets && existingFacetIndex[facet]) {
              return;
            }
            if (partial.length === 0 || facet.indexOf(partialLower) === 0) {
              var remainder = facet.substring(partial.length);
              suggestion += isLowerCase ? remainder : remainder.toUpperCase();
              suggestion += ':';
              newSuggestions.push(suggestion);
            }
          });
        }

        if (self.lastParseResult.suggestFacetValues) {
          var facetValues = ko.unwrap(self.knownFacetValues);
          if (facetValues[self.lastParseResult.suggestFacetValues.toLowerCase()]) {
            getSortedFacets(facetValues[self.lastParseResult.suggestFacetValues.toLowerCase()]).forEach(function (value) {
              if (value.toLowerCase().indexOf(partialLower) === 0) {
                newSuggestions.push(nonPartial + partial + value.substring(partial.length, value.length));
              }
            });
          }
        }

        if (partial !== '' && self.lastParseResult.suggestResults) {
          newSuggestions = newSuggestions.concat(self.autocompleteFromEntries(nonPartial, partial));
        }

        self.suggestions(newSuggestions);
      };

      ko.components.register('inline-autocomplete', {
        viewModel: InlineAutocomplete,
        template: {element: 'inline-autocomplete-template'}
      });
    })();
  </script>

  

  <script type="text/html" id="hue-job-browser-links-template">
    <div class="btn-group pull-right">
      <a class="btn btn-flat" style="padding-right: 4px" title="Job browser" data-bind="hueLink: '/jobbrowser#!jobs', click: function(){ huePubSub.publish('hide.jobs.panel'); }">
        <span>Jobs</span>
      </a>
      <button class="btn btn-flat btn-toggle-jobs-panel" title="Jobs preview" data-bind="click: function() { huePubSub.publish('toggle.jobs.panel'); }, style: {'paddingLeft': jobCount() > 0 ? '0': '4px'}">
        <span class="jobs-badge" data-bind="visible: jobCount() > 0, text: jobCount"></span>
        <i class="fa fa-tasks"></i>
      </button>
    </div>
  </script>

  <script type="text/javascript">
    (function () {
      var JB_CHECK_INTERVAL_IN_MILLIS = 30000;

      var JobBrowserPanel = function (params) {
        var self = this;

        huePubSub.subscribe('hide.jobs.panel', function () {
          $('#jobsPanel').hide();
        });

        huePubSub.subscribe('show.jobs.panel', function (section) {
          huePubSub.publish('hide.history.panel');
          $('#jobsPanel').show();
          huePubSub.publish('mini.jb.navigate', section && section.interface ? section.interface : 'jobs');
          if (section && section.id) {
            huePubSub.publish('mini.jb.open.job', section.id);
          }
        });

        huePubSub.subscribe('toggle.jobs.panel', function () {
          if ($('#jobsPanel').is(':visible')){
            huePubSub.publish('hide.jobs.panel');
          }
          else {
            huePubSub.publish('show.jobs.panel');
          }
        });

        self.jobCounts = ko.observable({'yarn': 0, 'schedules': 0});
        self.jobCount = ko.pureComputed(function() {
          var total = 0;
          Object.keys(self.jobCounts()).forEach(function (value) {
            total += self.jobCounts()[value];
          });
          return total;
        });
        self.onePageViewModel = params.onePageViewModel;

        var lastYarnBrowserRequest = null;
        var checkYarnBrowserStatus = function() {
          return $.post("/jobbrowser/jobs/", {
              "format": "json",
              "state": "running",
              "user": "vega"
            },
            function(data) {
              if (data != null && data.jobs != null) {
                huePubSub.publish('jobbrowser.data', data.jobs);
                self.jobCounts()['yarn'] = data.jobs.length;
                self.jobCounts.valueHasMutated();
              }
          })
        };
        var lastScheduleBrowserRequest = null;
        var checkScheduleBrowserStatus = function() {
          return $.post("/jobbrowser/api/jobs", {
              interface: ko.mapping.toJSON("schedules"),
              filters: ko.mapping.toJSON([
                  {"text": "user:vega"},
                  {"time": {"time_value": 7, "time_unit": "days"}},
                  {"states": ["running"]},
                  {"pagination": {"page": 1, "offset": 1, "limit": 1}}
              ])
            },
            function(data) {
              if (data != null && data.total != null) {
                huePubSub.publish('jobbrowser.schedule.data', data.apps);
                self.jobCounts()['schedules'] = data.total;
                self.jobCounts.valueHasMutated();
              }
          })
        };

        var checkJobBrowserStatus = function() {
          lastYarnBrowserRequest = checkYarnBrowserStatus();
          lastScheduleBrowserRequest = checkScheduleBrowserStatus();

          $.when.apply($, [lastYarnBrowserRequest, lastScheduleBrowserRequest])
          .done(function () {
            checkJobBrowserStatusIdx = window.setTimeout(checkJobBrowserStatus, JB_CHECK_INTERVAL_IN_MILLIS);
           })
          .fail(function () {
            window.clearTimeout(checkJobBrowserStatusIdx);
          });
        };


        // Load the mini jobbrowser
        $.ajax({
          url: '/jobbrowser/apps?is_embeddable=true&is_mini=true',
          beforeSend: function (xhr) {
            xhr.setRequestHeader('X-Requested-With', 'Hue');
          },
          dataType: 'html',
          success: function (response) {
            var r = params.onePageViewModel.processHeaders(response);
            $('#mini_jobbrowser').html(r);
          }
        });

        var checkJobBrowserStatusIdx = window.setTimeout(checkJobBrowserStatus, 10);

        huePubSub.subscribe('check.job.browser', checkYarnBrowserStatus);
        huePubSub.subscribe('check.schedules.browser', checkScheduleBrowserStatus);
      };

      ko.components.register('hue-job-browser-links', {
        viewModel: JobBrowserPanel,
        template: { element: 'hue-job-browser-links-template' }
      });
    })();
  </script>

  
  <link href="/static/desktop/ext/css/selectize.5c2615726537.css" rel="stylesheet">

  <script type="text/html" id="nav-tags-template">
     <!-- ko if: loading -->
     <div style="width: 100%; height: 20px; left: 6px; top: 8px; position: relative;" data-bind="hueSpinner: { spin: loading }"></div>
     <!-- /ko -->
     <div style="width: 100%" data-bind="ifnot: loading">
       <textarea style="width: 100%" data-bind="tagEditor: {
          placeholder: 'No tags',
          readOnly: 'False' === 'True',
          hasErrors: hasErrors,
          errorMessage: 'Tags could not be loaded.',
          setTags: currentTags,
          onSave: onSave,
          validRegExp: '^[a-zA-z0-9_\-]{1,50}$',
          invalidMessage: 'Tags can only contain 1 to 50 alphanumeric characters, \&#39;_\&#39; or \&#39;-\&#39;.',
          load: loadTags
        }"></textarea>
       <div class="selectize-error" style="display: none;"><i class="fa fa-exclamation-triangle"></i> <span class="message"></span></div>
     </div>
  </script>

  <script type="text/javascript">
    (function () {
      /**
       * @param {object} params
       * @param {String} sourceType
       * @param {String} defaultDatabase
       * @param {object[]} [params.identifierChain]
       * @param {String} [params.database]
       * @param {String} [params.table]
       * @param {String} [params.column]
       *
       * @constructor
       */
      function NavTags(params) {
        var self = this;
        var apiHelper = ApiHelper.getInstance();

        var identifierChain = ko.unwrap(params.identifierChain);
        if (! params.identifierChain) {
          identifierChain = [];
          if (params.database) {
            identifierChain.push({ name: ko.unwrap(params.database) });
          }
          if (params.table) {
            identifierChain.push({ name: ko.unwrap(params.table) });
          }
          if (params.column) {
            identifierChain.push({ name: ko.unwrap(params.column) });
          }
        }

        self.identity;
        self.hasErrors = ko.observable(false);
        self.loading = ko.observable(true);
        self.navEntity = ko.observable();
        self.currentTags = ko.observableArray();
        self.allTags = ko.observableArray();

        var fetchNavEntity = function () {
          var fetchDeferral = $.Deferred();
          apiHelper.fetchNavEntity({
            sourceType: ko.unwrap(params.sourceType),
            identifierChain: identifierChain,
            isView: typeof params.fetchedData !== 'undefined' && typeof params.fetchedData() !== 'undefined' && params.fetchedData().is_view,
            defaultDatabase: ko.unwrap(params.defaultDatabase),
            silenceErrors: true,
            noCache: true,
            successCallback: function (data) {
              fetchDeferral.resolve(data.entity);
            },
            errorCallback: function (error) {
              fetchDeferral.reject()
            }
          });
          return fetchDeferral;
        };


        var fetchAllTags = function () {
          var fetchDeferral = $.Deferred();
          apiHelper.listNavTags({
            successCallback: function (data) {
              fetchDeferral.resolve(Object.keys(data.tags));
            },
            silenceErrors: true,
            errorCallback: function (error) {
              hueUtils.logError(error);
              fetchDeferral.reject()
            }
          });
          return fetchDeferral;
        };

        self.loading(true);
        $.when(fetchNavEntity(), fetchAllTags()).done(function (entity, allTags) {
          self.identity = entity.identity;
          self.currentTags(entity.tags);
          self.allTags(allTags);
        }).fail(function () {
          self.hasErrors(true);
        }).always(function () {
          self.loading(false);
        });

        self.loadTags = function (query, callback) {
          callback($.map(self.allTags(), function (tag) { return { value: tag, text: tag }}));
        };

        self.onSave = function (value) {
          self.loading(true);
          var newTags = value.length > 0 ? value.split(',') : [];
          var tagsToRemove = [];
          var tagsToAdd = [];
          var tagIndex = {};
          self.currentTags().forEach(function (tag) {
            tagIndex[tag] = false;
          });
          newTags.forEach(function (newTag) {
            if (typeof tagIndex[newTag] !== 'undefined') {
              tagIndex[newTag] = true;
            } else {
              tagsToAdd.push(newTag);
            }
          });
          Object.keys(tagIndex).forEach(function (oldTag) {
            if (! tagIndex[oldTag]) {
              tagsToRemove.push(oldTag);
            }
          });

          self.loading(true);
          self.hasErrors(false);
          var addTagsDeferral = $.Deferred();
          if (tagsToAdd.length > 0) {
            if (typeof self.identity === 'undefined' || self.identity === null) {
              addTagsDeferral.reject('Can&#39;t add tags without an entity.');
            } else {
              addTagsDeferral = apiHelper.addNavTags(self.identity, tagsToAdd);
            }
          } else {
            addTagsDeferral.resolve();
          }

          var removeTagsDeferral = $.Deferred();
          if (tagsToRemove.length > 0) {
            if (typeof self.identity === 'undefined' || self.identity === null) {
              removeTagsDeferral.reject('Can\'t remove tags without an entity');
            } else {
              removeTagsDeferral = apiHelper.deleteNavTags(self.identity, tagsToRemove);
            }
          } else {
            removeTagsDeferral.resolve();
          }

          var fetchAllTagsDeferral = $.Deferred();

          $.when(addTagsDeferral, removeTagsDeferral).done(function () {
            self.currentTags(newTags);
            fetchAllTags().done(function (tags) {
              self.allTags(tags);
              fetchAllTagsDeferral.resolve();
            }).fail(fetchAllTagsDeferral.reject);
          }).fail(fetchAllTagsDeferral.reject);

          $.when(addTagsDeferral, removeTagsDeferral, fetchAllTagsDeferral).fail(function (addTagsError, removeTagsError) {
            if (typeof addTagsError !== 'undefined') {
              hueUtils.logError(addTagsError);
              $(document).trigger('error', 'Could not add tags, see the server log for details.');
            }
            if (typeof removeTagsError !== 'undefined') {
              hueUtils.logError(removeTagsError);
              $(document).trigger('error', 'Could not remove tags, see the server log for details.');
            }
            self.hasErrors(true);
          }).always(function () {
            self.loading(false);
          });
        };
      }

      ko.components.register('nav-tags', {
        viewModel: NavTags,
        template: { element: 'nav-tags-template' }
      });
    })();
  </script>

  

  <script type="text/html" id="hue-simple-ace-editor-template">
    <!-- ko if: singleLine -->
    <div class="simple-ace-single-line">
      <div class="ace-clearable" data-bind="css: { 'visible': value() !== '' }, click: clear"><i class="fa fa-times-circle"></i></div>
      <div class="ace-editor"></div>
    </div>
    <!-- /ko -->
    <!-- ko ifnot: singleLine -->
    <div class="ace-editor"></div>
    <!-- /ko -->
    <!-- ko if: autocompleter !== null -->
    <!-- ko component: { name: 'hueAceAutocompleter', params: { editor: ace, autocompleter: autocompleter } } --><!-- /ko -->
    <!-- /ko -->
  </script>

  <script type="text/javascript">
    (function () {
      var normalizedColors = HueColors.getNormalizedColors();

      // TODO: Autocomplete colors should be global
      var COLORS = {
        ALL: HueColors.BLUE,
        FIELD: normalizedColors['green'][2],
        FUNCTION: normalizedColors['purple-gray'][3],
        KEYWORD: normalizedColors['blue'][4],
        SAMPLE: normalizedColors['purple'][5]
      };

      var DEFAULT_POPULAR = ko.observable(false);

      var SolrFormulaAutocompleter = (function () {
        var SOLR_FUNCTIONS = {
          abs: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'abs(x)',
            draggable: 'abs()',
            description: 'Returns the absolute value of the specified value or function.'
          },
          and: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'boolean', multiple: true}]],
            signature: 'and(x, y, ...)',
            draggable: 'and()',
            description: 'Returns a value of true if and only if all of its operands evaluate to true.'
          },
          childfield: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'childfield(x)',
            draggable: 'childfield()',
            description: 'Returns the value of the given field for one of the matched child docs when searching by {!parent}. It can be used only in sort parameter.'
          },
          def: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'def(field, default)',
            draggable: 'def()',
            description: 'def is short for default. Returns the value of field "field", or if the field does not exist, returns the default value specified. and yields the first value where exists()==true.)'
          },
          div: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'div(x, y)',
            draggable: 'div()',
            description: 'Divides one value or function by another. div(x,y) divides x by y.'
          },
          dist: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'dist(power, x, y, 0, 0)',
            draggable: 'dist()',
            description: 'Return the distance between two vectors (points) in an n-dimensional space. Takes in the power, plus two or more ValueSource instances and calculates the distances between the two vectors. Each ValueSource must be a number. There must be an even number of ValueSource instances passed in and the method assumes that the first half represent the first vector and the second half represent the second vector.'
          },
          docfreq: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'docfreq(field, value)',
            draggable: 'docfreq()',
            description: 'Returns the number of documents that contain the term in the field. This is a constant (the same value for all documents in the index).\n\n You can quote the term if it\'s more complex, or do parameter substitution for the term value.'
          },
          exists: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'T'}]],
            signature: 'exists(x)',
            draggable: 'exists()',
            description: 'Returns TRUE if any member of the field exists.'
          },
          eq: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'eq(x, y)',
            draggable: 'eq()',
            description: 'Equal, returns TRUE if x is equal to y'
          },
          field: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T', optional: true}]],
            signature: 'field(field, minOrMax)',
            draggable: 'field()',
            description: 'Returns the numeric docValues or indexed value of the field with the specified name. In its simplest (single argument) form, this function can only be used on single valued fields, and can be called using the name of the field as a string, or for most conventional field names simply use the field name by itself with out using the field(...) syntax.\n\nWhen using docValues, an optional 2nd argument can be specified to select the "min" or "max" value of multivalued fields.\n\n0 is returned for documents without a value in the field.'
          },
          gt: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'gt(x, y)',
            draggable: 'gt()',
            description: 'Greater than, returns TRUE if x is greater than y'
          },
          gte: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'gte(x, y)',
            draggable: 'gte()',
            description: 'Greater than or equal, returns TRUE if x is greater than or equal to y'
          },
          hsin: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'hsin(2, true, x, y, 0, 0)',
            draggable: 'hsin()',
            description: 'The Haversine distance calculates the distance between two points on a sphere when traveling along the sphere. The values must be in radians. hsin also take a Boolean argument to specify whether the function should convert its output to radians.'
          },
          idf: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'idf(field, str)',
            draggable: 'idf()',
            description: 'Inverse document frequency; a measure of whether the term is common or rare across all documents. Obtained by dividing the total number of documents by the number of documents containing the term, and then taking the logarithm of that quotient. See also tf.'
          },
          'if': {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}, {type: 'T'}]],
            signature: 'if(test, val1, val2)',
            draggable: 'if()',
            description: 'Enables conditional function queries. In if(test,value1,value2): \n- test is or refers to a logical value or expression that returns a logical value (TRUE or FALSE).\n- value1 is the value that is returned by the function if test yields TRUE.\n -value2 is the value that is returned by the function if test yields FALSE.\n\nAn expression can be any function which outputs boolean values, or even functions returning numeric values, in which case value 0 will be interpreted as false, or strings, in which case empty string is interpreted as false.'
          },
          linear: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}, {type: 'T'}]],
            signature: 'linear(x, m, c)',
            draggable: 'linear()',
            description: 'Implements m*x+c where m and c are constants and x is an arbitrary function. This is equivalent to sum(product(m,x),c), but slightly more efficient as it is implemented as a single function.'
          },
          log: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'log(x)',
            draggable: 'log()',
            description: 'Returns the log base 10 of the specified function.'
          },
          lt: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'lt(x, y)',
            draggable: 'lt()',
            description: 'Less than, returns TRUE if x is less than y'
          },
          lte: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'lte(x, y)',
            draggable: 'lte()',
            description: 'Less than or equal, returns TRUE if x is less than or equal to y'
          },
          map: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'map(x, min, max, target)',
            draggable: 'map()',
            description: 'Maps any values of an input function x that fall within min and max inclusive to the specified target. The arguments min and max must be constants. The arguments target and default can be constants or functions. If the value of x does not fall between min and max, then either the value of x is returned, or a default value is returned if specified as a 5th argument.'
          },
          max: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'max(x, y, ...)',
            draggable: 'max()',
            description: 'Returns the maximum numeric value of multiple nested functions or constants, which are specified as arguments: max(x,y,...). The max function can also be useful for "bottoming out" another function or field at some specified constant.'
          },
          maxdoc: {
            returnTypes: ['T'],
            arguments: [],
            signature: 'maxdoc()',
            draggable: 'maxdoc()',
            description: 'Returns the number of documents in the index, including those that are marked as deleted but have not yet been purged. This is a constant (the same value for all documents in the index).'
          },
          min: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'min(x, y, ...)',
            draggable: 'min()',
            description: 'Returns the minimum numeric value of multiple nested functions of constants, which are specified as arguments: min(x,y,...). The min function can also be useful for providing an "upper bound" on a function using a constant.'
          },
          ms: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'ms(x, y, ...)',
            draggable: 'ms()',
            description: 'Returns milliseconds of difference between its arguments. Dates are relative to the Unix or POSIX time epoch, midnight, January 1, 1970 UTC. Arguments may be the name of an indexed TrieDateField, or date math based on a constant date or NOW.\n\n- ms(): Equivalent to ms(NOW), number of milliseconds since the epoch.\n- ms(a): Returns the number of milliseconds since the epoch that the argument represents.\n- ms(a,b) : Returns the number of milliseconds that b occurs before a (that is, a - b)'
          },
          mul: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'mul(x, y, ...)',
            draggable: 'mul()',
            description: 'Returns the product of multiple values or functions, which are specified in a comma-separated list. Same as the product function.'
          },
          norm: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'norm(field)',
            draggable: 'norm()',
            description: 'Returns the "norm" stored in the index for the specified field. This is the product of the index time boost and the length normalization factor, according to the Similarity for the field.'
          },
          not: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'boolean'}]],
            signature: 'not(x)',
            draggable: 'not()',
            description: 'The logically negated value of the wrapped function.'
          },
          numdocs: {
            returnTypes: ['T'],
            arguments: [],
            signature: 'numdocs()',
            draggable: 'numdocs()',
            description: 'Returns the number of documents in the index, not including those that are marked as deleted but have not yet been purged. This is a constant (the same value for all documents in the index).'
          },
          or: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'boolean', multiple: true}]],
            signature: 'or(x, y)',
            draggable: 'or()',
            description: 'A logical disjunction.'
          },
          ord: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'ord(field)',
            draggable: 'ord()',
            description: 'Returns the ordinal of the indexed field value within the indexed list of terms for that field in Lucene index order (lexicographically ordered by unicode value), starting at 1. In other words, for a given field, all values are ordered lexicographically; this function then returns the offset of a particular value in that ordering. The field must have a maximum of one value per document (not multi-valued). 0 is returned for documents without a value in the field.'
          },
          payload: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'payload(payloaded_field_dpf, term, 0.0, first)',
            draggable: 'payload()',
            description: 'Returns the float value computed from the decoded payloads of the term specified. The return value is computed using the min, max, or average of the decoded payloads. A special first function can be used instead of the others, to short-circuit term enumeration and return only the decoded payload of the first term. The field specified must have float or integer payload encoding capability (via DelimitedPayloadTokenFilter or NumericPayloadTokenFilter). If no payload is found for the term, the default value is returned.'
          },
          pow: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'pow(x, y)',
            draggable: 'pow()',
            description: 'Raises the specified base to the specified power. pow(x,y) raises x to the power of y.'
          },
          product: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'product(x, y, ...)',
            draggable: 'product()',
            description: 'Returns the product of multiple values or functions, which are specified in a comma-separated list. mul(...) may also be used as an alias for this function.'
          },
          query: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T', optional: true}]],
            signature: 'query(subquery, default)',
            draggable: 'query()',
            description: 'Returns the score for the given subquery, or the default value for documents not matching the query. Any type of subquery is supported through either parameter de-referencing $otherparam or direct specification of the query string in the Local Parameters through the v key.'
          },
          recip: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}, {type: 'T'}, {type: 'T'}]],
            signature: 'recip(x, m, a, b)',
            draggable: 'recip()',
            description: 'Performs a reciprocal function with recip(x,m,a,b) implementing a/(m*x+b) where m,a,b are constants, and x is any arbitrarily complex function.\n\nWhen a and b are equal, and x>=0, this function has a maximum value of 1 that drops as x increases. Increasing the value of a and b together results in a movement of the entire function to a flatter part of the curve. These properties can make this an ideal function for boosting more recent documents when x is rord(datefield).'
          },
          rord: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'rord(x)',
            draggable: 'rord()',
            description: 'Returns the reverse ordering of that returned by ord.'
          },
          scale: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}, {type: 'T'}]],
            signature: 'scale(x, minTarget, maxTarget)',
            draggable: 'scale()',
            description: 'Scales values of the function x such that they fall between the specified minTarget and maxTarget inclusive. The current implementation traverses all of the function values to obtain the min and max, so it can pick the correct scale.\n\nThe current implementation cannot distinguish when documents have been deleted or documents that have no value. It uses 0.0 values for these cases. This means that if values are normally all greater than 0.0, one can still end up with 0.0 as the min value to map from. In these cases, an appropriate map() function could be used as a workaround to change 0.0 to a value in the real range, as shown here: scale(map(x,0,0,5),1,2).'
          },
          sqedist: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'sqedist(x_td, y_td, 0, 0)',
            draggable: 'sqedist()',
            description: 'The Square Euclidean distance calculates the 2-norm (Euclidean distance) but does not take the square root, thus saving a fairly expensive operation. It is often the case that applications that care about Euclidean distance do not need the actual distance, but instead can use the square of the distance. There must be an even number of ValueSource instances passed in and the method assumes that the first half represent the first vector and the second half represent the second vector.'
          },
          sqrt: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'sqrt(x)',
            draggable: 'sqrt()',
            description: 'Returns the square root of the specified value or function.'
          },
          strdist: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'strdist(string1, string2, distance_measure)',
            draggable: 'strdist()',
            description: 'Calculate the distance between two strings. Uses the Lucene spell checker StringDistance interface and supports all of the implementations available in that package, plus allows applications to plug in their own via Solr\'s resource loading capabilities. strdist takes (string1, string2, distance measure).\n\nPossible values for distance measure are:\n- jw: Jaro-Winkler\n- edit: Levenstein or Edit distance\n- ngram: The NGramDistance, if specified, can optionally pass in the ngram size too. Default is 2.\n- FQN: Fully Qualified class Name for an implementation of the StringDistance interface. Must have a no-arg constructor.'
          },
          sub: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'sub(x, y)',
            draggable: 'sub()',
            description: 'Returns x-y from sub(x,y).'
          },
          sum: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true}]],
            signature: 'sum(x, y, ...)',
            draggable: 'sum()',
            description: 'Returns the sum of multiple values or functions, which are specified in a comma-separated list. add(...) may be used as an alias for this function'
          },
          sumtotaltermfreq: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'sumtotaltermfreq(field)',
            draggable: 'sumtotaltermfreq()',
            description: 'Returns the sum of totaltermfreq values for all terms in the field in the entire index (i.e., the number of indexed tokens for that field). (Aliases sumtotaltermfreq to sttf.)'
          },
          termfreq: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'termfreq(field, term)',
            draggable: 'termfreq()',
            description: 'Returns the number of times the term appears in the field for that document.'
          },
          tf: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'tf(field, term)',
            draggable: 'tf()',
            description: 'Term frequency; returns the term frequency factor for the given term, using the Similarity for the field. The tf-idf value increases proportionally to the number of times a word appears in the document, but is offset by the frequency of the word in the document, which helps to control for the fact that some words are generally more common than others. See also idf.'
          },
          top: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'top(x)',
            draggable: 'top()',
            description: 'Causes the function query argument to derive its values from the top-level IndexReader containing all parts of an index. For example, the ordinal of a value in a single segment will be different from the ordinal of that same value in the complete index.'
          },
          totaltermfreq: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}, {type: 'T'}]],
            signature: 'totaltermfreq(field, term)',
            draggable: 'totaltermfreq()',
            description: 'Returns the number of times the term appears in the field in the entire index. (Aliases totaltermfreq to ttf.)'
          },
          xor: {
            returnTypes: ['boolean'],
            arguments: [[{type: 'boolean', multiple: true}]],
            signature: 'xor(x, y)',
            draggable: 'xor()',
            description: 'Logical exclusive disjunction, or one or the other but not both.'
          }
        };

        var SOLR_AGGREGATE_FUNCTIONS = {
          avg: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'avg(x)',
            draggable: 'avg()',
            description: 'Average of numeric values.'
          },
          hll: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'hll(x)',
            draggable: 'hll()',
            description: 'The number of unique values using the HyperLogLog algorithm.'
          },
          max: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'max(x)',
            draggable: 'max()',
            description: 'The maximum value.'
          },
          min: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'min(x)',
            draggable: 'min()',
            description: 'The minimum value.'
          },
          percentile: {
            returnTypes: ['T'],
            arguments: [[{type: 'T', multiple: true }]],
            signature: 'percentile(x, y, z, ...)',
            draggable: 'percentile()',
            description: 'Calculates the percentiles.'
          },
          stddev: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'stddev(x)',
            draggable: 'stddev()',
            description: 'Calculates standard deviation (Solr 6.6+).'
          },
          sum: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'sum(x)',
            draggable: 'sum()',
            description: 'The sum of numeric values.'
          },
          sumsq: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'sumsq(x)',
            draggable: 'sumsq()',
            description: 'The sum of squares.'
          },
          unique: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'unique(x)',
            draggable: 'unique()',
            description: 'The number of unique values (count distinct).'
          },
          variance: {
            returnTypes: ['T'],
            arguments: [[{type: 'T'}]],
            signature: 'variance(x)',
            draggable: 'variance()',
            description: 'Calculates variance (Solr 6.6+).'
          }
        };

        var CATEGORIES = {
          ALL: { id: 'all', color: COLORS.ALL, label: AutocompleterGlobals.i18n.category.all },
          FIELD: { id: 'field', weight: 1000, color: COLORS.FIELD, label: AutocompleterGlobals.i18n.category.field, detailsTemplate: 'solr-field' },
          FUNCTION: { id: 'function', weight: 900, color: COLORS.FUNCTION, label: AutocompleterGlobals.i18n.category.function, detailsTemplate: 'udf' }
        };

        var SolrFormulaSuggestions = function (fieldAccessor) {
          var self = this;
          self.entries = ko.observableArray();
          self.fieldAccessor = fieldAccessor;

          self.filtered = ko.pureComputed(function () {
            var result = self.entries();

            if (self.filter()) {
              result = SqlUtils.autocompleteFilter(self.filter(), result);
              huePubSub.publish('hue.ace.autocompleter.match.updated');
            }

            SqlUtils.sortSuggestions(result, self.filter(), self.sortOverride);

            return result;
          });

          self.availableCategories = ko.pureComputed(function () {
            // TODO: Implement autocomplete logic
            return [CATEGORIES.ALL];
          });

          self.loading = ko.observable(false);
          self.filter = ko.observable();
          self.cancelRequests = function () {};
        };

        SolrFormulaSuggestions.prototype.update = function (parseResult) {
          var self = this;
          var syncEntries = [];

          if (parseResult.suggestFields) {
            self.fieldAccessor().forEach(function (field) {
              syncEntries.push({
                category: CATEGORIES.FIELD,
                value: field.name(),
                meta: field.type(),
                weightAdjust: 0,
                popular: ko.observable(false),
                details: field
              })
            });
          }

          if (parseResult.suggestFunctions) {
            Object.keys(SOLR_FUNCTIONS).forEach(function (name) {
              syncEntries.push({
                category: CATEGORIES.FUNCTION,
                value: name + '()',
                meta: SOLR_FUNCTIONS[name].returnTypes.join('|'),
                weightAdjust: 0, // Add when we type aware
                popular: ko.observable(false),
                details: SOLR_FUNCTIONS[name]
              })
            });
          }

          if (parseResult.suggestAggregateFunctions) {
            Object.keys(SOLR_AGGREGATE_FUNCTIONS).forEach(function (name) {
              syncEntries.push({
                category: CATEGORIES.FUNCTION,
                value: name + '()',
                meta: SOLR_AGGREGATE_FUNCTIONS[name].returnTypes.join('|'),
                weightAdjust: 0, // Add when we type aware
                popular: ko.observable(false),
                details: SOLR_AGGREGATE_FUNCTIONS[name]
              })
            });
          }

          self.entries(syncEntries);
        };

        /**
         * @param {Object} options
         * @param {Ace} options.editor
         * @param {Object} options.support
         * @param {function} options.support.fields - The observable/function containing the fields
         * @constructor
         */
        var SolrFormulaAutocompleter = function (options) {
          var self = this;
          self.editor = options.editor();
          self.suggestions = new SolrFormulaSuggestions(options.support.fields);
        };

        SolrFormulaAutocompleter.prototype.autocomplete = function () {
          var self = this;
          var parseResult = solrFormulaParser.autocompleteSolrFormula(self.editor.getTextBeforeCursor(), self.editor.getTextAfterCursor());
          self.suggestions.update(parseResult);
        };

        SolrFormulaAutocompleter.prototype.parse = function (value) {
          return solrFormulaParser.parseSolrFormula(value);
        };

        return SolrFormulaAutocompleter;
      })();

      var SolrQueryAutocompleter = (function () {

        var SAMPLE_LIMIT = 100;

        var CATEGORIES = {
          ALL: { id: 'all', color: COLORS.ALL, label: AutocompleterGlobals.i18n.category.all },
          FIELD: { id: 'field', weight: 1000, color: COLORS.FIELD, label: AutocompleterGlobals.i18n.category.field, detailsTemplate: 'solr-field' },
          KEYWORD: { id: 'keyword', weight: 0, color: COLORS.KEYWORD, label: AutocompleterGlobals.i18n.category.keyword, detailsTemplate: 'keyword' },
          SAMPLE: { id: 'sample', weight: 900, color: COLORS.SAMPLE, label: AutocompleterGlobals.i18n.category.sample, detailsTemplate: 'value' }
        };

        var SolrQuerySuggestions = function (collection, editor) {
          var self = this;
          self.entries = ko.observableArray();
          self.editor = editor;
          self.collection = collection;
          self.apiHelper = ApiHelper.getInstance();
          self.lastNonSampleSuggestions = [];
          self.parseResult = {};

          self.filtered = ko.pureComputed(function () {
            var result = self.entries();

            if (self.filter()) {
              result = SqlUtils.autocompleteFilter(self.filter(), result);
              huePubSub.publish('hue.ace.autocompleter.match.updated');
            }

            SqlUtils.sortSuggestions(result, self.filter(), self.sortOverride);

            return result;
          });

          self.availableCategories = ko.pureComputed(function () {
            // TODO: Implement autocomplete logic
            return [CATEGORIES.ALL];
          });

          self.loading = ko.observable(false);
          self.filter = ko.observable();
          self.cancelRequests = function () {};
        };

        SolrQuerySuggestions.prototype.update = function (parseResult) {
          var self = this;
          self.lastNonSampleSuggestions = [];
          self.parseResult = parseResult;

          if (self.parseResult.suggestFields) {
            self.collection.template.fieldsAttributes().forEach(function (field) {
              self.lastNonSampleSuggestions.push({
                category: CATEGORIES.FIELD,
                value: field.name() + (parseResult.suggestFields.appendColon ? ':' : ''),
                meta: field.type(),
                weightAdjust: 0,
                popular: DEFAULT_POPULAR,
                details: field
              })
            });
          }

          if (self.parseResult.suggestKeywords) {
            parseResult.suggestKeywords.forEach(function (keyword) {
              self.lastNonSampleSuggestions.push({
                category: CATEGORIES.KEYWORD,
                value: keyword,
                meta: AutocompleterGlobals.i18n.meta.keyword,
                weightAdjust: 0,
                popular: DEFAULT_POPULAR,
                details: null
              })
            });
          }

          self.entries(self.lastNonSampleSuggestions);

          if (self.parseResult.suggestValues) {
            var aceUtil = ace.require('ace/autocomplete/util');
            var pos = self.editor.getCursorPosition();
            var partial = aceUtil.retrievePrecedingIdentifier(self.editor.session.getLine(pos.row), pos.column);

            var valuesPromise = self.handleSampleSuggestions(partial);
            self.loading(true);
            valuesPromise.done(function (suggestions) {
              if (suggestions.length) {
                self.entries(self.lastNonSampleSuggestions.concat(suggestions));
              }
              self.loading(false);
            })
          }
        };

        SolrQuerySuggestions.prototype.handleSampleSuggestions = function (prefix) {
          var self = this;
          var promise = $.Deferred();
          var fieldName = self.parseResult.suggestValues.field;
          var hasField = self.collection.template.fieldsAttributes().some(function (field) {
            return field.name() === fieldName;
          });
          if (hasField) {
            self.apiHelper.fetchDashboardTerms({
              collectionName: self.collection.name(),
              fieldName: fieldName,
              prefix: prefix || '',
              silenceErrors: true,
              successCallback: function (result) {
                var sampleSuggestions = [];
                if (result && result.terms && result.terms.length) {
                  var maxCount = 1;
                  for (var i = 0; i < Math.min(SAMPLE_LIMIT, result.terms.length); i++) {
                    var sampleValue = result.terms[i].value;
                    var shouldQuote = !self.parseResult.suggestValues.quotePresent && /[\s\u3000!():"'^+\-\[\]{}~*?/]/.test(sampleValue);
                    if (maxCount < result.terms[i].count) {
                      maxCount = result.terms[i].count;
                    }
                    sampleSuggestions.push({
                      value: shouldQuote ? '"' + sampleValue + '"' : sampleValue,
                      meta: AutocompleterGlobals.i18n.meta.sample,
                      category: CATEGORIES.SAMPLE,
                      popular: DEFAULT_POPULAR,
                      details: result.terms[i]
                    })
                  }
                  sampleSuggestions.forEach(function (sampleSuggestion) {
                    sampleSuggestion.weightAdjust = sampleSuggestion.details.count / maxCount;
                  });
                }
                promise.resolve(sampleSuggestions);
              },
              errorCallback: function () {
                promise.resolve([]);
              }
            });
          } else {
            promise.resolve([]);
          }

          return promise;
        };

        SolrQuerySuggestions.prototype.onPartial = function (partial) {
          var self = this;
          if (self.parseResult.suggestValues) {
            var promise = self.handleSampleSuggestions(partial);
            promise.done(function (suggestions) {
              if (suggestions.length) {
                self.entries(self.lastNonSampleSuggestions.concat(suggestions));
              } else {
                self.entries(self.lastNonSampleSuggestions);
              }
            })
          }
        };

        /**
         * @param {Object} options
         * @param {Ace} options.editor
         * @param {Object} options.support
         * @param {function} options.support.fields - The observable/function containing the fields
         * @param {function} options.support.collection - The observable/function containing the active collection
         * @constructor
         */
        var SolrQueryAutocompleter = function (options) {
          var self = this;
          self.editor = options.editor();
          self.suggestions = new SolrQuerySuggestions(options.support.collection, self.editor);
        };

        SolrQueryAutocompleter.prototype.autocomplete = function () {
          var self = this;
          var parseResult = solrQueryParser.autocompleteSolrQuery(self.editor.getTextBeforeCursor(), self.editor.getTextAfterCursor());
          self.suggestions.update(parseResult);
        };

        SolrQueryAutocompleter.prototype.onPartial = function (partial) {
          var self = this;
          self.suggestions.onPartial(partial);
        };

        return SolrQueryAutocompleter;
      })();

      var AVAILABLE_AUTOCOMPLETERS = {
        'solrFormula': SolrFormulaAutocompleter,
        'solrQuery':  SolrQueryAutocompleter,
        'impalaQuery': SqlAutocompleter3,
        'hiveQuery': SqlAutocompleter3
      };

      var SimpleAceEditor = function (params, element) {
        var $element = $(element);
        var self = this;
        self.value = params.value;
        self.parsedValue = params.parsedValue;
        self.ace = ko.observable();
        self.disposeFunctions = [];

        self.singleLine = !!params.singleLine;

        var aceOptions = params.aceOptions || {};

        if (!$element.attr('id')) {
          $element.attr('id', UUID());
        }

        var editor = ace.edit($element.find('.ace-editor')[0]);
        if (params.mode) {
          editor.getSession().setMode('ace/mode/' + ko.unwrap(params.mode));
        }
        editor.$blockScrolling = Infinity;
        editor.setTheme($.totalStorage('hue.ace.theme') || 'ace/theme/hue');
        self.ace(editor);

        if (params.autocomplete) {
          if (!AVAILABLE_AUTOCOMPLETERS[params.autocomplete.type]) {
            throw new Error('Could not find autocompleter for "' + params.autocomplete.type + '"');
          }

          var sourceType = params.autocomplete.type.substring(0, params.autocomplete.type.indexOf('Query'));

          var autocompleteArgs = {
            editor: function() { return editor },
            snippet: {
              type: function () {
                return sourceType;
              },
              database: function () {
                if (params.autocomplete.support.collection.name()) {
                  var path = params.autocomplete.support.collection.name().split('.');
                  return path.length > 1 ? path[0] : 'default';
                } else {
                  return 'default';
                }
              },
              positionStatement: function () {
                return {
                  location: { first_line: 1, last_line: 1, first_column: 0, last_column: editor.getValue().length }
                }
              }
            },
            fixedPrefix: sourceType !== 'solr' ? function() { return 'SELECT * FROM ' + params.autocomplete.support.collection.name() + ' WHERE '; } : undefined,
            fixedPostfix: sourceType !== 'solr' ? function() { return ' GROUP BY 1;' } : undefined, // By adding group by it will limit it to the filter suggestions
            support: params.autocomplete.support
          };

          self.autocompleter = new AVAILABLE_AUTOCOMPLETERS[params.autocomplete.type](autocompleteArgs);
        } else {
          self.autocompleter = null;
        }

        if (self.singleLine) {
          aceOptions = $.extend(aceOptions, {
            fontSize: '13px',
            maxLines: 1, // make it 1 line
            autoScrollEditorIntoView: true,
            highlightActiveLine: false,
            printMargin: false,
            showGutter: false
          });
        }

        if (params.autocomplete) {
          aceOptions = $.extend(aceOptions, {
            enableLiveAutocompletion: true,
            enableBasicAutocompletion: true
          });
        }

        editor.setOptions(aceOptions);

        if (params.onExec) {
          var bindPrefix = params.singleLine ? 'Enter|Shift-Enter|' : '';
          editor.commands.addCommand({
            name: 'enter',
            bindKey: { win: bindPrefix + 'Ctrl-Enter', mac: bindPrefix + 'Ctrl-Enter|Command-Enter' },
            exec: params.onExec
          });
        }

        if (params.singleLine) {
          editor.renderer.screenToTextCoordinates = function(x, y) {
            var pos = this.pixelToScreenCoordinates(x, y);
            return this.session.screenToDocumentPosition(
                    Math.min(this.session.getScreenLength() - 1, Math.max(pos.row, 0)),
                    Math.max(pos.column, 0)
            );
          };

          if (!params.onExec) {
            editor.commands.bindKey('Enter|Shift-Enter', 'null');
          }

          var pasteListener = editor.on('paste', function(e) {
            e.text = e.text.replace(/[\r\n]+/g, ' ');
          });

          var changeListener = editor.on('change', function (e) {
            if (e.action === 'insert' && (e.start.row !== 0 || e.end.row !== 0)) {
              editor.setValue(editor.getValue().replace(/[\r\n]+/g, ' '));
              editor.clearSelection();
            }
          });

          self.disposeFunctions.push(function () {
            editor.off('paste', pasteListener);
            editor.off('change', changeListener);
          });
        }

        if (self.value()) {
          editor.setValue(self.value());
          editor.clearSelection();
        }

        if (params.placeHolder && ko.unwrap(params.placeHolder)) {
          var placeHolderVisible = false;

          var $placeHolder = $("<div>").text(ko.unwrap(params.placeHolder)).addClass("ace_invisible ace_emptyMessage");

          if (editor.getValue().length === 0) {
            $placeHolder.appendTo(editor.renderer.scroller);
            placeHolderVisible = true;
          }

          var inputListener = editor.on('input', function () {
            if (editor.getValue().length > 0 && placeHolderVisible) {
              $placeHolder.remove();
              placeHolderVisible = false;
            } else if (editor.getValue().length === 0 && !placeHolderVisible) {
              $placeHolder.appendTo(editor.renderer.scroller);
              placeHolderVisible = true;
            }
          });

          self.disposeFunctions.push(function () {
            editor.off('input', inputListener);
          });
        }

        if (params.autocomplete) {
          var AceAutocomplete = ace.require("ace/autocomplete").Autocomplete;

          if (!editor.completer) {
            editor.completer = new AceAutocomplete();
          }
          editor.completer.exactMatch = false;
          editor.useHueAutocompleter = true;

          var afterExecListener = editor.commands.on('afterExec', function (e) {
            if (e.command.name === 'insertstring') {
              var triggerAutocomplete = false;
              if (/\S+\(\)$/.test(e.args)) {
                editor.moveCursorTo(editor.getCursorPosition().row, editor.getCursorPosition().column - 1);
                triggerAutocomplete = true;
              } else if (params.autocomplete.type === 'solrQuery' && /:$/.test(e.args)) {
                triggerAutocomplete = true;
              }

              if (triggerAutocomplete) {
                window.setTimeout(function () {
                  editor.execCommand("startAutocomplete");
                }, 1);
              }
            }
          });

          self.disposeFunctions.push(function () {
            editor.commands.off('afterExec', afterExecListener);
          });
        }

        var parseThrottle = -1;
        var valueUpdateListener = editor.on('input', function () {
          self.value(editor.getValue());
          if (self.parsedValue && self.autocompleter && self.autocompleter.parse) {
            window.clearTimeout(parseThrottle);
            parseThrottle = window.setTimeout(function () {
              var parseResult = self.autocompleter.parse(editor.getValue());
              if (parseResult) {
                self.parsedValue(parseResult.parsedValue)
              } else {
                // TODO: What to do when we can't parse?
                self.parsedValue(editor.getValue());
              }
            }, 200);
          }
        });

        self.disposeFunctions.push(function () {
          editor.off('input', valueUpdateListener);
        });
      };

      SimpleAceEditor.prototype.clear = function () {
        var self = this;
        if (self.ace()) {
          self.ace().setValue('');
        } else {
          self.value('');
        }
      };

      SimpleAceEditor.prototype.dispose = function () {
        var self = this;
        self.disposeFunctions.forEach(function (dispose) {
          dispose();
        })
      };

      ko.components.register('hue-simple-ace-editor', {
        viewModel: {
          createViewModel: function(params, componentInfo) {
            return new SimpleAceEditor(params, componentInfo.element);
          }
        },
        template: {element: 'hue-simple-ace-editor-template'}
      });
    })();
  </script>

  

  <script type="text/html" id="sql-columns-table-template">
    <div class="context-popover-flex">
      <div class="context-popover-flex-header">
        <div class="context-popover-header" style="display:inline-block;">Columns (<span data-bind="text: filteredColumns().length"></span>)</div>
        <div class="context-popover-inline-autocomplete">
          <!-- ko component: {
            name: 'inline-autocomplete',
            params: {
              querySpec: querySpec,
              facets: Object.keys(SQL_COLUMNS_KNOWN_FACET_VALUES),
              knownFacetValues: SQL_COLUMNS_KNOWN_FACET_VALUES,
              autocompleteFromEntries: autocompleteFromEntries
            }
          } --><!-- /ko -->
        </div>
      </div>
      <div class="context-popover-flex-fill sql-columns-table" style="position:relative; height: 100%; overflow-y: auto;">
        <table id="sqlColumnsTable" style="width: 100%" class="table table-condensed table-nowrap">
          <!-- ko if: filteredColumns().length !== 0 -->
          <thead>
          <tr>
            <th width="6%">&nbsp;</th>
            <!-- ko if: typeof filteredColumns()[0].table === 'undefined' -->
            <th width="60%">Name</th>
            <!-- /ko -->
            <!-- ko if: typeof filteredColumns()[0].table !== 'undefined' -->
            <th width="40%">Name</th>
            <th width="20%">Table</th>
            <!-- /ko -->
            <th width="34%">Type</th>
            <th width="6%">&nbsp;</th>
          </tr>
          </thead>
          <!-- /ko -->
          <tbody data-bind="foreachVisible: { data: filteredColumns, minHeight: 29, container: '.sql-columns-table', pubSubDispose: 'context.popover.dispose' }">
          <tr>
            <!-- ko if: typeof selected === 'undefined' -->
            <td data-bind="text: $index()+$indexOffset()+1"></td>
            <!-- /ko -->
            <!-- ko if: typeof selected !== 'undefined' -->
            <td data-bind="toggle: selected" class="center" style="cursor: default;">
              <div class="hueCheckbox fa" data-bind="multiCheck: '#sqlColumnsTable', css: {'fa-check': selected }"></div>
            </td>

            <!-- /ko -->
            <td style="overflow: hidden;">
              <!-- ko if: $parent.scrollToColumns -->
              <a href="javascript:void(0)" class="column-selector" data-bind="click: function() { huePubSub.publish('context.popover.scroll.to.column', name); }" title="Show sample"><span data-bind="text: name"></span> <i class="fa fa-key" data-bind="visible: typeof primary_key !== 'undefined' && primary_key === 'true'"></i></a>
              <!-- /ko -->
              <!-- ko ifnot: $parent.scrollToColumns -->
              <span data-bind="text: name"></span> <i class="fa fa-key" data-bind="visible: typeof primary_key !== 'undefined' && primary_key === 'true'"></i>
              <!-- /ko -->
            </td>
            <!-- ko if: typeof table !== 'undefined' -->
            <td><span data-bind="text: table"></span></td>
            <!-- /ko -->
            <td><span data-bind="text: type, attr: { 'title': extendedType }, tooltip: { placement: 'bottom' }"></span></td>
            <td><i class="snippet-icon fa fa-question-circle" data-bind="visible: comment, attr: { 'title': comment }, tooltip: { placement: 'bottom' }"></i></td>
          </tr>
          </tbody>
        </table>
        <div class="context-popover-empty-columns" data-bind="visible: filteredColumns().length === 0">No columns found</div>
      </div>
    </div>
  </script>

  <script type="text/javascript">
    (function () {

      function SqlColumnsTable(params) {
        var self = this;
        self.columns = params.columns;
        self.scrollToColumns = typeof params.scrollToColumns !== 'undefined' ?  params.scrollToColumns : true;
        self.searchInput = ko.observable('');
        self.searchFocus = ko.observable(false);
        self.querySpec = ko.observable();

        self.filteredColumns = ko.pureComputed(function () {
          if (!self.querySpec() || self.querySpec().query === '') {
            return self.columns;
          }

          var facets = self.querySpec().facets;
          var isFacetMatch = !facets || Object.keys(facets).length === 0 || !facets['type']; // So far only type facet is used for SQL
          var isTextMatch = !self.querySpec().text || self.querySpec().text.length === 0;

          return self.columns.filter(function (column) {
            var match = true;

            if (!isFacetMatch) {
              match = !!facets['type'][column.type];
            }

            if (match && !isTextMatch) {
              match = self.querySpec().text.every(function (text) {
                return column.name.toLowerCase().indexOf(text.toLowerCase()) !== -1 || column.comment.toLowerCase().indexOf(text.toLowerCase()) != -1
              });
            }

            return match;
          })
        });

        self.autocompleteFromEntries = function (nonPartial, partial) {
          var result = [];
          var partialLower = partial.toLowerCase();
          self.columns.forEach(function (column) {
            if (column.name.toLowerCase().indexOf(partialLower) === 0) {
              result.push(nonPartial + partial + column.name.substring(partial.length))
            }
          });
          return result;
        };
      }

      ko.components.register('sql-columns-table', {
        viewModel: SqlColumnsTable,
        template: { element: 'sql-columns-table-template' }
      });
    })();
  </script>


  
  <script type="text/html" id="hue-ace-autocompleter">
    <!-- ko if: active() && (suggestions.filtered().length !== 0 || suggestions.loading()) -->
    <div class="hue-ace-autocompleter" data-bind="style: { top: top() + 'px', left: left() + 'px' }, event: { mousewheel: function (data, event) { event.stopPropagation(); }}">
      <div class="autocompleter-suggestions">
        <!-- ko if: suggestions.availableCategories().length > 1 || suggestions.loading() -->
        <div class="autocompleter-header">
          <!-- ko if: suggestions.availableCategories().length > 1 -->
          <div class="autocompleter-categories" data-bind="foreach: suggestions.availableCategories()">
            <div data-bind="text: label, css: { 'active': $parent.suggestions.activeCategory() === $data }, style: { 'border-color': $parent.suggestions.activeCategory() === $data ? color : 'transparent' }, click: function (data, event) { $parent.suggestions.activeCategory($data); event.stopPropagation(); $parent.editor().focus(); }"></div>
          </div>
          <!-- /ko -->
          <div class="autocompleter-spinner"><!-- ko hueSpinner: { spin: suggestions.loading, size: 'small' } --><!-- /ko --></div>
        </div>
        <!-- /ko -->
        <div class="autocompleter-entries">
          <div data-bind="foreachVisible: { data: suggestions.filtered, minHeight: 25, container: '.autocompleter-entries' }">
            <div class="autocompleter-suggestion" data-bind="click: function () { $parent.selectedIndex($index() + $indexOffset()); $parent.insertSuggestion(); $parent.editor().focus(); },
                css: { 'selected': $index() + $indexOffset() === $parent.selectedIndex() },
                event: { 'mouseover': function () { $parent.hoveredIndex($index() + $indexOffset()); }, 'mouseout': function () { $parent.hoveredIndex(null); } }">
              <div class="autocompleter-suggestion-value">
                <div class="autocompleter-dot" data-bind="style: { 'background-color': category.color }"></div> <span data-bind="matchedText: { suggestion: $data, filter: $parent.suggestions.filter }"></span> <!-- ko if: details && details.primary_key === 'true' --><i class="fa fa-key"></i><!-- /ko -->
              </div>
              <div class="autocompleter-suggestion-meta"><!-- ko if: popular --><i class="fa fa-star-o popular-color"></i> <!-- /ko --><span data-bind="text: meta"></span></div>
            </div>
          </div>
        </div>
      </div>
      <!-- ko if: focusedEntry() && focusedEntry().details -->
      <!-- ko template: { name: 'autocomplete-details-' + focusedEntry().category.detailsTemplate, data: focusedEntry } --><!-- /ko -->
      <!-- /ko -->
    </div>
    <!-- /ko -->
  </script>

  <script type="text/html" id="autocomplete-details-keyword">
  </script>

  <script type="text/html" id="autocomplete-details-solr-field">
  </script>

  <script type="text/html" id="autocomplete-details-udf">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-superscript"></i> <span data-bind="text: details.signature.substring(0, details.signature.indexOf('('));"></span></div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: details.signature"></div>
          <div class="details-description" data-bind="text: details.description"></div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-option">
    <div class="autocompleter-details">
      <div class="autocompleter-header" data-bind="text: value"></div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code">Type: <span data-bind="text: details.type"></span></div>
          <div class="details-code">Default: <span data-bind="text: details.default"></span></div>
          <div class="details-description" data-bind="text: details.description"></div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-database">
  </script>

  <script type="text/html" id="autocomplete-details-table">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw" data-bind="css: { 'fa-eye': details.type.toLowerCase() !== 'table', 'fa-table': details.type.toLowerCase() === 'table' }"></i> <span data-bind="text: details.name"></span></div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-attribute" ><i class="fa fa-database fa-fw"></i> <span data-bind="text: details.database"></span></div>
          <!-- ko if: typeof details.popularity !== 'undefined' -->
          <div class="details-popularity margin-left-5" data-bind="tooltip: { title: 'Popularity ' + details.popularity.relativePopularity + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.popularity.relativePopularity + '%' }"></div>
            </div>
          </div>
          <!-- /ko -->
          <!-- ko if: typeof details.comment !== 'undefined' && details.comment !== null -->
          <div class="details-comment" data-bind="matchedText: { suggestion: $data, filter: $parent.suggestions.filter, isComment: true }"></div>
          <!-- /ko -->
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-column">
    <!-- ko if: typeof details.name !== 'undefined' -->
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-columns"></i> <span data-bind="text: details.name"></span></div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <!-- ko if: typeof details.database !== 'undefined' && typeof details.table !== 'undefined' -->
          <div class="details-attribute" ><i class="fa fa-table fa-fw"></i> <span data-bind="text: details.database"></span>.<span data-bind="text: details.table"></span></div>
          <!-- /ko -->
          <!-- ko if: typeof partitionKey !== 'undefined' && partitionKey -->
          <div class="details-attribute" ><i class="fa fa-key fa-fw"></i> Partition key</div>
          <!-- /ko -->
          <!-- ko if: typeof details.primary_key !== 'undefined' && details.primary_key === 'true' -->
          <div class="details-attribute" ><i class="fa fa-key fa-fw"></i> Primary key</div>
          <!-- /ko -->
          <!-- ko if: typeof details.popularity !== 'undefined' -->
          <br/>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Popularity ' + details.popularity.relativePopularity + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.popularity.relativePopularity + '%' }"></div>
            </div>
          </div>
          <!-- /ko -->
          <!-- ko if: typeof details.comment !== 'undefined' && details.comment !== null -->
          <div class="details-comment" data-bind="matchedText: { suggestion: $data, filter: $parent.suggestions.filter, isComment: true }"></div>
          <!-- /ko -->
        </div>
      </div>
    </div>
    <!-- /ko -->
  </script>

  <script type="text/html" id="autocomplete-details-variable">
  </script>

  <script type="text/html" id="autocomplete-details-hdfs">
    <div class="autocompleter-details">
      <div class="autocompleter-details-contents-inner">
        <div class="autocompleter-header"><i class="fa fa-fw" data-bind="css: { 'fa-folder-o': details.type === 'dir', 'fa-file-o': details.type !== 'dir' }"></i> <span data-bind="text: details.name"></span></div>
        <div class="autocompleter-details-contents" data-bind="template: { name: 'hdfs-details-content', data: { definition: details } }"></div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-join">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-star-o"></i> Popular join</div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: value"></div>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Popularity ' + details.relativePopularity + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.relativePopularity + '%' }"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-join-condition">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-star-o"></i> Popular join condition</div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: value"></div>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Popularity ' + details.relativePopularity + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.relativePopularity + '%' }"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-agg-udf">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-superscript"></i> Popular aggregate - <span data-bind="text: details.aggregateFunction"></span></div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: value"></div>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Popularity ' + details.relativePopularity + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.relativePopularity + '%' }"></div>
            </div>
          </div>
          <div class="details-comment" data-bind="text: details.function.description"></div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-value">
  </script>

  <script type="text/html" id="autocomplete-details-identifier">
  </script>

  <script type="text/html" id="autocomplete-details-cte">
  </script>

  <script type="text/html" id="autocomplete-details-group-by">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-star-o"></i> Popular group by</div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: value"></div>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Workload percent ' + details.workloadPercent + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.workloadPercent + '%' }"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-order-by">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-star-o"></i> Popular order by</div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: value"></div>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Workload percent ' + details.workloadPercent + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.workloadPercent + '%' }"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </script>

  <script type="text/html" id="autocomplete-details-filter">
    <div class="autocompleter-details">
      <div class="autocompleter-header"><i class="fa fa-fw fa-star-o"></i> Popular filter</div>
      <div class="autocompleter-details-contents">
        <div class="autocompleter-details-contents-inner">
          <div class="details-code" data-bind="text: value"></div>
          <div class="details-popularity margin-top-10" data-bind="tooltip: { title: 'Popularity ' + details.relativePopularity + '%', placement: 'bottom' }"><i class="fa fa-fw fa-star-o popular-color"></i>
            <div class="progress">
              <div class="bar" data-bind="style: { 'width': details.relativePopularity + '%' }"></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </script>


  <script type="text/javascript">
    (function () {

      var aceUtil = ace.require('ace/autocomplete/util');
      var HashHandler = ace.require('ace/keyboard/hash_handler').HashHandler;

      ko.bindingHandlers.matchedText = {
        init: function (element, valueAccessor) {
          var options = valueAccessor();
          var $element = $(element);

          var refresh = function () {
            $element.empty();
            var suggestion = options.suggestion;
            var value = options.isComment ? suggestion.details.comment : suggestion.value;

            if (options.filter() && suggestion.matchIndex > -1 && ((!options.isComment && !suggestion.matchComment) || (options.isComment && suggestion.matchComment))) {
              var before = value.substring(0, suggestion.matchIndex);
              var match = value.substring(suggestion.matchIndex, suggestion.matchIndex + suggestion.matchLength);
              var after = value.substring(suggestion.matchIndex + suggestion.matchLength);
              $element.append(document.createTextNode(before));
              $('<b>').text(match).appendTo($element);
              $element.append(document.createTextNode(after));
            } else {
              $element.text(value);
            }
          };

          refresh();

          // matchIndex and matchLength are not observable, hence the pubsub to update
          var updatePubSub = huePubSub.subscribe('hue.ace.autocompleter.match.updated', refresh);
          ko.utils.domNodeDisposal.addDisposeCallback(element, updatePubSub.remove)
        }
      };

      function HueAceAutocompleter (params, element) {
        var self = this;
        self.disposeFunctions = [];
        self.editor = params.editor;
        self.snippet = params.snippet || {};
        self.foreachVisible = ko.observable();

        self.autocompleter = params.autocompleter || new SqlAutocompleter3(params);
        self.suggestions = self.autocompleter.suggestions;

        self.active = ko.observable(false).extend({ rateLimit: 10 }); // to prevent flickering on empty result
        self.top = ko.observable(1);
        self.left = ko.observable(1);

        self.selectedIndex = ko.observable(0);
        self.hoveredIndex = ko.observable(null);

        self.focusedEntry = ko.pureComputed(function () {
          if (self.suggestions.filtered().length > 0) {
            return self.suggestions.filtered()[self.hoveredIndex() || self.selectedIndex()];
          }
          return null;
        });

        self.suggestions.filtered.subscribe(function (newValue) {
          if (self.selectedIndex() > newValue.length - 1) {
            self.selectedIndex(Math.max(0, newValue.length -1));
          }
        });

        self.keyboardHandler = new HashHandler();
        self.keyboardHandler.bindKeys({
          'Up': function(editor, evt) {
            if (self.suggestions.filtered().length <= 1) {
              self.detach();
              self.editor().execCommand('golineup');
            } else if (self.selectedIndex() > 0) {
              self.selectedIndex(self.selectedIndex() - 1);
              self.scrollSelectionIntoView();
            } else {
              self.selectedIndex(self.suggestions.filtered().length - 1);
              self.scrollSelectionIntoView();
            }
          },
          'Down': function(editor) {
            if (self.suggestions.filtered().length <= 1) {
              self.detach();
              self.editor().execCommand('golinedown');
            } else if (self.selectedIndex() < self.suggestions.filtered().length - 1) {
              self.selectedIndex(self.selectedIndex() + 1);
              self.scrollSelectionIntoView();
            } else {
              self.selectedIndex(0);
              self.scrollSelectionIntoView();
            }
          },
          'Ctrl-Up|Ctrl-Home': function() {
            if (self.suggestions.filtered().length <= 1) {
              self.detach();
              self.editor().execCommand('gotostart');
            } else {
              self.selectedIndex(0);
              self.scrollSelectionIntoView();
            }
          },
          'Ctrl-Down|Ctrl-End': function() {
            if (self.suggestions.filtered().length <= 1) {
              self.detach();
              self.editor().execCommand('gotoend');
            } else if (self.suggestions.filtered().length > 0 ) {
              self.selectedIndex(self.suggestions.filtered().length - 1);
              self.scrollSelectionIntoView();
            }
          },
          'Esc': function() {
            self.detach();
          },
          'Return': function() {
            self.insertSuggestion(function () {
              self.editor().execCommand('insertstring', '\n');
            });
          },
          'Shift-Return': function() {
            // TODO: Delete suffix
            self.insertSuggestion();
          },
          'Tab': function() {
            self.insertSuggestion(function () {
              self.editor().execCommand('indent');
            });
          }
        });

        var changeTimeout = -1;

        self.changeListener = function () {
          window.clearTimeout(changeTimeout);
          var cursor = self.editor().selection.lead;
          if (cursor.row !== self.base.row || cursor.column < self.base.column) {
            self.detach();
          } else {
            changeTimeout = window.setTimeout(function () {
              var pos = self.editor().getCursorPosition();
              if (self.active() && self.autocompleter.onPartial) {
                self.autocompleter.onPartial(aceUtil.retrievePrecedingIdentifier(self.editor().session.getLine(pos.row), pos.column));
              }
              self.suggestions.filter(self.editor().session.getTextRange({ start: self.base, end: pos }));
              if (self.suggestions.filtered().length === 0) {
                self.detach();
              }
            }, 200);
          }
        };

        self.mousedownListener = function () {
          self.detach();
        };

        self.mousewheelListener = function () {
          self.detach();
        };

        var closeOnClickOutside = function (event) {
          if ($.contains(document, event.target) && !$.contains(element, event.target)) {
            self.detach();
          }
        };

        var positionInterval = -1;

        var disposeEventHanders = function () {
          window.clearTimeout(changeTimeout);
          window.clearInterval(positionInterval);
          $(document).off('click', closeOnClickOutside);
          self.editor().keyBinding.removeKeyboardHandler(self.keyboardHandler);
          self.editor().off('changeSelection', self.changeListener);
          self.editor().off('mousedown', self.mousedownListener);
          self.editor().off('mousewheel', self.mousewheelListener);
        };

        self.detach = function () {
          self.suggestions.cancelRequests();
          disposeEventHanders();
          if (!self.active()) {
            return;
          }
          self.active(false);
          self.base.detach();
          self.base = null;
        };

        self.attach = function () {
          disposeEventHanders();
          $(document).on('click', closeOnClickOutside);
          self.editor().keyBinding.addKeyboardHandler(self.keyboardHandler);
          self.editor().on('changeSelection', self.changeListener);
          self.editor().on('mousedown', self.mousedownListener);
          self.editor().on('mousewheel', self.mousewheelListener);
          var $container = $(self.editor().container);
          var initialOffset = $container.offset();
          var initialDevicePixelRation = window.devicePixelRatio; // Detect zoom changes
          positionInterval = window.setInterval(function () {
            var newOffset = $container.offset();
            if (initialDevicePixelRation !== window.devicePixelRatio) {
              initialOffset = newOffset;
              initialDevicePixelRation = window.devicePixelRatio;
            } else if (Math.abs(newOffset.top - initialOffset.top) > 20 || Math.abs(newOffset.left - initialOffset.left) > 20) {
              self.detach();
            }
          }, 300);
        };

        var autocompleterDoneSub = huePubSub.subscribe('hue.ace.autocompleter.done', function () {
          window.setTimeout(function () {
            if (self.active() && self.suggestions.filtered().length === 0 && !self.suggestions.loading()) {
              self.detach();
            }
          }, 0);
        });

        self.disposeFunctions.push(function () {
          autocompleterDoneSub.remove();
        });

        var autocompleterShowSub = huePubSub.subscribe('hue.ace.autocompleter.show', function (data) {
          if (data.editor !== self.editor()) {
            return;
          }
          var session = self.editor().getSession();
          var pos = self.editor().getCursorPosition();
          var line = session.getLine(pos.row);
          var prefix = aceUtil.retrievePrecedingIdentifier(line, pos.column);
          var newBase = session.doc.createAnchor(pos.row, pos.column - prefix.length);
          self.top(data.position.top + data.lineHeight + 3);
          self.left(data.position.left);
          var newAutocomp = false;
          if (!self.active() || (!self.base || newBase.column !== self.base.column || newBase.row !== self.base.row)) {
            self.autocompleter.autocomplete();
            newAutocomp = true;
          }
          newBase.$insertRight = true;
          self.base = newBase;
          self.suggestions.filter(prefix);
          self.active(true);
          self.selectedIndex(0);
          if (newAutocomp) {
            self.attach();
          }
        });

        self.disposeFunctions.push(function () {
          autocompleterShowSub.remove();
        });

        var autocompleterHideSub = huePubSub.subscribe('hue.ace.autocompleter.hide', function () {
          self.detach();
        });

        self.disposeFunctions.push(function () {
          autocompleterHideSub.remove();
        });
      }

      HueAceAutocompleter.prototype.dispose = function () {
        var self = this;
        self.disposeFunctions.forEach(function (disposeFunction) {
          disposeFunction();
        });
        self.detach();
      };

      HueAceAutocompleter.prototype.insertSuggestion = function (emptyCallback) {
        var self = this;
        if (self.suggestions.filtered().length === 0) {
          self.detach();
          if (emptyCallback) {
            emptyCallback();
          }
          return;
        }
        var selectedSuggestion = self.suggestions.filtered()[self.selectedIndex()];
        var valueToInsert = selectedSuggestion.value;
        if (selectedSuggestion.popular() && selectedSuggestion.category) {
          hueAnalytics.convert('editor', 'popularAutocomplete/' + self.suggestions.filtered()[self.selectedIndex()].category.id)
        }
        // Not always the case as we also match in comments
        if (valueToInsert.toLowerCase() === self.suggestions.filter().toLowerCase()) {
          // Close the autocompleter when the user has typed a complete suggestion
          self.detach();
          return;
        }
        if (self.suggestions.filter()) {
          var ranges = self.editor().selection.getAllRanges();
          for (var i = 0, range; range = ranges[i]; i++) {
            range.start.column -= self.suggestions.filter().length;
            self.editor().session.remove(range);
          }
        }
        // TODO: Only replace when editing identifiers (using parse locations)
        // TODO: Move cursor handling for '? FROM tbl' here
        self.editor().execCommand('insertstring', valueToInsert);
        self.editor().renderer.scrollCursorIntoView();
        self.detach();
      };

      HueAceAutocompleter.prototype.scrollSelectionIntoView = function () {
        var self = this;
        if (self.foreachVisible()) {
          self.foreachVisible().scrollToIndex(self.selectedIndex());
        }
      };

      ko.components.register('hueAceAutocompleter', {
        viewModel: { createViewModel: function (params, componentInfo) {
          return new HueAceAutocompleter(params, componentInfo.element);
        }},
        template: { element: 'hue-ace-autocompleter' }
      });
    })();
  </script>


  
  <script type="text/javascript">
    Dropzone.autoDiscover = false;
    moment.locale(window.navigator.userLanguage || window.navigator.language);
    localeFormat = function (time) {
      var mTime = time;
      if (typeof ko !== 'undefined' && ko.isObservable(time)) {
        mTime = time();
      }
      try {
        mTime = new Date(mTime);
        if (moment(mTime).isValid()) {
          return moment.utc(mTime).format("L LT");
        }
      }
      catch (e) {
        return mTime;
      }
      return mTime;
    };

    // Catches HTTP 502 errors
    function xhrOnreadystatechange() {
      if (this.readyState === 4 && this.status === 502) {
        $.jHueNotify.error($('<span>').html(this.responseText).text());
      }
      if (this._onreadystatechange) {
        return this._onreadystatechange.apply(this, arguments);
      }
    }

    var xhrSend = XMLHttpRequest.prototype.send;
    XMLHttpRequest.prototype.send = function (data) {
      // Add CSRF Token to all XHR Requests
      this.setRequestHeader('X-CSRFToken', window.CSRF_TOKEN);

      if (this.onreadystatechange) {
        this._onreadystatechange = this.onreadystatechange;
      }
      this.onreadystatechange = xhrOnreadystatechange;
      return xhrSend.apply(this, arguments);
    };
    XMLHttpRequest.prototype.isAugmented = true;

    $.fn.dataTableExt.sErrMode = "throw";

    var IDLE_SESSION_TIMEOUT = -1;

    $(document).ready(function () {
      // forces IE's ajax calls not to cache
      if ($.browser.msie) {
        $.ajaxSetup({ cache: false });
      }

      // prevents framebusting and clickjacking
      if (self == top){
        $("body").css({
          'display': 'block',
          'visibility': 'visible'
        });
      }
      else {
        top.location = self.location;
      }


      $(".submitter").keydown(function (e) {
        if (e.keyCode == 13) {
          $(this).closest("form").submit();
        }
      }).change(function () {
          $(this).closest("form").submit();
      });

      $(".navbar .nav-tooltip").tooltip({
        delay: 0,
        placement: "bottom"
      });

      $("[rel='tooltip']").tooltip({
        delay: 0,
        placement: "bottom"
      });

      $("[data-rel='navigator-tooltip']").tooltip({
        delay: 0,
        placement: "bottom"
      });

      if (!IS_HUE_4) {
        var JB_CHECK_INTERVAL_IN_MILLIS = 30000;
        var checkJobBrowserStatusIdx = window.setTimeout(checkJobBrowserStatus, 10);
        var lastJobBrowserRequest = null;

        function checkJobBrowserStatus() {
          if (lastJobBrowserRequest !== null && lastJobBrowserRequest.readyState < 4) {
            return;
          }
          window.clearTimeout(checkJobBrowserStatusIdx);
          lastJobBrowserRequest = $.post("/jobbrowser/jobs/", {
                "format": "json",
                "state": "running",
                "user": "vega"
              },
              function (data) {
                if (data != null && data.jobs != null) {
                  huePubSub.publish('jobbrowser.data', data.jobs);
                  if (data.jobs.length > 0) {
                    $("#jobBrowserCount").show().text(data.jobs.length);
                  } else {
                    $("#jobBrowserCount").hide();
                  }
                }
                checkJobBrowserStatusIdx = window.setTimeout(checkJobBrowserStatus, JB_CHECK_INTERVAL_IN_MILLIS);
              }).fail(function () {
            window.clearTimeout(checkJobBrowserStatusIdx);
          });
        }

        huePubSub.subscribe('check.job.browser', checkJobBrowserStatus);
      }

      function openDropdown(which, timeout){
        var _this = which;
        var _timeout = timeout!=null?timeout:800;
        if ($(".navigator").find("ul.dropdown-menu:visible").length > 0) {
          _timeout = 10;
        }
        window.clearTimeout(closeTimeout);
        openTimeout = window.setTimeout(function () {
          $(".navigator li.open").removeClass("open");
          $(".navigator .nav-pills li.dropdown > ul.dropdown-menu").hide();
          $("[data-rel='navigator-tooltip']").tooltip("hide");
          _this.find("ul.dropdown-menu:eq(0)").show();
        }, _timeout);
      }

      var openTimeout, closeTimeout;
      $(".navigator ul.nav li.dropdown").on("click", function(){
        openDropdown($(this), 10);
      });
      $(".navigator ul.nav li.dropdown").hover(function () {
        openDropdown($(this));
      },
      function () {
        window.clearTimeout(openTimeout);
        closeTimeout = window.setTimeout(function () {
          $(".navigator li.open").removeClass("open");
          $(".navigator li a:focus").blur();
          $(".navigator").find("ul.dropdown-menu").hide();
        }, 1000);
      });

      function showSubmenu(menuElement) {
        $(".tooltip").remove();
        menuElement.data("lastShown", (new Date()).getTime())
        menuElement.show();
      }

      $(".navigator ul.nav li.dropdown-submenu a").on("mouseenter", function () {
        showSubmenu($(this).siblings(".dropdown-menu"));
      });

      $(".navigator ul.nav li.dropdown-submenu a img").on("mouseenter", function () {
        showSubmenu($(this).parent().siblings(".dropdown-menu"));
      });

      $(".navigator ul.nav li.dropdown-submenu").on("mouseenter", function () {
        $(this).siblings().find(".dropdown-menu").hide();
        showSubmenu($(this).find(".dropdown-menu"));
      });

      $(".navigator ul.nav li.dropdown-submenu").on("mouseleave", function () {
        var _lastShown = $(this).find(".dropdown-menu").data("lastShown");
        if (_lastShown == null || (new Date()).getTime() - _lastShown > 300) {
          var _el = $(this);
          _el.hideTimeout = window.setTimeout(function () {
            window.clearTimeout(_el.hideTimeout);
            _el.find(".dropdown-menu").hide();
          }, 50);
        }
      });

      window.hueDebug = {
        viewModel: function (element) {
          if (typeof element !== 'undefined' && typeof element === 'string') {
            element = $(element)[0];
          }
          return ko.dataFor(element || document.body);
        }
      }
    });
  </script>



  <script src="/static/desktop/js/apiHelper.97011d74931d.js"></script>
  <script src="/static/desktop/js/clusterConfig.837343a52f27.js"></script>

  <script type="text/javascript">
    $(document).ready(function () {
      huePubSub.subscribe('get.current.app.name', function () {
        var appName = '';
        if ('True' === 'True' && location.href.indexOf('metastore') !== -1) {
          appName = 'metastore';
        } else if (location.href.indexOf('editor') !== -1) {
          appName = 'editor'
        }
        huePubSub.publish('set.current.app.name', appName);
      });

      huePubSub.subscribe('open.link', function (href) {
        location.href = href;
      });
    });
  </script>

</head>
<body>


  <svg version="1.1" xmlns="http://www.w3.org/2000/svg" style="display:none;">

    <symbol id="hi-empty" viewBox="0 0 640 640">
    </symbol>

    <symbol id="hi-adls" viewBox="0 0 640 640">
      <path d="M542.2,54.52c-13-11.14-31.29-21-54.21-29.26C442.87,9,383.21,0,320,0S197.13,9,152,25.26c-22.93,8.28-41.17,18.12-54.21,29.26C87,63.74,74.13,78.93,74.13,99V541c0,20,12.87,35.24,23.67,44.45,13,11.14,31.29,21,54.21,29.26C197.13,631,256.79,640,320,640s122.87-9,168-25.26c22.93-8.28,41.17-18.12,54.21-29.26,10.8-9.22,23.67-24.41,23.67-44.45V99C565.87,78.93,553,63.74,542.2,54.52ZM106.05,149.81c12.11,8.54,27.51,16.22,46,22.88,45.12,16.29,104.78,25.26,168,25.26s122.87-9,168-25.26c18.44-6.66,33.84-14.33,46-22.88V367.13c-16.11,15.9-38.31,23.74-61.57,21.58-25.4-2.36-48.18-16.14-60.93-36.86l-13.31-21.63-13.72,21.37c-15.57,24.25-40.54,37.93-68.66,37.55-27.52-.38-52.21-14.28-66-37.18L236.49,330l-13.85,21.54c-13.82,21.5-35.36,35.1-59.08,37.3a74.87,74.87,0,0,1-57.51-19.55Zm56.8-94.52C204.58,40.22,260.39,31.92,320,31.92s115.42,8.3,157.15,23.37,56.8,32.48,56.8,43.69-14.92,28.57-56.8,43.69S379.61,166,320,166s-115.42-8.3-157.15-23.37-56.8-32.48-56.8-43.69S121,70.41,162.85,55.29Zm314.3,529.43c-41.73,15.07-97.54,23.37-157.15,23.37s-115.42-8.3-157.15-23.37-56.8-32.48-56.8-43.69V408.24a105.82,105.82,0,0,0,50.58,12.89q4.92,0,9.89-.46c26.43-2.46,50.81-14.7,69.33-34.36C256,408,284.41,420.63,315.32,421.06h1.55a111.11,111.11,0,0,0,80.9-35,113.6,113.6,0,0,0,71.65,34.39,109.43,109.43,0,0,0,64.52-13.64V541C533.95,552.23,519,569.59,477.15,584.71Z"></path>
      <ellipse cx="320" cy="98.97" rx="178.78" ry="47.62"></ellipse>
    </symbol>

    <symbol id="hi-dashboard" viewBox="0 0 640 640">
      <path d="M404.71,252.92c56-63.64,111.37-126.54,170-193-25.83,0-47-.37-68.13.19-14.23.37-25.27-3.56-26.58-19.65-1.12-12.92,9.36-20.4,27.52-20.4,35.19,0,70.38-.19,105.57,0,20.59.19,26.77,6,26.77,26.58.19,36.31-.19,72.81.19,109.13.19,14-5.43,24.33-19.84,24.33s-20.4-9.92-20.22-24.15c.19-19.47,0-38.93,0-63.27-8.61,9.36-14.6,15.54-20.22,22.09-50.54,57.28-100.89,114.74-151.43,171.83-15.91,18-22.84,18.53-41.93,3.37-50.91-40.43-101.64-81-153.49-122.6-4.87,4.31-9.73,8.24-14.41,12.73Q131.14,262.37,43.82,344.45c-4.31,4.12-8.42,8.42-13.29,12-9.55,6.93-21,7.11-26.58-2.81C.21,347.07,2.08,336.4,3.76,328c.94-4.31,7.11-7.67,11-11.42q97.71-92.09,195.42-184c17.41-16.28,22.65-16.47,41.18-1.68l137,109.5C393.66,244.49,398.9,248.42,404.71,252.92Z"></path>
      <rect y="440.45" width="119.71" height="179.57"></rect>
      <rect x="172.66" y="323.04" width="119.71" height="296.98"></rect>
      <rect x="345.32" y="382.9" width="119.71" height="237.12"></rect>
      <rect x="517.99" y="258.58" width="119.71" height="361.44"></rect>
    </symbol>

    <symbol id="hi-documents" viewBox="0 0 640 640">
      <path d="M106.54,602.44A36.4,36.4,0,0,1,71,574.3L1,278.19a36.54,36.54,0,0,1,35.56-44.94h47.5V189a33.29,33.29,0,0,1,33.25-33.25H217.62l22.15-91.63a34.55,34.55,0,0,1,41.57-25.59L492.62,88.43a34.76,34.76,0,0,1,21.77,16l30.48,51.29h58.6A36.58,36.58,0,0,1,640,192.24V564.59a36.3,36.3,0,0,1-10.7,25.84l-1.9,1.9A34.31,34.31,0,0,1,603,602.44Zm476.33-41L530.36,339.24H259a36.41,36.41,0,0,1-35.56-28.13l-8.71-36.84H42.21l67.87,287.16ZM561.14,310.37a36.53,36.53,0,0,1,8.32,16L599,451.31V196.72H569.24l6.22,10.46a34.4,34.4,0,0,1,3.92,25.61Zm-39.27-12.15,9-38.1L449,240.79a34.61,34.61,0,0,1-25.69-41.59l19-80.51L278.15,79.88,239.44,240a36.67,36.67,0,0,1,14.42,21.43l8.71,36.84Zm-323-65,8.83-36.53H125.06v36.53ZM534.71,218.9l-52.86-89-17.12,72.42Z"></path>
    </symbol>

    <symbol id="hi-editor" viewBox="0 0 640 640">
      <path d="M187.83,477.92,0,361.92V283.3L187.83,166.73v86.39L75.91,322.6l111.92,69.49Z"></path>
      <path d="M452.17,166.73,640,282.72v78.62L452.17,477.92V391.53L564.09,322,452.17,252.55Z"></path>
      <path d="M289.12,568H215.41L350.8,72H425Z"></path>
    </symbol>

    <symbol id="hi-file" viewBox="0 0 640 640">
      <path d="M574.3,143.67L445.74,12.32A41.24,41.24,0,0,0,416.44,0H95A41,41,0,0,0,54,41V599a41,41,0,0,0,41,41H545a41,41,0,0,0,41-41V172.35A40.78,40.78,0,0,0,574.3,143.67ZM422.87,34.7L551.43,166a9,9,0,0,1,2.57,6.3V181H413.51a8.19,8.19,0,0,1-8.51-8.51V32h11.44A9.05,9.05,0,0,1,422.87,34.7ZM545,608H95a9,9,0,0,1-9-9V41a9,9,0,0,1,9-9H373V172.49A40.21,40.21,0,0,0,413.51,213H554V599A9,9,0,0,1,545,608Z"></path>
    </symbol>

    <symbol id="hi-file-hive" viewBox="0 0 640 640">
      <path d="M488.17,380.68c10.67-3.25,11-6,14.64-8.84l-9.15,4.45c-14.89,4.7-15.78.51-21.34-1.08C476,379.4,480.38,382.52,488.17,380.68Z"></path>
      <path d="M385.48,415c-4.89,3.48-5.63,6.8-5.52,9.69,8.13-8,7.82-8,19.69-7.94C398.2,416.22,385.48,414.58,385.48,415Z"></path>
      <path d="M347.84,249.46c-15.18-4.87-37.52-3.75-57.72-4.42,17.4,4.43,43.18,4.54,55.74,12.31,0.19,0.68-.32,1.13-1.08,1.5-10.82-2.77-18.51,3.94-23,6.21,12.48-2.54,16,.44,25.46,1.24,10.26,3.92,16.29,22.76,23.06,28.08C364,280.69,360,260.29,347.84,249.46Z"></path>
      <polygon points="458.35 334 451.9 334 459.03 335.87 458.35 334"></polygon>
      <path d="M414.34,327a61.66,61.66,0,0,0-19.63.52c-2.64,3.55-2.83,7.16-4,10.5C398.61,329.32,403.49,328.25,414.34,327Z"></path>
      <path d="M419.74,364.86c2.17-.31-0.58-10.13-1.32-10.35,1.85-.63,3.65-1.1,5.52-1.56-13.9-3.64-21.93-1.49-34,6.26,0,0,9.18-1.34,9-.48-0.67,3.19.8,9.38,1.32,9.87l-5.16,4.21c10.81-5.43,22.19-4.34,33.73-5.17C428.87,367.63,419.15,364.94,419.74,364.86Zm-10.86,1.56a8.91,8.91,0,0,0-6.54,2c-1.17,1.16-2-5.73-1.11-6.81,1.12-1.32,6.32-1.61,7.35.43A8,8,0,0,1,408.88,366.42Z"></path>
      <path d="M574.3,143.67L445.74,12.32A41.24,41.24,0,0,0,416.44,0H95A41,41,0,0,0,54,41V599a41,41,0,0,0,41,41H545a41,41,0,0,0,41-41V172.35A40.78,40.78,0,0,0,574.3,143.67ZM450.6,317.06l7.06-.47c2.12,12.58,11.34,32.87,12.38,34.12,2.4,3.87,0,8.33-.06,12.64,0,1.43-.16,2.8-0.28,4.14l-0.44-1.43-2,1c-0.29-6-6.71-5.54-12.12-5.59l-4.44-1.08c1.35,1.25,5.52,1.15,3.84,3.85-1.42.76-2.07,4-2.88,6.74l-2.4.12c4.24,1.66,8.18,3.11,12.84,5.05l2.35,0.36-2.35,5.9-3.19-1.29-0.11-2.24c-5.62-2.24-16.47-3.19-16.86-2.73-4,3.92-6.92,8.67-10.08,13.23,4.33-3.38,7.61-8.46,13.44-9.87,0.47-.05,6.27,1.08,9.41,1.61-2,.42-5.3.56-5.81,1.27-4.43,5.5-7.7,12.17-11.52,18.29,5.28-5.44,6.89-11,15.84-16.3,0.74-.48,6.2-0.37,8.87,1-0.85,3-2.77,6.64-4.31,10.05-2.19,5.17-6.38,9.95-9.6,14.92,10.07-12.25,7.2-7.75,13.92-15.64,2.82-6.69,8-21,8.41-21.14,0.58,1.87,1.49.47,6.31,0.37,2.41,0,5.23-1.18,7.26-1l0.18,1c6.21-.63,15-8.43,18.52-5,2,2,2.52,7.32,2.47,8.3C504,390,491.7,445,456.72,454.07c-23.25,6-53-15.45-66.73-36.88-0.65,11.08-12.52,24.4-13.41,25.6-1.31,2.06-1.53,4.41,1.23,9a27.13,27.13,0,0,1-6.45-10.34c-2.24-4.68-13.07-19.84-13.07-19.84l-1.27.91c-15.27-15.69-6.58-29.79-1.21-39-12.32-3.11-28.63-9.73-30.88-18.42-3.61-28.13-1.78-37.06,1.84-51.51-16.05,3.38-34.45,7.36-49.55,12.47L277,324.55c-9,2.23-42.15,15.9-58.19,19a39.44,39.44,0,0,1-12.09,0c-5.16-.59-19.31-0.67-25.65-0.83-4.1-4.84-9.18-27.27-13.78-33-2.63-3.3-11.33-12.22-11.33-12.22-15-14.92-24.17-25.78-28.68-40.51-7-22.93,5.4-39.28,15.38-49.58,37.58-1.13,58.67,12.83,85.83,24l1.29-2.55c-8.9-6-41.8-23.76-52.15-25.89a3.4,3.4,0,0,1-1.9-.76c11.62-7.13,17.54-15,23.22-22.73,4.66-6.32,10.3-16.44,23.61-17.61,40.07,6.37,66.94,21.11,88.53,33,2.91,1.62,21.78,11.68,34.44,18.15s27.92,18.25,33.76,26.33c8.59,16.47,20.72,61.43,20.83,61.65l2.69-.88c-0.91-4.21-1.8-9.06-2.07-11.68,7.45,2.93,11.15,2,14.93,1.57-7.29-3.52-15.53-8.79-16.64-12.66-2.47-8.62-9.69-43.89-11.4-45.61-3.83-4.85-25.34-21.33-33.91-25.4,0,0,8.35-9.88,19.69-15.6a28.92,28.92,0,0,1,3.14-1.34,40.1,40.1,0,0,0,33.24,23.57,30.29,30.29,0,0,0,2.22,4.64c7,7.67,9.45,13.09,10.44,15.48,3.38,8.71,6.09,17.41,8.57,26.12-0.83-9.08-3.92-18.8-5.18-27.48-0.47-2.63-5.26-11.19-10.56-18.59h18.15a173.35,173.35,0,0,1,16.2,24.94c2.69,5.27,2.8,8.32,2.45,14.38-0.33,5.71-12,36.74-12,39.61C438.62,303,450.35,316.49,450.6,317.06Zm7.66,55.25h0l0.1-.1a0.31,0.31,0,0,1-.1.1c-0.8.34-5.91,0-6.11-1Zm-50.7,75.45c-4.8,4.51-9.94,7.35-14.85,8.28,0,0-2.34-1.76-2.62-2a19.45,19.45,0,0,0,6.83.27c1.58-.17,3.27-1.57,4.59-3.85,1.46-3.14,2.63-4.46,3.88-5.46Zm-148.2,46.41c-9.39-7.3-16-21.79-20.12-32,23.88,14,60.71,28.63,92.48,28.38,2.65,4.63,6.06,10.08,10.47,16.69C304.4,512.59,272.25,501,259.36,494.17Zm90.39,24.3c0.65,1.88,9.72,11.34,7.56,15.88-2.93,6.15-32.72,4.68-56.6-9.13C316.93,525.05,333.76,525.33,349.75,518.46ZM230.2,424.9c-1.66-12.94-2-26.31.55-39.31,9.67,22.67,47.46,61.49,98.21,68.24-2.62,7.05-3.11,12.72-3.44,18.81C260,458.44,250,440.86,230.2,424.9Zm102.49,19.91c-18.15-9.11-33.38-19.93-48.59-30.87-24.44-17.85-30.94-39.07-35.33-66.54a9,9,0,0,1,2.46-2.53c7.83-5.29,18.86-10,26.19-11.15,5,22,24.62,60.88,41.17,88.75,6.13,7.78,8.27,11.51,16.76,16.1C334.56,440.25,333.62,442.57,332.69,444.81ZM554,599a9,9,0,0,1-9,9H95a9,9,0,0,1-9-9V41a9,9,0,0,1,9-9H373V172.49a41.52,41.52,0,0,0,1.13,9.65,40.43,40.43,0,0,0-9,4c-4,2.46-16.93,14.45-20,16.53-12.2-6.15-19.31-10.84-22.24-13.06-3.72-2.81-32.95-15.16-33.85-15.87-7.95-6.26-46.25-20.75-75.34-19.66L213.29,153c-14.24,8.74-32.22,33.25-41.85,39.81-1.73,1.49-6.82,3.91-13.2,4.28a65.85,65.85,0,0,1-10.61-.09c-5.57-2.84-11.1-1.14-16.47,5.33-5.08,7.32-11.89,21.65-14.87,31.37-5.87,23.71,9.27,43.4,23.13,58,11.76,11.49,19.25,19.27,24.37,30.44,2.28,4.24,10,24.44,10,24.44,1.1,2.2,1.6,2.45,4.62,3.11,18,3.84,38.93,3.1,56.41-2.89,3.38-.86,6.53-1.86,9.6-3-14.81,17.34-23.4,43.32-20.06,79.73,1.23,13.42,9,45.24,22.06,63.73,13.64,19.26,45.17,45.29,89.32,55.21,7,1.11,16.84.41,24.81-1.71,21.37-5.69,64.59-21.68,65-21.82l-0.6-2.77c-0.38,0-38.74,3.18-56.05,1.45-7.38-.17-11.37-2.94-11.55-5.14-1.29-.16-3.95-0.27-3.24-0.44,2.22-.59,4.82-1.49,4.82-1.86v-2.84c0-1.45-8.42-1.45-9.16-3.31-1.62-4-1.16-8.52-3.14-12.47,9.62,0.35,21.53.81,28.54-7.1-2.86.35-11.78,1.46-18.92,0.54-2.69-.35-13.15-4-13.51-4.19-2.75-5.72-5.11-12-5.21-19.25a39.71,39.71,0,0,0,17,10.88l1.23,0.45c3.11,0.07,11.95,4.28,19.4,1.08a74.34,74.34,0,0,0,8.74-.6v-2.77l-9.67,2.29c-13-1.66-22-11.75-24.32-14.86-0.47-.61-7.39-11.09-7.39-11.09,1.45-2.69,2.12-2.75,4.05-2.77,0,0,10.38,1.73,16,.57,2.78,7.55,6,14.76,11.89,18.39,0.35,0.22,25.82,11.08,38.15-10.07,24.47,17.15,53.19,12.74,69.37-.83,26-30,35.45-77.48,32.38-82.64-4.74-8-9.16-12-12.88-11.14-6.18,1.42-17.21,8.16-25,8.84,0.8-9.77,0-15.48-.78-16.9-3-6.59-13-24.57-13.95-27.6-0.59-1.89-2.88-4.17-2.88-6.51,0-1.32,0-3.56,0-3.63,0.05-2.14-10.81-9.38-10.88-10.76,2.15-21.73,12.7-46,13.14-46.78,0.92-1.64,1.78-3.21,1.72-5.07,0.17-3.06-7.51-20.51-18.81-37H554V599Zm0-418H413.51a8.19,8.19,0,0,1-8.51-8.51V32h11.44a9.05,9.05,0,0,1,6.43,2.7L551.43,166a9,9,0,0,1,2.57,6.3V181Z"></path>
    </symbol>

    <symbol id="hi-file-impala" viewBox="0 0 640 640">
      <path d="M272.7,332.16c1,6.57,1.65,18.7,2.15,25.37,15.5-1.71,25.67-12.08,24.69-26.27a91.91,91.91,0,0,0-4.92-24.34c-8.87-24.83-25.23-44.8-43.12-63.65-2.08-2.19-4.47-4.8-5.06-7.57-4.63-21.54-5.64-43.29-4.3-65.34,2.45-40.15,14.59-62.19,32.42-92.35-44.47,44.56-60.63,96.08-55.77,156.9,0.85,10.64,2.79,18.31,5.43,21C248.32,280.06,268.3,304,272.7,332.16Z"></path>
      <path d="M259,403.37c5.19,1.76,7.22-.26,10.09,2.84,2.61,2.82,1.08,12.24,8.23,13.71,5.11,1.05,8.33-1,10.09,3.43,3.43,8.68,11,28.68,14.5,37.32,1.64-.29-4.63-37.4-12-51.46C284.94,396.51,268.85,395.93,259,403.37Z"></path>
      <path d="M219.63,303.94c0,24.69,18.83,45.38,38,57.6C248.21,342.72,238.34,319.12,219.63,303.94Z"></path>
      <path d="M574.24,143.67L445.65,12.32A41.31,41.31,0,0,0,416.32,0H94.88A41,41,0,0,0,54,41V599a41,41,0,0,0,40.88,41h450A41.15,41.15,0,0,0,586,599V172.35A40.83,40.83,0,0,0,574.24,143.67ZM554,599a9.11,9.11,0,0,1-9.12,9h-450A8.91,8.91,0,0,1,86,599V41a8.91,8.91,0,0,1,8.88-9H373V91.23A165.33,165.33,0,0,0,360.58,78.1c4.72,7.55,8.84,14.83,12.42,21.9v72.49a40.21,40.21,0,0,0,20.05,35.12c-0.09,1-.17,1.93-0.27,2.9-1.52,15.33-3.38,28.09-5.42,30-18.72,14.76-35.12,39.83-43.94,56.21-12.29,21.69-12.93,47.4,1.93,68.88,2,3,3.64,6.33,5.49,9.48,5.31,9,7.32,22.28-1.58,35-18.34,26.22-19.94,49.75-15.11,80.83,1,6.36.93,10.75,1.83,15.41,0.27,1.38-1.39,2.15-4.57,5.22-3.71,3.58-6.92,12-13.57,5-3-3.57-10.63-10.43-11.9-9.67-0.9,9.19,4.42,11,9.71,13.77,5.6,2.89,8.65,7.62,7.36,14.13-1.17,5.93-5.77,6.72-10.84,6.47-0.83,0-7.13-1.46-6.32,0,5.29,2.17,10,4.83,16.82,5.62,1.27,5.41,2.75,8.65-.15,15.21,14-4.51,22.65-11.82,27.58-23.66,14.45-32.32,19.49-77.77,21.35-112.63,0.36-6.8,5-6.32,6.66-10.1,1.41-3.19,1.21-8.92,5.11-10.12,3.57-1.1,2.53-.85,7.1-3.53-15.44-10.72-16.39-21.26-3.07-35.49,2.49-2.66,5-5.64,8.1-7.31,21.71-11.65,30.12-49,25.46-75.77-12.15,16.26-18,26.83-26.21,37.2a273.67,273.67,0,0,1-22.23,24.68c-2.09,2.11-6.95,3.19-9.74,2.28-1.89-.61-3.83-5.83-3.26-8.44,2.1-9.58,4.07-19.47,8.21-28.25,9.6-20.35,25.06-36.38,41.14-51.81,2.43-2.33,3.87-2.5,4.55-5.75A199.36,199.36,0,0,0,417.42,213H554V599Zm0-418H413.39a8.1,8.1,0,0,1-8.39-8.51V32h11.32a9.05,9.05,0,0,1,6.43,2.7L551.37,166a9,9,0,0,1,2.63,6.3V181Z"></path>
    </symbol>

    <symbol id="hi-file-job-designer" viewBox="0 0 640 640">
      <path d="M556.4,150.5L427.9,18.8C420.3,10.9,409.7,6,398.7,6H77.3C54.7,6,36,25.3,36,47.9v558C36,628.5,54.7,646,77.3,646h450c22.6,0,40.7-17.5,40.7-40.1V179.2A40.6,40.6,0,0,0,556.4,150.5ZM405.2,41.1L533.6,172.7a9.3,9.3,0,0,1,2.4,6.5V187H395.8c-5,0-8.8-2.7-8.8-7.6V38h11.7A9.5,9.5,0,0,1,405.2,41.1ZM527.3,614H77.3c-5,0-9.3-3.2-9.3-8.1V47.9c0-5,4.3-9.9,9.3-9.9H355V179.4c0,22.6,18.2,39.6,40.8,39.6H536V605.9C536,610.8,532.2,614,527.3,614Z"></path>
      <path d="M455,249.5L443.5,261A180.2,180.2,0,0,0,190,514.5L178.5,526a5,5,0,0,0,0,7.1l26.6,26.6a5,5,0,0,0,7.1,0L488.7,283.2a5,5,0,0,0,0-7.1l-26.6-26.6A5,5,0,0,0,455,249.5ZM184,453.2l28.2-7.6a5,5,0,0,0,3.6-6.2l-3.9-14.6a5,5,0,0,0-6.2-3.6l-28.2,7.5a157,157,0,0,1,0-55.6l28.2,7.5a5,5,0,0,0,6.2-3.6l3.9-14.6a5,5,0,0,0-3.6-6.2L184,348.8a153.8,153.8,0,0,1,27.7-47.9l20.7,20.7a5,5,0,0,0,7.1,0l10.7-10.7a5,5,0,0,0,0-7.1L229.5,283A153.8,153.8,0,0,1,277.8,255l7.6,28.2a5,5,0,0,0,6.2,3.6l14.6-3.9a5,5,0,0,0,3.6-6.2l-7.5-28.2a157,157,0,0,1,55.6,0l-7.5,28.2a5,5,0,0,0,3.6,6.2l14.6,3.9a5,5,0,0,0,6.2-3.6l7.6-28.2a153.6,153.6,0,0,1,43.4,24L208,496.5A153.6,153.6,0,0,1,184,453.2Z"></path>
    </symbol>

    <symbol id="hi-file-notebook" viewBox="0 0 640 640">
      <path d="M574.3,143.7L445.7,12.3A41.2,41.2,0,0,0,416.4,0H95A41,41,0,0,0,54,41V599a41,41,0,0,0,41,41H545a41,41,0,0,0,41-41V172.3A40.8,40.8,0,0,0,574.3,143.7ZM422.9,34.7L551.4,166a8.9,8.9,0,0,1,2.6,6.3V181H413.5a8.2,8.2,0,0,1-8.5-8.5V32h11.4A9.1,9.1,0,0,1,422.9,34.7ZM545,608H95a9,9,0,0,1-9-9V41a9,9,0,0,1,9-9H373V172.5A40.2,40.2,0,0,0,413.5,213H554V599A9,9,0,0,1,545,608Z"></path>
      <rect x="153" y="247" width="328" height="34" rx="4" ry="4"></rect>
      <rect x="153" y="328" width="328" height="34" rx="4" ry="4"></rect>
      <rect x="153" y="409" width="328" height="34" rx="4" ry="4"></rect>
      <rect x="153" y="490" width="328" height="34" rx="4" ry="4"></rect>
    </symbol>

    <symbol id="hi-file-oozie-bundle" viewBox="0 0 640 640">
      <path d="M574.5,144.1L446,12.5A41.3,41.3,0,0,0,416.8,0H95.3C72.7,0,54,18.8,54,41.4v558C54,622,72.7,640,95.3,640h450A40.4,40.4,0,0,0,586,599.4V172.8A40.6,40.6,0,0,0,574.5,144.1ZM423.2,34.9L551.6,166.4a9.1,9.1,0,0,1,2.4,6.4V181H413.9c-5,0-8.9-3.1-8.9-8.1V32h11.8A9.3,9.3,0,0,1,423.2,34.9ZM545.3,608H95.3c-5,0-9.3-3.6-9.3-8.6V41.4A9.7,9.7,0,0,1,95.3,32H373V172.9c0,22.6,18.2,40.1,40.9,40.1H554V599.4A8.4,8.4,0,0,1,545.3,608Z"></path>
      <path d="M320,546.8c-92.8,0-168.3-75.5-168.3-168.3S227.2,210.1,320,210.1s168.3,75.5,168.3,168.3S412.8,546.8,320,546.8Zm0-304.6c-75.2,0-136.3,61.2-136.3,136.3S244.8,514.8,320,514.8s136.3-61.2,136.3-136.3S395.2,242.1,320,242.1Z"></path>
      <path d="M265.9,286.5h28.3c-0.2-.4,0,65.5,0,65.5s12.6-20.1,38.7-20.1c44.2,0,60,36,60,68.2,0,39.4-21,67-55.3,67S292.6,446,292.6,446v17.6H265.9V286.5Zm98.7,113.1c0-32.1-18.8-45.4-35.5-45.4-32.4,0-36,31.7-36,45.4,0,23.9,11.4,45.1,36,45.1C363.3,444.8,364.6,405.2,364.6,399.6Z"></path>
    </symbol>

    <symbol id="hi-file-oozie-coordinator" viewBox="0 0 640 640">
      <path d="M574.5,143.7L446,12.3A41,41,0,0,0,416.8,0H95.3C72.7,0,54,18.4,54,41V599c0,22.6,18.7,41,41.3,41h450A40.8,40.8,0,0,0,586,599V172.3A40.6,40.6,0,0,0,574.5,143.7ZM423.2,34.7L551.6,166a8.8,8.8,0,0,1,2.4,6.3V181H413.9c-5,0-8.9-3.5-8.9-8.5V32h11.8A9.1,9.1,0,0,1,423.2,34.7ZM545.3,608H95.3a9.3,9.3,0,0,1-9.3-9V41a9.3,9.3,0,0,1,9.3-9H373V172.5A40.5,40.5,0,0,0,413.9,213H554V599A8.7,8.7,0,0,1,545.3,608Z"></path>
      <path d="M320,546.3c-92.8,0-168.3-75.5-168.3-168.3S227.2,209.7,320,209.7,488.3,285.2,488.3,378,412.8,546.3,320,546.3Zm0-304.6c-75.2,0-136.3,61.2-136.3,136.3S244.8,514.3,320,514.3,456.3,453.2,456.3,378,395.2,241.7,320,241.7Z"></path>
      <path d="M352.5,359.8c-1.2-7.9-6.6-24.1-29.3-24.1-25.1,0-35.2,20.6-35.2,46.6,0,5.3,1.3,43.9,34,43.9,23.3,0,29.2-20,30.5-29.3h28.3c-2.9,22.9-18,51.6-58.8,51.6-45.5,0-62.2-35-62.2-66.2s14.7-68.9,63.2-68.9c43,0,57.8,29.4,57.8,46.4H352.5Z"></path>
    </symbol>

    <symbol id="hi-file-oozie-workflow" viewBox="0 0 640 640">
      <path d="M574.5,143.7L446,12.3A41,41,0,0,0,416.8,0H95.3C72.7,0,54,18.4,54,41V599c0,22.6,18.7,41,41.3,41h450A40.8,40.8,0,0,0,586,599V172.3A40.6,40.6,0,0,0,574.5,143.7ZM423.2,34.7L551.6,166a8.8,8.8,0,0,1,2.4,6.3V181H413.9c-5,0-8.9-3.5-8.9-8.5V32h11.8A9.1,9.1,0,0,1,423.2,34.7ZM545.3,608H95.3a9.3,9.3,0,0,1-9.3-9V41a9.3,9.3,0,0,1,9.3-9H373V172.5A40.5,40.5,0,0,0,413.9,213H554V599A8.7,8.7,0,0,1,545.3,608Z"></path>
      <path d="M320,546.3c-92.8,0-168.3-75.5-168.3-168.3S227.2,209.7,320,209.7,488.3,285.2,488.3,378,412.8,546.3,320,546.3Zm0-304.6c-75.2,0-136.3,61.2-136.3,136.3S244.8,514.3,320,514.3,456.3,453.2,456.3,378,395.2,241.7,320,241.7Z"></path>
      <path d="M226.8,320.9h30l25,95.7h0.5l24.1-95.7h28.5l23.1,95.7h0.5l26-95.7h28.8L373.1,449.2h-29l-23.8-95.2h-0.5l-23.6,95.2H266.4Z"></path>
    </symbol>

    <symbol id="hi-file-pig" viewBox="0 0 640 640">
      <path d="M574.3,143.7L445.7,12.3A41.2,41.2,0,0,0,416.4,0H95A41,41,0,0,0,54,41V599a41,41,0,0,0,41,41H545a41,41,0,0,0,41-41V172.3A40.8,40.8,0,0,0,574.3,143.7Zm-347.5,170a20.8,20.8,0,0,0,28.1-22.8l-7.8-46.3a185,185,0,0,1,145.7,0l-7.8,46.3a20.8,20.8,0,0,0,28.1,22.8l45.6-18c18.2,24,28.8,52.9,28.8,84,0,82.8-75.2,150.1-167.5,150.1S152.5,462.5,152.5,379.7c0-31.1,10.6-60,28.8-84Zm-80-58.7,66.3-60.3,15.5,92.6Zm264.5,32.2L423.8,213h23.3l46.1,41.9ZM554,599a9,9,0,0,1-9,9H95a9,9,0,0,1-9-9V41a9,9,0,0,1,9-9H373V172.5a40.2,40.2,0,0,0,25.6,37.7l-1.4,8.6a211.9,211.9,0,0,0-154.3,0l-6.1-36.6a20.8,20.8,0,0,0-34.5-11.9l-77.8,70.8a20.8,20.8,0,0,0,6.4,34.7l26.1,10.3A170.2,170.2,0,0,0,142.5,311a161.4,161.4,0,0,0,0,137.4,174.9,174.9,0,0,0,41.6,55.7c36.4,32.8,84.6,50.9,135.9,50.9s99.5-18.1,135.9-50.9a174.9,174.9,0,0,0,41.6-55.7,161.4,161.4,0,0,0,0-137.4,170.2,170.2,0,0,0-14.4-24.9l26.1-10.3a20.8,20.8,0,0,0,6.4-34.7L484.7,213H554V599Zm0-418H413.5a8.2,8.2,0,0,1-8.5-8.5V32h11.4a9.1,9.1,0,0,1,6.4,2.7L551.4,166a8.9,8.9,0,0,1,2.6,6.3V181Z"></path>
      <path d="M247.7,379.4a18.1,18.1,0,1,0-18.1-18.1A18.1,18.1,0,0,0,247.7,379.4Z"></path>
      <path d="M392.3,379.4a18.1,18.1,0,1,0-18.1-18.1A18.1,18.1,0,0,0,392.3,379.4Z"></path>
      <path d="M251.6,479.5c18.4,11.1,42.7,17.1,68.4,17.1s50-6.1,68.4-17.1,30.8-28.2,30.8-45.9-10.9-34-30.8-45.9-42.7-17.1-68.4-17.1-50,6.1-68.4,17.1-30.8,28.2-30.8,45.9S231.7,467.6,251.6,479.5ZM320,388.3c44.1,0,81.4,20.7,81.4,45.3s-37.3,45.3-81.4,45.3-81.4-20.7-81.4-45.3S275.9,388.3,320,388.3Z"></path>
      <path d="M292.9,451.7c5,0,9-8.1,9-18.1s-4-18.1-9-18.1-9,8.1-9,18.1S287.9,451.7,292.9,451.7Z"></path>
      <path d="M347.1,451.7c5,0,9-8.1,9-18.1s-4-18.1-9-18.1-9,8.1-9,18.1S342.1,451.7,347.1,451.7Z"></path>
    </symbol>

    <symbol id="hi-file-search" viewBox="0 0 640 640">
      <path d="M574.3,143.7L445.7,12.3A41.2,41.2,0,0,0,416.4,0H95A41,41,0,0,0,54,41V599a41,41,0,0,0,41,41H545a41,41,0,0,0,41-41V172.3A40.8,40.8,0,0,0,574.3,143.7ZM422.9,34.7L551.4,166a8.9,8.9,0,0,1,2.6,6.3V181H413.5a8.2,8.2,0,0,1-8.5-8.5V32h11.4A9.1,9.1,0,0,1,422.9,34.7ZM545,608H95a9,9,0,0,1-9-9V41a9,9,0,0,1,9-9H373V172.5A40.2,40.2,0,0,0,413.5,213H554V599A9,9,0,0,1,545,608Z"></path>
      <path d="M470.2,480l-56.3-56.3a134,134,0,0,0,25.7-82.1c-1.6-71.8-59.9-130.2-131.7-131.7-76.7-1.7-139.4,61-137.7,137.7,1.6,72,60.3,130.4,132.3,131.7a134,134,0,0,0,82.5-26.5l56.2,56.2a13.7,13.7,0,0,0,19.3,0l9.7-9.7A13.7,13.7,0,0,0,470.2,480ZM305,448.3A103.8,103.8,0,1,1,408.7,344.5,103.9,103.9,0,0,1,305,448.3Z"></path>
    </symbol>

    <symbol id="hi-folder" viewBox="0 0 640 640">
      <path d="M599,586H41A41,41,0,0,1,0,545V95A41,41,0,0,1,41,54H246a41,41,0,0,1,41,41v58l312,0a41,41,0,0,1,41,41V545A41,41,0,0,1,599,586ZM41,86a9,9,0,0,0-9,9V545a9,9,0,0,0,9,9H599a9,9,0,0,0,9-9V194a9,9,0,0,0-9-9H287a32,32,0,0,1-32-32V95a9,9,0,0,0-9-9H41Z"></path>
    </symbol>

    <symbol id="hi-hbase" viewBox="0 0 640 640">
      <path d="M367,368.67c-16.45.34-32.91.1-49.36.1v.65c-15.55,0-31.11,0-46.66,0-16.52-.07-29.35,7.31-39.35,19.88-14.42,18.13-25.73,39.07-47.66,50.21-2.42,1.23-4.37,6-4.11,9,.16,1.79,4.77,3.79,7.69,4.64a163.76,163.76,0,0,0,78.94,3.31c37.52-7.56,71.36-22.37,95.73-53.34,5.59-7.1,9.43-15.85,12.75-24.37C377.34,372.69,374.76,368.51,367,368.67ZM58.51,321.38c-3.88-5.34-8.11-11-12.19-16.81-3.21-4.55-6.23-5.58-10.86-1.29C16,321.29,9,366.91,22.14,389.73Zm522.56,9.74c-9.43-1.85-10.34-5.76-14.44-10.84-21.4-26.53-37.3-51.12-65.38-78.58-45.19-47.13-101.35-71.49-166.9-75.12-35.56-2-70.62,1-105.55,6.36-16.8,2.55-27.81-4-35.93-17.47-3.07-5.09-6.34-10.48-7.6-16.16-4.67-21-8.73-42.07-12.61-63.19-1.4-7.64-3.57-9.42-10.67-6.28a40.18,40.18,0,0,0-22.92,26.22c-3,10.23-5.7,21.07-5.54,31.6.37,24.21,2.22,48.42,4.17,72.57,1.09,13.44-.81,25.09-10.12,35.8-10.58,12.18-19.68,25.64-29.51,38.49C62.58,321,33,370.7,13.88,426.17,4.14,454.37-3.34,482.91,1.53,513.26,3.19,523.56,4,534,5.25,544.37c1.47,12.48,18.59,27.47,31.15,27.26,14.42-.24,26.92-6.24,37.83-14.76,19.25-15,40.52-26.36,62.28-37.11,25.92-12.8,49.72-28.77,69.82-49.83,1.48-1.55,2.66-3.39,4.17-5.35-10.25-2.47-19.68-4.3-28.82-7.07-10-3-11.93-10.48-5.22-18.57,2.25-2.71,5.45-4.61,8.1-7,7.7-7,15.9-13.54,22.85-21.22,6.6-7.29,11.64-16,17.77-23.7,11-13.89,25.3-21.72,43.26-22.08,10.78-.21,21.57-.38,32.35-.14,8.52.19,15.33-2.55,22-8,16.41-13.45,30.41-26.92,48-38.74,27.88-15.59,48.79-22.26,75.6-19.57,48.14,4.84,84.07,30.32,113.17,67.22a7.49,7.49,0,0,1,1.78,5.2c-.2,1.95-3,1-3,1S535,347.42,524,336c-6,8.38-9.16,14.13-14.14,20.22-6.79,8.32-15.13,15.55-21,24.45-9.46,14.45-5.43,36,7.36,44.4,1.09-1.67,2.89-3.25,3.14-5,1-6.93,1.55-12.15,9.77-12.69,3.73-.24,1.07-4.59,8.14-5,2.21.17,2,2,4.24,1.87,1.78-.26,2.58-3.33,4.5-4.16,3.82-1.66,8.9-1.45,12.67-1.3,7,.29,10.31-3.38,11.21-7.85.6-2.95.87-5.26,2.32-10.44,3.34,13.34,12,17.36,22.79,17.27,5.09,0,10.33-1.11,15.24-.23,12,.76,14.08,3.45,20.82,6,10.39,3.94,19.83,8.7,23.42,21,1.06-.33,3.14-.59,4.25-2.72s1.08-5,1.17-8.62C641,372.3,620.31,343.33,581.07,331.12ZM158.89,395c9.45-.15,10.87,2,6.9,10.25a17.12,17.12,0,0,0-1.93,5.83c-1.26,15.95-9.1,27.36-22.93,35.25-7,4-13.12,9.51-20.16,13.41-3.86,2.14-9.87,4.42-12.94,2.83-1.65-.85-2.58-3.1-3.36-5.66a29.51,29.51,0,0,1-.69-15.17c5.85-25.08,29.74-46.33,55.12-46.75ZM102,480.32c.1-2.13,9.92-10.58,12.41-10.18s2.34,2.16,2.35,4.71-9.83,11.37-14.57,8.42c-1.11-.95-.47-2.55-.2-3Zm93-8.53c-12.49,11.55-26.42,20.8-40,29.35-10.59,6.67-22.13,11.81-32.88,18.25-16.37,9.8-32.45,20.09-48.62,30.23-12,7.56-23.76,15.95-39.26,15.55.24-1.29.21-2.2.46-2.29C51,557.16,63,546.35,74.14,533.25c6.72-7.91,16.79-13.37,26.11-18.58,19.5-10.89,35.31-25.26,47.35-44.14,8.59-13.47,8.93-12.94,23.17-6.71,7.33,3.2,13.61,4.34,24.18,8ZM424.47,280.64c18.69-.39,27.25,1.78,40.51,4.88,10.5,2.55,17.84,9.57,22.13,15.24-16.72-5.12-25.18-7.87-41.73-9.34-35.57-4.25-66.79,6.86-94.18,29.23-11.58,9.46-23.06,19.18-33.5,29.85-6.17,6.3-6.29,8-21.12,7,13.11-20.29,25.07-40.85,36.78-61.21,37.88-65.85,133.08-54.57,165.8-16.39a38.82,38.82,0,0,1,3.36,5.69s-31-16.56-53.73-16.56c-13.71,0-17.15,1-25.63,2.47-2.24.38-6,2.32-5.95,5.6s4.72,3.15,7.25,3.51ZM624.15,400.4c-9.94-15.39-25-12.06-39-12.12-4.19,0-8.38.22-12.57.37-7.08.26-13-1.4-16.13-8.68-.79-1.87-2.79-4.77-4.44-5.06a3.53,3.53,0,0,0-2.44,2.11c-6.38,13.57-18.76,15.72-31.62,16-7.43.16-13.52,1.19-17.18,8.57-.71,1.43-4.33,3.08-5,2.57-1.59-1.27-3.53-4.16-3-5.61,1.9-5.53,3.91-11.33,7.33-16,8.67-11.76,18.12-22.95,28.06-35.37,4.68,4.94,9.82,10.48,15.11,15.88,4.17,4.27,8.07,9,13,12.26,2.58,1.7,8.17,2,10.3.25,1.84-1.47,2.07-7.37.64-10-2.93-5.45-7.55-10-11.28-15-2.78-3.77-5.26-7.75-8.58-12.68,33.48-6,83.2,34.67,76.85,62.55Z"></path>
    </symbol>

    <symbol id="hi-hive" viewBox="0 0 640 640">
      <path d="M549.2,358.9h0c0.8-.6,2.4-6.1,1.9-7.8-1.1-3.9-8.8-3.1-8.8-3.1-1.9,1.1-3.5,7.2-2.9,9.2"></path>
      <path d="M571.7,363.5c5.9,6.7,12.9,11.7,25.4,8.8,17.1-5.2,17.7-9.5,23.4-14.1l-14.6,7.1C582,372.8,580.6,366.1,571.7,363.5Z"></path>
      <path d="M432.8,427.1c-7.8,5.6-9,10.9-8.8,15.5,13-12.8,12.5-12.8,31.5-12.7C453.1,429.1,432.8,426.5,432.8,427.1Z"></path>
      <path d="M280.2,155.2c27.8,7.1,69.1,7.3,89.2,19.7,0.3,1.1-.5,1.8-1.7,2.4-17.3-4.4-29.6,6.3-36.9,9.9,20-4.1,25.5.7,40.7,2,16.4,6.3,26.1,36.4,36.9,44.9-10-21.9-16.3-54.5-35.9-71.9C348.3,154.5,312.5,156.3,280.2,155.2Z"></path>
      <path d="M467.6,88.8c0.5,2.5,2.4,13.7,7.6,22.3,11.1,12.3,15.1,20.9,16.7,24.8,5.4,13.9,9.7,27.9,13.7,41.8-1.3-14.5-6.3-30.1-8.3-44C496.2,127.4,479.3,99.4,467.6,88.8Z"></path>
      <polygon points="549.4 297 539 297 550.5 300 549.4 297"></polygon>
      <path d="M478.9,286.4c-8.1-1.1-21-1.4-31.4.8-4.2,5.7-4.5,11.5-6.4,16.8C453.8,290.1,461.6,288.4,478.9,286.4Z"></path>
      <path d="M485.5,330.4c3-1,5.8-1.8,8.8-2.5-22.2-5.8-35.1-2.4-54.4,10,0,0,14.7-2.1,14.4-.8-1.1,5.1,1.3,15,2.1,15.8l-8.3,6.7c17.3-8.7,35.5-6.9,54-8.3,0,0-15.5-4.3-14.6-4.4C491.1,346.5,486.7,330.7,485.5,330.4Zm-15.3,19.1c-4.2-.2-7.8.8-10.5,3.2s-3.2-9.2-1.8-10.9,10.1-2.6,11.8.7A12.8,12.8,0,0,1,470.2,349.5Z"></path>
      <path d="M618.5,336.7c-9.9,2.3-27.5,13.1-40,14.1,1.3-15.6-.1-24.8-1.3-27-4.8-10.5-20.8-39.3-22.3-44.2-0.9-3-4.6-6.7-4.6-10.4,0-2.1,0-5.7,0-5.8,0.1-3.4-17.3-15-17.4-17.2,3.4-34.8,20.3-73.6,21-74.9s2.9-5.1,2.8-8.1c0.5-8.9-40.4-93.6-82.1-107.8-7.5-2.5-46.2-11.6-74.4,5.6-6.5,3.9-27.1,23.1-32.1,26.5-19.5-9.8-30.9-17.3-35.6-20.9s-52.7-24.3-54.2-25.4c-12.7-10-74-33.2-120.5-31.5L157.3,8c-22.8,14-51.5,53.2-67,63.7-2.8,2.4-10.9,6.3-21.1,6.8-1.1,0-10.2.7-17-.1-8.9-4.5-17.8-1.8-26.4,8.5s-19,34.6-23.8,50.2c-9.4,37.9,14.8,69.4,37,92.7,18.8,18.4,30.8,30.8,39,48.7,3.6,6.8,16,39.1,16,39.1,1.8,3.5,2.6,3.9,7.4,5,28.8,6.1,62.3,5,90.3-4.6,5.4-1.4,10.4-3,15.4-4.7C183.4,341,169.7,382.6,175,440.9c2,21.5,14.3,72.4,35.3,102s72.3,72.5,142.9,88.3c11.2,1.8,26.9.7,39.7-2.7,34.2-9.1,103.3-34.7,104-34.9l-1-4.4c-0.6.1-62,5.1-89.7,2.3-11.8-.3-18.2-4.7-18.5-8.2-2.1-.3-6.5-0.4-5.4-0.7,3.5-.9,7.5-2.4,7.5-3v-4.5c0-2.3-13.3-2.3-14.5-5.3-2.6-6.4-1.7-13.6-4.9-19.9,15.4,0.6,34.5,1.3,45.7-11.4-4.6.6-18.8,2.3-30.2,0.9-4.3-.6-21-6.4-21.6-6.7-4.4-9.1-8.2-19.3-8.3-30.8,8,8.4,17,14.2,27.2,17.4l2,0.7c5,0.1,18.9,6.8,30.8,1.7a114,114,0,0,0,13.8-1v-4.4l-15.3,3.7c-20.8-2.7-35.1-18.8-38.8-23.8-0.7-1-11.8-17.7-11.8-17.7,2.3-4.3,3.4-4.4,6.5-4.4,0,0,16.6,2.8,25.6.9,4.4,12.1,9.6,23.6,19,29.4,0.6,0.3,41.3,17.7,61-16.1,39.2,27.4,85.1,20.4,111-1.3,41.5-48,56.7-124,51.8-132.2C631.5,341.8,624.5,335.4,618.5,336.7ZM184.3,443c-2.7-20.7-3.1-42.1.9-62.9,15.5,36.3,75.9,98.4,157.1,109.2-4.2,11.3-5,20.3-5.5,30.1C232,496.7,216,468.6,184.3,443ZM214,319c1.3-1.7,2.7-3.5,3.9-4,12.5-8.5,30.2-15.9,41.9-17.8,8,35.1,39.4,97.4,65.9,142,9.8,12.4,13.2,18.4,26.8,25.8-1.3,2.7-2.8,6.4-4.2,10-29-14.6-53.4-31.9-77.7-49.4C231.5,396.9,221.1,363,214,319ZM375.6,592.7c1,3,15.6,18.1,12.1,25.4-4.7,9.8-52.3,7.5-90.6-14.6C323.1,603.3,350,603.7,375.6,592.7Zm-176.8-90c38.2,22.3,97.1,45.8,148,45.4,4.2,7.4,9.7,16.1,16.7,26.7-60.4,8.5-111.9-10-132.5-21C215.9,542.2,205.4,519,198.8,502.7Zm245.5-9.9-4.2-3.1a31.1,31.1,0,0,0,10.9.4c2.5-.3,5.2-2.5,7.3-6.2s4.2-7.1,6.2-8.7l3.5,4.3C460.4,486.8,452.2,491.4,444.3,492.8Zm102.4-3.1c-37.2,9.6-84.8-24.7-106.8-59-1,17.7-20,39-21.5,41s-2.4,7.1,2,14.4c-4.2-4-7.7-9.5-10.3-16.5s-20.9-31.7-20.9-31.7l-2,1.5c-24.4-25.1-10.5-47.7-1.9-62.4-19.7-5-45.8-15.6-49.4-29.5-5.8-45-2.8-59.3,2.9-82.4-25.7,5.4-55.1,11.8-79.3,19.9l-0.4-2.4c-14.4,3.6-67.4,25.4-93.1,30.3-7,1.3-13.7.6-19.3,0-8.2-.9-30.9-1.1-41-1.3-6.6-7.8-14.7-43.6-22-52.9C79.4,253.3,65.5,239,65.5,239c-24-23.9-38.7-41.3-45.9-64.8-11.2-36.7,8.6-62.9,24.6-79.3,60.1-1.8,93.9,20.5,137.3,38.4l2.1-4.1c-14.2-9.6-66.9-38-83.4-41.4a5.4,5.4,0,0,1-3-1.2c18.6-11.4,28.1-24.1,37.2-36.4,7.5-10.1,16.5-26.3,37.8-28.2,64.1,10.2,107.1,33.8,141.7,52.7,4.7,2.6,34.8,18.7,55.1,29s44.7,29.2,54,42.1c13.7,26.3,33.2,98.3,33.3,98.6l4.3-1.4c-1.4-6.7-2.9-14.5-3.3-18.7,11.9,4.7,17.8,3.2,23.9,2.5-11.7-5.6-24.8-14.1-26.6-20.3-4-13.8-15.5-70.2-18.2-73-6.1-7.8-40.5-34.1-54.3-40.6,0,0,13.4-15.8,31.5-25s35.5-3.5,44.2,0c4.8,1.9,8.7,3.9,12.2-.5l-2.3-2.6c1,0.3,7.7,2.1,8.2,2.4,11.2,8.8,41.1,41.2,59.5,76.4,4.3,8.4,4.5,13.3,3.9,23s-19.3,58.8-19.2,63.4c-2.4,17.8,16.4,39.3,16.8,40.2l11.3-.7c3.4,20.1,18.2,52.6,19.8,54.6,3.8,6.2,0,13.3-.1,20.2,0,2.3-.3,4.5-0.4,6.6l-0.7-2.3-3.3,1.6c-0.5-9.6-10.7-8.9-19.4-9l-7.1-1.7c2.2,2,8.8,1.8,6.1,6.2-2.3,1.2-3.3,6.4-4.6,10.8l-3.8.2c6.8,2.7,13.1,5,20.6,8.1l3.8,0.6-3.8,9.4-5.1-2.1-0.2-3.6c-9-3.6-26.3-5.1-27-4.4-6.4,6.3-11.1,13.9-16.1,21.2,6.9-5.4,12.2-13.5,21.5-15.8,0.7-.1,10,1.7,15.1,2.6-3.2.7-8.5,0.9-9.3,2-7.1,8.8-12.3,19.5-18.4,29.3,8.4-8.7,11-17.6,25.3-26.1,1.2-.8,9.9-0.6,14.2,1.5-1.4,4.8-4.4,10.6-6.9,16.1-3.5,8.3-10.2,15.9-15.4,23.9,16.1-19.6,11.5-12.4,22.3-25,4.5-10.7,12.7-33.6,13.4-33.8,0.9,3,2.4.8,10.1,0.6,3.9,0,8.4-1.9,11.6-1.7l0.3,1.6c9.9-1,24-13.5,29.6-8,3.3,3.2,4,11.7,4,13.3C622.4,387.1,602.7,475.2,546.8,489.7Zm2.4-130.8c-1.3.5-9.4,0.1-9.8-1.6s1-8.1,2.9-9.2c0,0,7.7-.8,8.8,3.1C551.6,352.8,549.8,358.6,549.2,358.9Z"></path>
    </symbol>

    <symbol id="hi-impala" viewBox="0 0 640 640">
      <path d="M373.7,0.1c33.5,31.7,60.2,78.2,70.3,127.7,6.8,33.1,6.4,70.8-.7,103.9-0.9,4.3-2.8,4.5-6,7.6-21.3,20.4-41.7,41.6-54.4,68.5-5.5,11.6-8.1,24.7-10.9,37.4-0.8,3.5,1.8,10.4,4.3,11.2s10.1-.2,12.9-3c11.4-11.5,19.4-20,29.4-32.6s18.6-27.7,34.7-49.2c6.2,35.4-5,84.8-33.7,100.2-4.1,2.2-7.4,6.2-10.7,9.7-17.6,18.8-16.4,32.8,4.1,46.9-6,3.5-4.7,3.2-9.4,4.7s-4.9,9.2-6.8,13.4-8.3,4.4-8.8,13.3c-2.5,46.1-9.1,106.2-28.2,148.9-6.5,15.7-17.9,25.3-36.5,31.3,3.8-8.7,1.9-13,.2-20.1-9-1-15.2-4.6-22.2-7.4-1.1-1.9,7.3,0,8.4,0,6.7,0.3,12.8-.7,14.3-8.6s-2.3-14.9-9.7-18.7-14-6.1-12.8-18.2c1.7-1,11.8,8.1,15.7,12.8,8.8,9.3,13-1.8,17.9-6.6s6.4-5.1,6-6.9c-1.2-6.2-1.1-12-2.4-20.4-6.4-41.1-4.3-72.2,20-106.9,11.8-16.8,9.1-34.4,2.1-46.3-2.5-4.2-4.6-8.5-7.3-12.5-19.7-28.4-18.8-62.4-2.6-91.1,11.7-21.7,33.3-54.8,58.1-74.3,2.7-2.5,5.2-19.4,7.2-39.6C421.8,119.2,416,67.8,373.7.1Z"></path>
      <path d="M259.9,0c-23.6,39.9-39.6,69-42.9,122.1-1.8,29.2-.4,57.9,5.7,86.4,0.8,3.7,3.9,7.1,6.7,10,23.7,24.9,45.3,51.3,57,84.2a121.6,121.6,0,0,1,6.5,32.2c1.3,18.8-12.2,32.5-32.6,34.7-0.7-8.8-1.5-24.9-2.8-33.5-5.8-37.3-32.2-68.9-64.1-100.9-3.5-3.5-6.1-13.6-7.2-27.7C179.8,127.1,201.1,58.9,259.9,0Z"></path>
      <path d="M239.3,430.2c13-9.8,34.3-9.1,40.9,7.7,9.7,18.6,18,67.7,15.9,68-4.7-11.4-14.6-37.9-19.2-49.3-2.3-5.9-6.6-3.1-13.3-4.5-9.5-1.9-7.4-14.4-10.9-18.1S246.2,432.6,239.3,430.2Z"></path>
      <path d="M237.5,374.9c-25.3-16.2-50.2-43.5-50.2-76.2C212,318.8,225.1,350,237.5,374.9Z"></path>
    </symbol>

    <symbol id="hi-job-designer" viewBox="0 0 640 640">
      <path d="M595.65,152.73,403.42,466.31l-69.55-48.53,192.2-313.6Zm-25.2-120.9-29.6,48.23,69.58,48.55L640,80.35ZM325.86,446.63l-33,119.06,89-80Z"></path>
      <ellipse cx="64.08" cy="79.77" rx="64.08" ry="64.18"></ellipse>
      <ellipse cx="304.43" cy="196.31" rx="64.08" ry="64.18"></ellipse>
      <ellipse cx="64.08" cy="560.23" rx="64.08" ry="64.18"></ellipse>
      <polygon points="283.28 580.84 44.69 580.84 44.69 48.48 313.06 178.43 295.63 214.43 84.69 112.29 84.69 540.84 283.28 540.84 283.28 580.84"></polygon>
    </symbol>

    <symbol id="hi-logo" viewBox="0 0 159.657 40">
        <path class="svg-hue-logo-main" d="M26.691,0c-.263,0-.523,0-.784.012l.07,13.609H10.1A26.108,26.108,0,0,1,16.693,1.733C6.906,5.271,0,13.846,0,23.867A22.465,22.465,0,0,0,7.024,40h9.94A26.2,26.2,0,0,1,10.1,27.832H25.977V40h9.187V1.234A29.527,29.527,0,0,0,26.691,0Z"></path>
        <path class="svg-hue-logo-trunk" d="M37.96,2.316V22.565c2.807.258,5.034,4.249,5.034,9.135,0,3.677-1.262,6.846-3.084,8.3H45.4a23.571,23.571,0,0,0,6.383-16.133A23.842,23.842,0,0,0,37.96,2.316ZM40.717,14.4a1.952,1.952,0,0,1-1.834-2.051A1.952,1.952,0,0,1,40.717,10.3a1.835,1.835,0,0,1,1.668,1.2,1.137,1.137,0,0,0-.943-.537l-.023,0a.576.576,0,0,1,.245.481.506.506,0,1,1-1.006,0,.63.63,0,0,1,.025-.168,1.371,1.371,0,0,0-.408.992,1.244,1.244,0,0,0,1.168,1.308,1.17,1.17,0,0,0,1.058-.754A1.889,1.889,0,0,1,40.717,14.4Z"></path>
        <path class="svg-hue-logo-main" d="M74.5,40c-14.2,0-18.368-4.38-18.368-16.532V1.71h10.6V23.186c0,6.5,2.19,7.841,8.619,7.841H86.364c6.853,0,8.618-1.341,8.618-7.841V1.71h10.456V23.468C105.439,35.62,101.27,40,86.929,40Z"></path>
        <path class="svg-hue-logo-main" d="M159.657,24.74V12.165c0-6.076-3.038-10.455-13.988-10.455h-18.51c-13.493,0-17.379,3.744-17.379,14.907v8.83C109.78,35.62,114.513,40,126.664,40h28.19V32.017h-28.19c-4.945,0-6.358-.848-6.358-5.511V24.74Zm-39.35-8.83c0-5.511,1.7-6.076,6.994-6.076H144.82c3.18,0,4.311.636,4.311,3.18v4.945H120.306Z"></path>
    </symbol>

    <symbol id="hi-markdown" viewBox="0 0 640 640">
      <path d="M593.85,516.92H46.15A46.21,46.21,0,0,1,0,470.77V169.23a46.21,46.21,0,0,1,46.15-46.15H593.85A46.21,46.21,0,0,1,640,169.23V470.77A46.21,46.21,0,0,1,593.85,516.92ZM46.15,153.85a15.4,15.4,0,0,0-15.38,15.38V470.77a15.4,15.4,0,0,0,15.38,15.38H593.85a15.4,15.4,0,0,0,15.38-15.38V169.23a15.4,15.4,0,0,0-15.38-15.38Z"></path>
      <path d="M92.31,424.62V215.38h61.54l61.54,76.92,61.54-76.92h61.54V424.62H276.92v-120l-61.54,76.92-61.54-76.92v120Z"></path>
      <path d="M476.92,424.62,384.62,323.08h61.54V215.38h61.54V323.08h61.54Z"></path>
    </symbol>

    <symbol id="hi-oozie" viewBox="0 0 640 640">
      <path d="M523.82,640H116.18A116.31,116.31,0,0,1,0,523.82V116.18A116.31,116.31,0,0,1,116.18,0H523.82A116.31,116.31,0,0,1,640,116.18V523.82A116.31,116.31,0,0,1,523.82,640ZM116.18,32.05a84.23,84.23,0,0,0-84.13,84.13V523.82a84.23,84.23,0,0,0,84.13,84.13H523.82a84.23,84.23,0,0,0,84.13-84.13V116.18a84.23,84.23,0,0,0-84.13-84.13Z"></path>
      <path d="M320,530c-115.79,0-210-94.21-210-210s94.21-210,210-210,210,94.21,210,210S435.79,530,320,530Zm0-388c-98.15,0-178,79.85-178,178s79.85,178,178,178,178-79.85,178-178S418.15,142,320,142Z"></path>
      <circle cx="320" cy="320" r="34"></circle>
    </symbol>

    <symbol id="hi-oozie-bundle" viewBox="0 0 640 640">
      <path d="M523.82,640H116.18A116.31,116.31,0,0,1,0,523.82V116.18A116.31,116.31,0,0,1,116.18,0H523.82A116.31,116.31,0,0,1,640,116.18V523.82A116.31,116.31,0,0,1,523.82,640ZM116.18,32.05a84.23,84.23,0,0,0-84.13,84.13V523.82a84.23,84.23,0,0,0,84.13,84.13H523.82a84.23,84.23,0,0,0,84.13-84.13V116.18a84.23,84.23,0,0,0-84.13-84.13Z"></path>
      <path d="M320,530c-115.79,0-210-94.21-210-210s94.21-210,210-210,210,94.21,210,210S435.79,530,320,530Zm0-388c-98.15,0-178,79.85-178,178s79.85,178,178,178,178-79.85,178-178S418.15,142,320,142Z"></path>
      <path d="M249.47,197.65h36.75c-.21-.49,0,85.11,0,85.11s16.4-26.12,50.29-26.12c57.43,0,78,46.76,78,88.66,0,51.21-27.3,87-71.89,87-46.19,0-58.36-27.4-58.36-27.4v22.89H249.47Zm128.31,147c0-41.75-24.46-59-46.1-59-42.06,0-46.75,41.16-46.75,59,0,31.05,14.77,58.68,46.75,58.68C376.07,403.34,377.78,352,377.78,344.66Z"></path>
    </symbol>

    <symbol id="hi-oozie-coordinator" viewBox="0 0 640 640">
      <path d="M523.82,640H116.18A116.31,116.31,0,0,1,0,523.82V116.18A116.31,116.31,0,0,1,116.18,0H523.82A116.31,116.31,0,0,1,640,116.18V523.82A116.31,116.31,0,0,1,523.82,640ZM116.18,32.05a84.23,84.23,0,0,0-84.13,84.13V523.82a84.23,84.23,0,0,0,84.13,84.13H523.82a84.23,84.23,0,0,0,84.13-84.13V116.18a84.23,84.23,0,0,0-84.13-84.13Z"></path>
      <path d="M320,530c-115.79,0-210-94.21-210-210s94.21-210,210-210,210,94.21,210,210S435.79,530,320,530Zm0-388c-98.15,0-178,79.85-178,178s79.85,178,178,178,178-79.85,178-178S418.15,142,320,142Z"></path>
      <path d="M361.91,292.44c-1.51-10.32-8.53-31.27-38-31.27-32.57,0-45.78,26.76-45.78,60.61,0,6.88,1.65,57.07,44.17,57.07,30.27,0,37.93-26,39.66-38h36.75c-3.76,29.76-23.45,67.06-76.41,67.06-59.21,0-80.92-45.44-80.92-86.08,0-40.28,19.14-89.63,82.21-89.63,56,0,75.12,38.22,75.12,60.29Z"></path>
    </symbol>

    <symbol id="hi-oozie-workflow" viewBox="0 0 640 640">
      <path d="M523.82,640H116.18A116.31,116.31,0,0,1,0,523.82V116.18A116.31,116.31,0,0,1,116.18,0H523.82A116.31,116.31,0,0,1,640,116.18V523.82A116.31,116.31,0,0,1,523.82,640ZM116.18,32.05a84.23,84.23,0,0,0-84.13,84.13V523.82a84.23,84.23,0,0,0,84.13,84.13H523.82a84.23,84.23,0,0,0,84.13-84.13V116.18a84.23,84.23,0,0,0-84.13-84.13Z"></path>
      <path d="M320,530c-115.79,0-210-94.21-210-210s94.21-210,210-210,210,94.21,210,210S435.79,530,320,530Zm0-388c-98.15,0-178,79.85-178,178s79.85,178,178,178,178-79.85,178-178S418.15,142,320,142Z"></path>
      <path d="M198.78,243.66h39l32.56,124.45H271l31.27-124.45h37.08l30,124.45H370l33.85-124.45h37.4L389,410.34H351.27l-30.95-123.8h-.64L289,410.34H250.36Z"></path>
    </symbol>

    <symbol id="hi-pig" viewBox="0 0 640 640">
      <path d="M177.15,322.12a28.57,28.57,0,1,1,28.58,28.56A28.57,28.57,0,0,1,177.15,322.12Z"></path>
      <path d="M405.71,322.12a28.57,28.57,0,1,1,28.56,28.56A28.56,28.56,0,0,1,405.71,322.12Z"></path>
      <path d="M320,536.15c-40.67,0-79.11-9.63-108.24-27.1-31.38-18.83-48.67-44.63-48.67-72.66s17.28-53.83,48.67-72.66c29.14-17.48,67.58-27.11,108.24-27.11s79.11,9.63,108.24,27.11c31.38,18.83,48.67,44.63,48.67,72.66S459.62,490.22,428.24,509C399.11,526.53,360.67,536.15,320,536.15Zm0-171.41c-69.81,0-128.79,32.81-128.79,71.64S250.19,508,320,508s128.79-32.81,128.79-71.64S389.81,364.74,320,364.74Z"></path>
      <path d="M262.86,436.38c0-15.78,6.4-28.56,14.29-28.56s14.29,12.79,14.29,28.56S285,465,277.15,465,262.86,452.17,262.86,436.38Z"></path>
      <path d="M348.56,436.38c0-15.78,6.4-28.56,14.29-28.56s14.29,12.79,14.29,28.56S370.74,465,362.85,465,348.56,452.17,348.56,436.38Z"></path>
      <path d="M629.24,132l-123-111.91a32.86,32.86,0,0,0-54.53,18.87L442,96.81a335.06,335.06,0,0,0-244,0l-9.71-57.88a32.86,32.86,0,0,0-54.53-18.87L10.76,132a32.86,32.86,0,0,0,10.07,54.88L62,203.09A269.09,269.09,0,0,0,39.32,242.5a255.24,255.24,0,0,0,0,217.31A276.66,276.66,0,0,0,105.1,548C162.6,599.9,238.92,628.5,320,628.5S477.4,599.9,534.9,548a276.66,276.66,0,0,0,65.78-88.16,255.24,255.24,0,0,0,0-217.31A269.1,269.1,0,0,0,578,203.09l41.21-16.25A32.86,32.86,0,0,0,629.24,132ZM151,58.45l24.56,146.39-129.39-51Zm434,292.7C585,482,466.1,588.5,320,588.5S55,482,55,351.15c0-49.19,16.81-94.93,45.53-132.87l72.05,28.4a32.86,32.86,0,0,0,44.46-36L204.8,137.44a292.59,292.59,0,0,1,230.41,0l-12.28,73.23a32.88,32.88,0,0,0,44.46,36l72.05-28.4C568.16,256.22,585,302,585,351.15ZM464.46,204.84,489,58.45l104.83,95.39Z"></path>
    </symbol>

    <symbol id="hi-plus-addon" viewBox="0 0 640 640">
      <circle style="fill:#FFF" cx="483.82" cy="484.82" r="170.68"></circle>
      <circle cx="483.82" cy="484.82" r="155.31"></circle>
      <rect style="fill:#FFF" x="456.92" y="374.09" width="43.79" height="209.46"></rect>
      <rect style="fill:#FFF" x="461.92" y="380.09" width="43.79" height="209.46" transform="translate(968.64 1) rotate(90)"></rect>
    </symbol>

    <symbol id="hi-py" viewBox="0 0 640 640">
      <path d="M316.23,0a436.08,436.08,0,0,0-73,6.23c-64.61,11.42-76.34,35.31-76.34,79.37v58.19H319.62v19.4h-210c-44.37,0-83.23,26.67-95.38,77.41-14,58.16-14.65,94.45,0,155.18C25.1,441,51,473.18,95.39,473.18h52.5V403.42c0-50.39,43.6-94.85,95.38-94.85H395.78c42.45,0,76.34-35,76.34-77.59V85.6c0-41.37-34.9-72.46-76.34-79.37A475.71,475.71,0,0,0,316.23,0Zm-82.57,46.8c15.77,0,28.65,13.09,28.65,29.18A28.65,28.65,0,1,1,205,76C205,59.9,217.83,46.81,233.66,46.81Z"></path>
      <path d="M491.16,163.19V231c0,52.57-44.56,96.8-95.38,96.8H243.27c-41.77,0-76.34,35.76-76.34,77.59V550.77c0,41.37,36,65.72,76.34,77.58,48.33,14.21,94.67,16.79,152.51,0,38.44-11.12,76.34-33.53,76.34-77.58v-58.2H319.61V473.18H548.46c44.38,0,60.92-30.95,76.34-77.41,15.94-47.83,15.26-93.83,0-155.18-11-44.17-31.91-77.41-76.34-77.41h-57.3ZM405.39,531.37a28.81,28.81,0,0,1,28.65,29c0,16.09-12.82,29.19-28.65,29.19s-28.65-13.1-28.65-29.19A28.84,28.84,0,0,1,405.39,531.37Z"></path>
    </symbol>

    <symbol id="hi-r" viewBox="0 0 640 640">
      <path d="M320,496.89c-176.73,0-320-96-320-214.31S143.27,68.27,320,68.27s320,96,320,214.31S496.73,496.89,320,496.89Zm49-344.84c-134.33,0-243.23,65.6-243.23,146.51S234.65,445.08,369,445.08s233.46-44.85,233.46-146.51S503.31,152.06,369,152.06Z"></path>
      <path d="M487.34,400.21s19.37,5.84,30.62,11.54c3.9,2,10.66,5.92,15.53,11.09A41.94,41.94,0,0,1,540.6,433l76.33,128.69-123.37.06L435.87,453.46s-11.81-20.3-19.08-26.18c-6.06-4.91-8.65-6.66-14.64-6.66H372.83l0,141.1-109.17,0V201.34H482.91s99.85,1.8,99.85,96.8S487.34,400.21,487.34,400.21ZM439.86,279.52l-66.09,0,0,61.28,66.12,0s30.62-.09,30.62-31.17C470.48,277.86,439.86,279.52,439.86,279.52Z"></path>
    </symbol>

    <symbol id="hi-share-addon" viewBox="0 0 640 640">
      <path style="fill:#FFF" d="M646.3,538.84c-9.43-30-29.24-48.82-55.26-53.44a83,83,0,1,0-147.45,0c-26,4.62-45.87,23.49-55.41,53.76-2.16,6.75-8.34,32-8.34,58.46,0,46.62,34.31,56.4,63.1,56.4H591.7c39.51,0,63.1-21.09,63.1-56.41C654.8,576.74,648.9,547,646.3,538.84Z"></path>
      <circle cx="517.32" cy="447.4" r="57.42"></circle>
      <path d="M591.71,637H442.94c-43.88,0-45.44-25.47-45.44-39.08,0-23.9,5.68-47.56,7.49-53.24s12.5-42.75,51.4-42.75c1,0,3.58.94,7.15,3.64,24.32,18.36,46.19,20,53.79,20s26.36-.57,53.78-20c3.65-2.59,6.13-3.67,7.15-3.67,39.14,0,49.59,37.22,51.41,42.89s7.48,33.9,7.48,53.15C637.15,611.53,632.73,637,591.71,637Z"></path>
    </symbol>

    <symbol id="hi-share-addon-selected" viewBox="0 0 640 640">
      <path style="fill:#DBE8F1" d="M646.3,538.84c-9.43-30-29.24-48.82-55.26-53.44a83,83,0,1,0-147.45,0c-26,4.62-45.87,23.49-55.41,53.76-2.16,6.75-8.34,32-8.34,58.46,0,46.62,34.31,56.4,63.1,56.4H591.7c39.51,0,63.1-21.09,63.1-56.41C654.8,576.74,648.9,547,646.3,538.84Z"></path>
      <circle cx="517.32" cy="447.4" r="57.42"></circle>
      <path d="M591.71,637H442.94c-43.88,0-45.44-25.47-45.44-39.08,0-23.9,5.68-47.56,7.49-53.24s12.5-42.75,51.4-42.75c1,0,3.58.94,7.15,3.64,24.32,18.36,46.19,20,53.79,20s26.36-.57,53.78-20c3.65-2.59,6.13-3.67,7.15-3.67,39.14,0,49.59,37.22,51.41,42.89s7.48,33.9,7.48,53.15C637.15,611.53,632.73,637,591.71,637Z"></path>
    </symbol>

    <symbol id="hi-scala" viewBox="0 0 640 640">
      <path d="M516.92,147.69V0c0,61.54-393.85,86.15-393.85,98.46V246.15c0,5.29,72.63,12.84,155.5,24.62-82.88,11.77-155.5,19.33-155.5,24.61V443.08c0,5.29,72.63,12.84,155.5,24.62-82.88,11.77-155.5,19.33-155.5,24.61V640c0-12.31,393.85-36.92,393.85-98.46V393.85c0-9-8.37-17.14-22.65-24.61,14.28-7.47,22.65-15.65,22.65-24.62V196.92c0-9-8.37-17.14-22.65-24.61C508.55,164.84,516.92,156.66,516.92,147.69Zm-20,392.41c-1.47,1.79-7.78,7.93-29.66,16-18.13,6.71-43.17,13.39-74.44,19.84-58.61,12.1-127.46,21.21-182.78,28.54-26.12,3.46-48.67,6.44-64.86,9.07l-2.1.34V506.81c15.81-2.87,45.37-6.79,72.21-10.34,20.05-2.65,42.78-5.66,66.11-9,45.44-6.46,111.75-16.6,162.77-30.09,21.87-5.78,39.24-11.69,52.76-18Zm0-196.93c-1,1.17-4,4.17-11.92,8.34-50.32,26.33-185.51,44.23-275,56.08-26.12,3.46-48.67,6.44-64.86,9.07l-2.1.34V309.89c15.81-2.87,45.37-6.79,72.21-10.34,20.05-2.65,42.78-5.66,66.11-9,45.44-6.46,111.75-16.6,162.77-30.09,21.87-5.78,39.24-11.69,52.76-18Zm0-196.92c-1,1.17-4,4.17-11.92,8.34-50.32,26.33-185.51,44.23-275,56.07-26.12,3.46-48.67,6.44-64.86,9.07l-2.1.34V113c15.81-2.87,45.37-6.79,72.21-10.34,57-7.54,135-17.87,197.36-31.51,35.28-7.72,61.82-15.6,81.13-24.09.9-.4,2-.86,3.14-1.4Z"></path>
    </symbol>

    <symbol id="hi-spark" viewBox="0 0 640 640">
      <path d="M292.14,50.44c.33.49.62,1.35,1,1.4,19.84,2.63,32.42,15.35,42.16,31.24,21.6,35.26,42.73,70.81,64.07,106.22,2.74,4.55,4.66,10.86,8.72,13,3.44,1.78,9.49-1.08,14.27-2.33,22-5.76,44-11.73,66-17.51q30.55-8,61.16-15.81c13.39-3.4,26.69-7.52,40.3-9.6,16.17-2.47,31.85.33,43.23,13.46,9.31,10.74,9.34,30.12-.27,44.4-8.89,13.21-19,25.66-29.08,38-13.75,16.81-28,33.23-42,49.78-17.94,21.1-35.72,42.34-54.06,63.07-4.2,4.75-3.79,8.3-1.25,13,9,16.7,18,33.41,26.75,50.21,14.83,28.37,30.59,56.31,44,85.35,15.72,34.13-5.19,70.46-43,74.78-20.52,2.34-38.38-5.36-57-10.69-24.55-7-48.95-14.63-73.4-22A131.23,131.23,0,0,1,391,552.28a6.21,6.21,0,0,1-3.1-4.08c-4.27-24.86-8.36-49.76-12.64-75.54l116.53,32.08c-3-6-5.25-10.77-7.74-15.48q-26-49.23-52-98.42c-3-5.65-6.35-11.15-8.73-17-.88-2.18-.39-6.1,1.09-7.86,20.83-24.77,42-49.27,63-73.9q21.16-24.82,42.14-49.79a14.84,14.84,0,0,0,1.16-2.89c-8.67,2.14-16.53,4-24.33,6q-48.45,12.78-96.87,25.68c-10.26,2.74-20.51,5.54-30.71,8.53-5.47,1.6-8.84.36-11.95-4.91-18-30.48-36.34-60.72-54.59-91-5.91-9.81-11.86-19.6-18.77-31-1.13,3.43-2,5.22-2.31,7.1q-9.47,53.31-18.84,106.64c-2.52,14.23-5,28.47-7.76,42.66a6.63,6.63,0,0,1-3.68,4.3c-39.11,12.54-78.28,24.88-117.44,37.28-12.5,4-25,8-39.4,12.62l123.05,49L202,428.46c-18.09,11.68-36.25,23.26-54.21,35.14-3.46,2.29-6.3,2.32-9.84.72-23.69-10.69-47.55-21-71.1-32-13.65-6.38-27.57-12.69-40-21.05C11,400.63.61,385.23,0,365.56a41.57,41.57,0,0,1,11.27-29.69,79.46,79.46,0,0,1,34.1-22c23.82-8,47.92-15.19,71.87-22.81,28-8.9,56-17.8,83.87-27,2.18-.72,4.54-3.94,5-6.35,3.69-19.21,6.91-38.5,10.35-57.76,3.73-20.88,7.75-41.72,11.23-62.64,2.62-15.76,5.13-31.44,11.85-46.17,8.87-19.45,20.9-35.17,43.5-39.38.52-.1.92-.85,1.38-1.3Z"></path>
    </symbol>

    <symbol id="hi-sqoop" viewBox="0 0 640 640">
      <path d="M320,640a321,321,0,0,1-148.87-36.83L147,590.46l21.75-21.75h-50l-5.62-4.79A319.71,319.71,0,0,1,0,320C0,143.56,143.56,0,320,0A319.64,319.64,0,0,1,485.87,46.7L507.71,60,467,100.67h85.67l6,6.71A319.46,319.46,0,0,1,640,320C640,496.44,496.44,640,320,640ZM215,579.3a276.5,276.5,0,0,0,105,20.49c154.3,0,279.81-125.49,279.81-279.79a279.08,279.08,0,0,0-65.29-179.15H370.06l72.23-72.23A278.32,278.32,0,0,0,320,40.21C165.7,40.21,40.19,165.7,40.19,320a279.44,279.44,0,0,0,93.45,208.52H265.71Z"></path>
    </symbol>

    <symbol id="hi-warning" viewBox="-0.002 0 512.001 449.468">
      <path d="M507.747,413.145L275.868,11.503C271.763,4.392,264.163,0,255.947,0c-8.229,0-15.816,4.392-19.923,11.503L3.09,414.959   c-4.123,7.117-4.123,15.901,0,23.006c4.106,7.117,11.694,11.503,19.922,11.503h465.869c0.045,0,0.084,0,0.112,0   c12.71,0,23.006-10.301,23.006-23.006C511.999,421.503,510.426,416.908,507.747,413.145z M62.857,403.462l193.09-334.444   l193.078,334.438H62.857V403.462z" ></path>
      <path d="M232.941,171.853V274.48c0,12.705,10.301,23.006,23.006,23.006s23.006-10.301,23.006-23.006V171.853   c0-12.705-10.301-23.006-23.006-23.006S232.941,159.148,232.941,171.853z"></path>
      <path d="M255.918,317.813c-7.543,0-14.963,3.044-20.305,8.402c-5.347,5.353-8.452,12.767-8.452,20.355   c0,7.543,3.105,14.957,8.452,20.298c5.354,5.358,12.772,8.459,20.305,8.459c7.583,0,15.002-3.101,20.36-8.459   c5.348-5.353,8.453-12.767,8.453-20.298c0-7.589-3.105-15.003-8.453-20.355C270.926,320.863,263.506,317.813,255.918,317.813z"></path>
    </symbol>
  </svg>

  <script type="text/html" id="document-icon-template">
    <svg class="hi" data-bind="with: document">
      <!-- ko if: isDirectory -->
      <use xlink:href="#hi-folder"></use>
      <!-- /ko -->
      <!-- ko ifnot: isDirectory -->
      <!-- ko switch: definition().type -->
      <!-- ko case: 'link-pigscript' --><use xlink:href="#hi-file-pig"></use><!-- /ko -->
      <!-- ko case: 'link-workflow' --><use xlink:href="#hi-file-job-designer"></use><!-- /ko -->
      <!-- ko case: 'notebook' --><use xlink:href="#hi-file-notebook"></use><!-- /ko -->
      <!-- ko case: 'oozie-bundle2' --><use xlink:href="#hi-file-oozie-bundle"></use><!-- /ko -->
      <!-- ko case: 'oozie-coordinator2' --><use xlink:href="#hi-file-oozie-coordinator"></use><!-- /ko -->
      <!-- ko case: 'oozie-workflow2' --><use xlink:href="#hi-file-oozie-workflow"></use><!-- /ko -->
      <!-- ko case: 'query-hive' --><use xlink:href="#hi-file-hive"></use><!-- /ko -->
      <!-- ko case: 'query-impala' --><use xlink:href="#hi-file-impala"></use><!-- /ko -->
      <!-- ko case: 'search-dashboard' --><use xlink:href="#hi-file-search"></use><!-- /ko -->
      <!-- ko case: $default --><use xlink:href="#hi-file"></use><!-- /ko -->
      <!-- /ko -->
      <!-- /ko -->
      <!-- ko if: $parent.showShareAddon && (isShared() || isSharedWithMe()) && selected() -->
      <use xlink:href="#hi-share-addon-selected"></use>
      <!-- /ko -->
      <!-- ko if: $parent.showShareAddon && (isShared() || isSharedWithMe()) && !selected() -->
      <use xlink:href="#hi-share-addon"></use>
      <!-- /ko -->
    </svg>
  </script>

  <script type="text/html" id="app-icon-template">
    <!-- ko switch: icon -->
    <!-- ko case: 'dashboard' --><svg class="hi"><use xlink:href="#hi-dashboard"></use></svg><!-- /ko -->
    <!-- ko case: 'documents' --><svg class="hi"><use xlink:href="#hi-documents"></use></svg><!-- /ko -->
    <!-- ko case: 'dist-cp' --><i class="fa fa-fw fa-files-o"></i><!-- /ko -->
    <!-- ko case: 'editor' --><svg class="hi"><use xlink:href="#hi-editor"></use></svg><!-- /ko -->
    <!-- ko case: 'hbase' --><svg class="hi"><use xlink:href="#hi-hbase"></use></svg><!-- /ko -->
    <!-- ko case: 'hdfs' --><i class="fa fa-fw fa-folder-o"></i><!-- /ko -->
    <!-- ko case: 'hive' --><svg class="hi"><use xlink:href="#hi-hive"></use></svg><!-- /ko -->
    <!-- ko case: 'impala' --><svg class="hi"><use xlink:href="#hi-impala"></use></svg><!-- /ko -->
    <!-- ko case: 'indexes' --><i class="fa fa-fw fa-search-plus"></i><!-- /ko -->
    <!-- ko case: 'jar' --><svg class="hi"><use xlink:href="#hi-spark"></use></svg><!-- /ko -->
    <!-- ko case: 'java' --><i class="fa fa-fw fa-file-code-o"></i><!-- /ko -->
    <!-- ko case: 'job-designer' --><svg class="hi"><use xlink:href="#hi-job-designer"></use></svg><!-- /ko -->
    <!-- ko case: 'mapreduce' --><i class="fa fa-fw fa-file-archive-o"></i><!-- /ko -->
    <!-- ko case: 'markdown' --><svg class="hi"><use xlink:href="#hi-markdown"></use></svg><!-- /ko -->
    <!-- ko case: 'notebook' --><svg class="hi"><use xlink:href="#hi-file-notebook"></use></svg><!-- /ko -->
    <!-- ko case: 'oozie' --><svg class="hi"><use xlink:href="#hi-oozie"></use></svg><!-- /ko -->
    <!-- ko case: 'oozie-bundle' --><svg class="hi"><use xlink:href="#hi-oozie-bundle"></use></svg><!-- /ko -->
    <!-- ko case: 'oozie-coordinator' --><svg class="hi"><use xlink:href="#hi-oozie-coordinator"></use></svg><!-- /ko -->
    <!-- ko case: 'oozie-workflow' --><svg class="hi"><use xlink:href="#hi-oozie-workflow"></use></svg><!-- /ko -->
    <!-- ko case: 'pig' --><svg class="hi"><use xlink:href="#hi-pig"></use></svg><!-- /ko -->
    <!-- ko case: 'py' --><svg class="hi"><use xlink:href="#hi-py"></use></svg><!-- /ko -->
    <!-- ko case: 'pyspark' --><svg class="hi"><use xlink:href="#hi-spark"></use></svg><!-- /ko -->
    <!-- ko case: 'r' --><svg class="hi"><use xlink:href="#hi-r"></use></svg><!-- /ko -->
    <!-- ko case: 'scala' --><svg class="hi"><use xlink:href="#hi-scala"></use></svg><!-- /ko -->
    <!-- ko case: 'scheduler' --><svg class="hi"><use xlink:href="#hi-oozie"></use></svg><!-- /ko -->
    <!-- ko case: 'security' --><i class="fa fa-fw fa-lock"></i><!-- /ko -->
    <!-- ko case: 'shell' --><i class="fa fa-fw fa-terminal"></i><!-- /ko -->
    <!-- ko case: 'spark' --><svg class="hi"><use xlink:href="#hi-spark"></use></svg><!-- /ko -->
    <!-- ko case: 'sqoop' --><svg class="hi"><use xlink:href="#hi-sqoop"></use></svg><!-- /ko -->
    <!-- ko case: 'sqoop1' --><svg class="hi"><use xlink:href="#hi-sqoop"></use></svg><!-- /ko -->
    <!-- ko case: 'tables' --><i class="fa fa-fw fa-table"></i><!-- /ko -->
    <!-- ko case: 'text' --><i class="fa fa-fw fa-i-cursor"></i><!-- /ko -->
    <!-- ko case: 'yarn' --><svg class="hi"><use xlink:href="#hi-job-designer"></use></svg><!-- /ko -->
    <!-- ko case: $else --><i class="fa fa-fw fa-database"></i><!-- /ko -->
    <!-- /ko -->
  </script>



  <div class="banner">
    <div style="padding: 4px; text-align: center; background-color: #003F6C; height: 24px; color: #DBE8F1">You are accessing a non-optimized Hue, please switch to one of the available addresses: <a href="http://name-node01:8889" style="color: #FFF; font-weight: bold">http://name-node01:8889</a></div>
  </div>


<div class="navigator">
  <div class="pull-right">

  <ul class="nav nav-pills">
    <li class="divider-vertical"></li>
      <li class="hide1380">
        <a title="Manage HDFS" data-rel="navigator-tooltip" href="/filebrowser">
          <i class="fa fa-file"></i>&nbsp;File Browser&nbsp;
        </a>
      </li>
      <li class="hideMoreThan1380">
        <a title="HDFS Browser" data-rel="navigator-tooltip" href="/filebrowser">
          <i class="fa fa-file"></i>
        </a>
      </li>
      <li class="hideMoreThan1380">
      </li>
      
        <li class="hide1380"><a title="Manage jobs" data-rel="navigator-tooltip" href="/jobbrowser/apps">
          <i class="fa fa-list-alt"></i>&nbsp;Job Browser&nbsp;<span id="jobBrowserCount" class="badge badge-warning hide" style="padding-top:0;padding-bottom: 0"></span></a>
        </li>
        <li class="hideMoreThan1380"><a title="Job Browser" data-rel="navigator-tooltip" href="/jobbrowser/apps"><i class="fa fa-list-alt"></i></a></li>
    
    <li class="dropdown">
      <a title="Administration" href="#" data-rel="navigator-tooltip" data-toggle="dropdown" class="dropdown-toggle">
        <i class="fa fa-cogs"></i>&nbsp;vega&nbsp;
        <b class="caret"></b>
      </a>
      <ul class="dropdown-menu pull-right">
      <li>
        <a href="/useradmin/users/edit/vega"><i class="fa fa-fw fa-key"></i>
            Edit Profile
        </a>
      </li>
          <li><a href="/useradmin/users"><i class="fa fa-fw fa-group"></i> Manage Users</a></li>
      <li><a href="javascript:void(0)" onclick="huePubSub.publish('set.hue.version', 4)"><i class="fa fa-fw fa-exchange"></i> Switch to Hue 4</a></li>
      </ul>
    </li>
    <li><a title="Documentation" data-rel="navigator-tooltip" href="/help"><i class="fa fa-question-circle"></i></a></li>
    <li><a title="Sign out" data-rel="navigator-tooltip" href="/accounts/logout/"><i class="fa fa-sign-out"></i></a></li>
  </ul>

  </div>
    <a class="brand nav-tooltip pull-left" title="About Hue" data-rel="navigator-tooltip" href="/about">
      <svg style="margin-top: 2px; margin-left:8px;width: 60px;height: 16px;display: inline-block;">
        <use xlink:href="#hi-logo"></use>
      </svg>
    </a>
     <ul class="nav nav-pills pull-left">
       <li><a title="My documents" data-rel="navigator-tooltip" href="/home" style="padding-bottom:2px!important"><i class="fa fa-home" style="font-size: 19px"></i></a></li>
       
       <li class="dropdown oozie">
         <a title="Query data" data-rel="navigator-tooltip" href="#" data-toggle="dropdown" class="dropdown-toggle"><i class="fa fa-terminal inline-block hideMoreThan950"></i><span class="hide950">Query Editors</span> <b class="caret"></b></a>
         <ul role="menu" class="dropdown-menu">
             <li><a href="/notebook/editor?type=hive"><svg class="svg-app-icon"><use xlink:href="#hi-hive"></use></svg> Hive</a></li>
             <li><a href="/notebook/editor?type=impala"><svg class="svg-app-icon"><use xlink:href="#hi-impala"></use></svg> Impala</a></li>
             <li><a href="/rdbms"><img src="/static/rdbms/art/icon_rdbms_48.7da6405065db.png" class="app-icon" alt="DBQuery icon"/> DB Query</a></li>
             <li><a href="/pig"><svg class="svg-app-icon"><use xlink:href="#hi-pig"></use></svg> Pig</a></li>
             <li><a href="/jobsub"><svg class="svg-app-icon"><use xlink:href="#hi-job-designer"></use></svg> Job Designer</a></li>
         </ul>
       </li>
        
       
       <li class="dropdown">
         <a title="Manage data" data-rel="navigator-tooltip" href="#" data-toggle="dropdown" class="dropdown-toggle"><i class="fa fa-database inline-block hideMoreThan950"></i><span class="hide950">Data Browsers</span> <b class="caret"></b></a>
         <ul role="menu" class="dropdown-menu">
             <li><a href="/metastore"><img src="/static/metastore/art/icon_metastore_48.a6dee13a6698.png" class="app-icon" alt="Metastore icon"/> Metastore Tables</a></li>
             <li><a href="/hbase"><img src="/static/hbase/art/icon_hbase_48.3c45e75ac978.png" class="app-icon" alt="HBase icon"/> HBase</a></li>
         </ul>
       </li>
       <li class="dropdown oozie">
         <a title="Schedule with Oozie" data-rel="navigator-tooltip" href="#" data-toggle="dropdown" class="dropdown-toggle"><i class="fa fa-random inline-block hideMoreThan950"></i><span class="hide950">Workflows</span> <b class="caret"></b></a>
         <ul role="menu" class="dropdown-menu">
           <li class="dropdown-submenu">
             <a href="/oozie/"><img src="/static/oozie/art/icon_oozie_dashboard_48.619f91fff6e8.png" class="app-icon"  alt="Oozie dashboard icon"/> Dashboards</a>
             <ul class="dropdown-menu">
               <li><a href="/oozie/list_oozie_workflows/"><img src="/static/oozie/art/icon_oozie_workflow_48.a57285b8711e.png" class="app-icon" alt="Oozie workflow icon"/> Workflows</a></li>
               <li><a href="/oozie/list_oozie_coordinators/"><img src="/static/oozie/art/icon_oozie_coordinator_48.553b9eb4666e.png" class="app-icon" alt="Oozie coordinator icon"/> Coordinators</a></li>
               <li><a href="/oozie/list_oozie_bundles/"><img src="/static/oozie/art/icon_oozie_bundle_48.6968af617b0b.png" class="app-icon" alt="Oozie bundles icon" /> Bundles</a></li>
             </ul>
           </li>
           
           <li class="dropdown-submenu">
             <a href="/oozie/editor/workflow/list/"><img src="/static/oozie/art/icon_oozie_editor_48.2e01a5230e4e.png" class="app-icon" alt="Oozie editor icon" /> Editors</a>
             <ul class="dropdown-menu">
               <li><a href="/oozie/editor/workflow/list/"><img src="/static/oozie/art/icon_oozie_workflow_48.a57285b8711e.png" class="app-icon" alt="Oozie workflow icon"/> Workflows</a></li>
               <li><a href="/oozie/editor/coordinator/list/"><img src="/static/oozie/art/icon_oozie_coordinator_48.553b9eb4666e.png" class="app-icon" alt="Oozie coordinator icon" /> Coordinators</a></li>
               <li><a href="/oozie/editor/bundle/list/"><img src="/static/oozie/art/icon_oozie_bundle_48.6968af617b0b.png" class="app-icon" alt="Oozie bundle icon" /> Bundles</a></li>
             </ul>
           </li>
         </ul>
       </li>
     </ul>

</div>


<div id="jHueNotify" class="alert alert-dismissible alert-warning hide">
  <button type="button" class="close" data-dismiss="alert">
    <span aria-hidden="true">&times;</span>
    <span class="sr-only">Close</span>
  </button>
  <p class="message"></p>
</div>


<link rel="stylesheet" href="/static/desktop/css/httperrors.ea7615504ef8.css">

<div id="httperror" class="container-fluid">
  <div class="row-fluid">
    <div class="span12 center">
      <div class="error-code">500</div>
    </div>
  </div>
  <div class="row-fluid">
    <div class="
    span8 offset2
    center error-box">
      <h1>Server error.</h1>

      <p>Sorry, there&#39;s been an error. An email was sent to your administrators. Thank you for your patience.</p>
      <br/>

        <a href="javascript:toggleDisplay('#traceback');" title="See the stacktrace">More info...</a>
          &nbsp;|&nbsp;
        <a href="/logs" target="_new" title="View server logs">View logs</a>
        <div id="traceback" class="hide">
          <table class="table table-condensed margin-top-30" style="background: white; border: 1px solid #DDDDDD;">
            <thead>
              <tr>
                <td>File Name</td>
                <td>Line Number</td>
              <td>Function Name</td>
              </tr>
            </thead>
            <tbody>
                <tr>
                  <td>/opt/cloudera/parcels/CDH-5.14.4-1.cdh5.14.4.p0.3/lib/hue/build/env/lib/python2.6/site-packages/Django-1.6.10-py2.6.egg/django/core/handlers/base.py</td>
                  <td>112</td>
                  <td>get_response</td>
                </tr>
                <tr>
                  <td>/opt/cloudera/parcels/CDH-5.14.4-1.cdh5.14.4.p0.3/lib/hue/build/env/lib/python2.6/site-packages/Django-1.6.10-py2.6.egg/django/db/transaction.py</td>
                  <td>371</td>
                  <td>inner</td>
                </tr>
                <tr>
                  <td>/opt/cloudera/parcels/CDH-5.14.4-1.cdh5.14.4.p0.3/lib/hue/desktop/libs/notebook/src/notebook/decorators.py</td>
                  <td>70</td>
                  <td>decorate</td>
                </tr>
                <tr>
                  <td>/opt/cloudera/parcels/CDH-5.14.4-1.cdh5.14.4.p0.3/lib/hue/desktop/libs/notebook/src/notebook/views.py</td>
                  <td>316</td>
                  <td>download</td>
                </tr>
                <tr>
                  <td>/opt/cloudera/parcels/CDH-5.14.4-1.cdh5.14.4.p0.3/lib/hue/desktop/libs/notebook/src/notebook/connectors/base.py</td>
                  <td>228</td>
                  <td>get_api</td>
                </tr>
            </tbody>
          </table>
        </div>

    </div>
  </div>
</div>

<script type="text/javascript">
  function toggleDisplay(selector) {
    $(selector).slideToggle(500);
  }
</script>









<link rel="stylesheet" href="/static/desktop/css/login.5ae2c4f79871.css">

<div id="login-modal" class="modal fade hide">
  <div class="login-container">
    <a href="#" class="close logged-out link-message" data-dismiss="modal" style="display: none; margin: 10px">&times;</a>
    <div class="logo"><img src="/static/desktop/art/hue-login-logo-ellie@2x.3801fb40c54c.png" width="70" height="70" alt="Hue logo"></div>
    <h4 class="muted" style="margin-bottom: 50px; padding: 30px">
      <span class="logged-out link-message" style="display: none">
        Your session expired and your current action requires to
        <a class="reload pointer">
          reload this page
        </a>
      </span>
      <span class="auto-logged-out link-message" style="display: none">
        We did not hear from you for about <strong class="time">-1</strong> and for security reasons Hue logged you out
        <a class="reload pointer margin-top-30">
          Please reload this page to continue
        </a>
      </span>
    </h4>
  </div>
</div>

<script>
  $(document).ready(function () {
    $('.reload').on('click', function () {
      location.reload();
    });
    $('.time').text(($('.time').text()*1000).toHHMMSS(true));
  });
</script>



<iframe id="zoomDetectFrame" style="width: 250px; display: none" ></iframe>



<div id="progressStatus" class="uploadstatus well hide">
  <h4>Upload progress</h4>
  <div id="progressStatusBar" class="hide progress">
    <div class="bar bar-upload"></div>
  </div>
  <div id="progressStatusContent" class="scrollable-uploadstatus">
    <div class="updateStatus"> </div>
  </div>
</div>

<div id="chooseFile" class="modal hide fade" style="z-index: 10000;" tabindex="-1">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h2 class="modal-title">Choose a file</h2>
  </div>
  <div class="modal-body">
    <div id="filechooser"></div>
  </div>
  <div class="modal-footer"></div>
</div>

<div id="rowDetailsModal" class="modal transparent-modal hide" data-backdrop="true" style="width:980px;margin-left:-510px!important;z-index:1071">
  <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h2 class="modal-title">Row details</h2>
  </div>
  <div class="modal-body">
    <table class="table table-condensed">

    </table>
  </div>
</div>

<script type="text/javascript">

  huePubSub.subscribe('set.hue.version', function (version) {
    $.post("/desktop/api2/user_preferences/hue_version", {
      set: version
    }, function (data) {
      if (data && data.status == 0) {
        location.href = version === 3 && 'False' == 'False' ? window.location.pathname.substr(4) + window.location.search : '/hue' + window.location.pathname + window.location.search
      }
      else {
        $.jHueNotify.error("An error occurred while saving your default Hue preference. Please try again...");
      }
    });
  });


  $(document).ready(function () {

    if (window.performance && window.performance.navigation && window.performance.navigation.type === 1) {
      hueAnalytics.convert('hue', 'pageReloaded' + window.location.pathname);
    }

    huePubSub.subscribe('table.row.dblclick', function (data) {
      var $el = $(data.table);
      var $t = $('#rowDetailsModal').find('table');
      $t.html('');
      var html = '';
      $el.find('thead th').each(function (colIdx, col) {
        if (colIdx > 0) {
          var value = '';
          if ($el.hasClass('old-datatable')) {
            value = $el.dataTable().fnGetData(data.idx, colIdx);
          }
          else {
            value = $el.data('data')[data.idx][colIdx];
          }
          var link = typeof value == 'string' && value.match(/^https?:\/\//i) ? '<a href="' + escapeOutput(value) + '" target="_blank">' + value + ' <i class="fa fa-external-link"></i></a>' : value;
          html += '<tr><th width="10%" title="' + $(col).attr("title") + '">' + hueUtils.deXSS($(col).text()) + '</th><td>' + hueUtils.deXSS(link) + '</td></tr>';
        }
      });
      $t.html(html);
      $('#rowDetailsModal').modal('show');
    });

    $('#rowDetailsModal').on('shown', function () {
      $('.modal-backdrop').css('z-index', '1070');
      $('#rowDetailsModal .modal-body').scrollTop(0);
    });

    if ($.fn.editableform) {
      $.fn.editableform.buttons =
          '<button type="submit" class="btn btn-primary editable-submit disable-feedback">' +
          '<i class="fa fa-fw fa-check"></i>' +
          '</button>' +
          '<button type="button" class="btn btn-default editable-cancel">' +
          '<i class="fa fa-fw fa-times"></i>' +
          '</button>';
    }

    $(document).on("info", function (e, msg) {
      $.jHueNotify.info(msg);
    });
    $(document).on("warn", function (e, msg) {
      $.jHueNotify.warn(msg);
    });
    $(document).on("error", function (e, msg) {
      $.jHueNotify.error(msg);
    });

    $($('#zoomDetectFrame')[0].contentWindow).resize(function () {
      $(window).trigger('zoom');
    });


    // global catch for ajax calls after the user has logged out
    var isLoginRequired = false;
    $(document).ajaxComplete(function (event, xhr, settings) {
      if (xhr.responseText === '/* login required */') {
        var isAutoLogout = settings.url == '/desktop/debug/is_idle';
        $('.blurred').removeClass('blurred');

        if ($('#login-modal').length > 0 && $('#login-modal').is(':hidden')) {
          $('#login-modal .link-message').hide();
          if (isAutoLogout) {
            $('body').children(':not(#login-modal)').addClass('blurred');
            $('#login-modal .auto-logged-out').show();
            $('#login-modal').modal({
              backdrop: 'static',
              keyboard: false
            });
          }
          else {
            $('#login-modal .logged-out').show();
            $('#login-modal').modal({
              backdrop: false,
              keyboard: true
            });
          }
          window.setTimeout(function () {
            $('.jHueNotify').remove();
          }, 200);
        }
      }
    });

    $('#login-modal').on('hidden', function () {
      isLoginRequired = false;
      $('.blurred').removeClass('blurred');
    });

    huePubSub.subscribe('hue.login.result', function (response) {
      if (response.auth) {
        if ($('#login-modal #id_username').val() !== LOGGED_USERNAME) { //LOGGED_USERNAME is in common_header
          location.reload();
        }
        else {
          $('#login-modal').modal('hide');
          $.jHueNotify.info('You have signed in successfully!');
          $('#login-modal .login-error').addClass('hide');
        }
      }
      else {
        $('#login-modal .login-error').removeClass('hide');
      }
    });

    $("div.navigator ul.dropdown-menu").css("maxHeight", $(window).height() - 50);
    var scrollableDropdownTimeout = -1;
    $(window).on("resize", function () {
      window.clearTimeout(scrollableDropdownTimeout);
      scrollableDropdownTimeout = window.setTimeout(function () {
        $("div.navigator ul.dropdown-menu").css("maxHeight", $(window).height() - 50);
      }, 500);
    });

    $(".dataTables_wrapper").jHueTableScroller();
    var resetTimeout = -1;
    var pendingRequestsInterval = -1;

    // sets feedback on every primary and danger action across Hue
    // can be disabled adding the class "disable-feedback" to the button
    $(document).on("click", ".btn-primary:not(.disable-feedback), .btn-danger:not(.disable-feedback)", function () {
      if (!$(this).hasClass('disabled')) {
        var text = ($(this).text() != "") ? $(this).text() : $(this).val();
        $(this).attr("data-loading-text", text + " ...");
        $(this).button("loading");
        startPendingRequestsPolling();
        resetTimeout = window.setTimeout(function () {
          resetPrimaryButtonsStatus();
        }, 200);
      }
    });

    $(document).on("hidden", ".modal", function () {
      resetPrimaryButtonsStatus();
    });

    $(window).unload(function () {
      window.clearInterval(pendingRequestsInterval);
      window.clearTimeout(resetTimeout);
    });

    $(document).on("submit", "form", function () {
      hasAjaxBeenSent = false;
      window.setInterval(function () {
        window.clearTimeout(resetTimeout);
      }, 10);
    });

    var hasAjaxBeenSent = false;
    $(document).ajaxSend(function () {
      hasAjaxBeenSent = true;
    });

    function startPendingRequestsPolling() {
      pendingRequestsInterval = window.setInterval(function () {
        if (hasAjaxBeenSent) {
          var activeRequests = 0;
          if (jQuery.ajax.active) {
            activeRequests = jQuery.ajax.active;
          }
          else {
            activeRequests = jQuery.active;
          }
          if (activeRequests == 0) {
            resetPrimaryButtonsStatus();
            window.clearInterval(pendingRequestsInterval);
          }
        }
        else {
          window.clearInterval(pendingRequestsInterval);
        }
      }, 200);
    }

    var pageWidth = $(window).width();
    if ($('.page-content').length > 0) {
      pageWidth = $('.page-content').width();
    }
    else if ($('.content-panel').length > 0) {
      pageWidth = $('.content-panel').width();
      document.styleSheets[0].addRule('.form-actions','margin-left: -11px !important');
    }

    document.styleSheets[0].addRule('.form-actions','width: ' + pageWidth + 'px');
  });

  function resetPrimaryButtonsStatus() {
    $(".btn-primary:not(.disable-feedback), .btn-danger:not(.disable-feedback)").button("reset");
  }

  var _catchEnterKeyOnModals = false;

  $(document).on("shown", ".modal", function () {
    _catchEnterKeyOnModals = true;
    // safe ux enhancement: focus on the first editable input
    $(".modal:visible").find('input:not(.disable-autofocus):visible:first').not($('.jHueFilechooserActions input')).focus();
  });

  $(document).on("hidden", ".modal", function () {
    _catchEnterKeyOnModals = false;
  });

  $(document).on("keyup", function (e) {
    var _code = (e.keyCode ? e.keyCode : e.which);
    if (_catchEnterKeyOnModals && $(".modal").is(":visible") && _code == 13) {
      var _currentModal = $(".modal:visible");
      if (!$('.jHueAutocompleteElement').is(':focus')) {
        if (_currentModal.find(".btn-primary:not(.disable-enter)").length > 0) {
          _currentModal.find(".btn-primary:not(.disable-enter)").click();
        }
        else if (_currentModal.find(".btn-danger:not(.disable-enter)").length > 0) {
          _currentModal.find(".btn-danger:not(.disable-enter)").click();
        }
      }
    }
  });

  if (typeof nv != "undefined") {
    // hides all the nvd3 logs
    nv.log = function () {
    };
  }



    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-40351920-1', 'auto');
    ga('set', 'referrer', 'http://gethue.com'); // we force the referrer to prevent leaking sensitive information

    // We collect only 2 path levels: not hostname, no IDs, no anchors...
    var _pathName = location.pathname;
    var _splits = _pathName.substr(1).split("/");
    _pathName = _splits[0] + (_splits.length > 1 && $.trim(_splits[1]) != "" ? "/" + _splits[1] : "");

    ga('send', 'pageview', {
      'page': '/remote/3.9.0-cdh5.14.4/' + (IS_HUE_4 ? '4/' : '3/') + _pathName
    });

    function trackOnGA(path) {
      if (typeof ga != "undefined" && ga != null) {
        ga('set', 'referrer', 'http://gethue.com'); // we force the referrer to prevent leaking sensitive information
        ga('send', 'pageview', {
          'page': '/remote/3.9.0-cdh5.14.4/' + (IS_HUE_4 ? '4/' : '3/') + path
        });
      }
    }


</script>


  </body>
</html>

